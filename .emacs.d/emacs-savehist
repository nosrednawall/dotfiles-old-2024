;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by ‘savehist’.

(setq savehist-minibuffer-history-variables '(gud-pdb-history coding-system-history string-rectangle-history read-expression-history command-history ess--completing-hist counsel-locate-history sql-product-history sql-server-history sql-database-history sql-user-history read-char-history counsel-git-history transient--history read-number-history compile-history shell-command-history magit-git-command-history magit-revision-history extended-command-history ido-file-history minibuffer-history empty-history read-from-kill-ring-history ivy-history counsel-M-x-history swiper-history ido-buffer-history file-name-history))
(setq gud-pdb-history '("python -m pdb3" "python -m pdb" "python -m pdb prnabnt.py" "python -m pdb "))
(setq coding-system-history '(#("utf-8" 0 5 (ivy-index 16 idx 1033)) #("raw-text-unix" 0 13 (ivy-index 263 idx 1057)) #("iso-8859-6-unix" 0 15 (ivy-index 3 idx 19)) #("latin-1-unix" 0 12 (ivy-index 260 idx 1044)) #("unix" 0 4 (ivy-index 265 idx 1064)) #("iso-8859-6" 0 10 (ivy-index 17 idx 16)) #("prefer-utf-8" 0 12 (ivy-index 20 idx 1058)) #("utf-8-dos" 0 9 (ivy-index 18 idx 1035)) #("utf-8-unix" 0 10 (ivy-index 19 idx 1036)) #("georgian-academy" 0 16 (ivy-index 1 idx 0)) #("nil" 0 3 (ivy-index 0)) #("utf-8-auto" 0 10 (ivy-index 7 idx 1025))))
(setq command-history '((term "/usr/bin/zsh") (kill-buffer "slstatus.c") (pdb "python -m pdb3") (pdb "python -m pdb") (pdb "python -m pdb prnabnt.py") (pdb "python -m pdb ") (kill-buffer "*terminal*") (kill-buffer "emacs.org") (kill-buffer "slstatus") (kill-buffer "config.def.h") (kill-buffer "config.def.h<slstatus>") (kill-buffer "blocks.def.h") (kill-buffer "rofi_network") (neotree-create-node "/home/anderson/git/Educacional/UFPR_Estatistica/CI182_Fundamentos_Programacao_Computadores/exercicios/Aula_11/prnabnt.py") (tetris-end-game) (tetris) (kill-buffer "snake-scores") (snake) (snake-start-game) (pong-quit) (pong) (neotree-create-node "/home/anderson/git/Educacional/UFPR_Estatistica/CI182_Fundamentos_Programacao_Computadores/exercicios/Aula_11/achaSpc.py") (neotree-create-node "/home/anderson/git/Educacional/UFPR_Estatistica/CI182_Fundamentos_Programacao_Computadores/exercicios/Aula_10/achamaior.py") (neotree-create-node "/home/anderson/git/Educacional/UFPR_Estatistica/CI182_Fundamentos_Programacao_Computadores/exercicios/Aula_10/lancheria.py") (neotree-create-node "/home/anderson/git/Educacional/UFPR_Estatistica/CI182_Fundamentos_Programacao_Computadores/exercicios/Aula_10/lanche.py") (neotree-create-node "/home/anderson/git/Educacional/UFPR_Estatistica/CI182_Fundamentos_Programacao_Computadores/exercicios/Aula_09/contapal.py") (neotree-create-node "/home/anderson/git/Educacional/UFPR_Estatistica/CI182_Fundamentos_Programacao_Computadores/exercicios/Aula_09/juntatxt.py") (kill-buffer "*scratch*") (kill-buffer "*EGLOT (UFPR_Estatistica/(python-mode)) events*") (ess-show-call-stack) (scroll-down nil) (magit-reset-hard "HEAD") (magit-reset) (magit-reset-mixed "main") (magit-revert-no-commit "main" '("--edit")) (magit-revert) (kill-buffer "prova_001.r") (kill-buffer "dwm.c") (package-delete #s(package-desc edwina (20221206 1610) "Dynamic window manager" ((emacs (25))) nil nil "/home/anderson/.emacs.d/elpa/edwina-20221206.1610" ((:url . "https://gitlab.com/ajgrf/edwina") (:keywords "convenience") (:maintainer "Alex Griffin" . "a@ajgrf.com") (:maintainers ("Alex Griffin" . "a@ajgrf.com")) (:authors ("Alex Griffin" . "a@ajgrf.com")) (:commit . "f95c31b1de95df7e83338a5d4daf3363df325862")) nil) nil nil) (find-file "~/.emacs.d/emacs.org" t) (find-file "/home/anderson/.dotfiles/.emacs.d/emacs.org") (find-file "/home/anderson/.emacs.d/init.el") (recover-session) (execute-extended-command nil "recover-session" "recover-sess") (set-clipboard-coding-system 'utf-8) (set-clipboard-coding-system 'raw-text-unix) (set-clipboard-coding-system 'iso-8859-6-unix) (set-clipboard-coding-system 'latin-1-unix) (set-clipboard-coding-system 'unix) (set-clipboard-coding-system 'iso-8859-6) (set-clipboard-coding-system 'prefer-utf-8) (set-clipboard-coding-system 'utf-8-dos) (set-clipboard-coding-system 'utf-8-unix) (set-clipboard-coding-system 'georgian-academy) (set-clipboard-coding-system nil) (set-clipboard-coding-system 'utf-8-auto) (electric-indent-mode 'toggle) (neotree-create-node "/home/anderson/.dotfiles/.local/bin/dmenu/dmenu-corrige") (neotree-create-node "/home/anderson/git/Educacional/UFPR_Estatistica/CI182_Fundamentos_Programacao_Computadores/exercicios/Aula_07/poluicao.py") (neotree-create-node "/home/anderson/git/Educacional/UFPR_Estatistica/CI182_Fundamentos_Programacao_Computadores/exercicios/Aula_07/abnt.py") (neotree-create-node "/home/anderson/git/Educacional/UFPR_Estatistica/CI182_Fundamentos_Programacao_Computadores/exercicios/Aula_07/percdna.py") (neotree-create-node "/home/anderson/git/Educacional/UFPR_Estatistica/CI182_Fundamentos_Programacao_Computadores/exercicios/Aula_07/copel.py") (neotree-create-node "/home/anderson/git/Educacional/UFPR_Estatistica/CI182_Fundamentos_Programacao_Computadores/exercicios/Aula_07/003_loja.py") (xclip-mode 'toggle) (package-install 'xclip nil) (simpleclip-mode 'toggle) (simpleclip-paste) (package-install 'simpleclip nil) (set-language-environment "Brazilian Portuguese") (kill-buffer "NotasAula.pdf") (shell nil) (string-rectangle 2806 5317 "") (neotree-create-node "/home/anderson/git/Educacional/UFPR_Estatistica/CE301_Estatistica_Basica/Scripts_R/Analise_Exploratoria_com_R.r") (neotree-create-node "/home/anderson/.dotfiles/.local/bin/brilho_tela_diminui") (neotree-create-node "/home/anderson/.dotfiles/.local/bin/brilho_tela_aumenta") (kill-buffer "config.h") (jupyter-org-kill-block-and-results) (jupyter-org-hydra/body) (jupyter-run-repl "python3" nil t nil t) (jupyter-repl-mode) (jupyter-load-file "/home/anderson/git/Educacional/Programa_Desenvolve_Boticario/014_Python_Data_science/Projeto+inicial+-+Python+para+DS.ipynb") (ein:stop t "http://127.0.0.1:8888") (ein:run "/usr/bin/jupyter" "/home/anderson/git/Educacional/Programa_Desenvolve_Boticario/014_Python_Data_science/" nil #[514 "\300!\207" [pop-to-buffer] 4 "

(fn BUFFER URL-OR-PORT)"] nil) (ein:stop t nil) (ein:notebook-open "http://127.0.0.1:8888" "Projeto_Python_Data_Science.ipynb") (ein:ipynb-mode) (ein:run "/usr/bin/jupyter" "/home/anderson/git/Educacional/Programa_Desenvolve_Boticario/013_Python_Ciencia_Dados/" nil #[514 "\300!\207" [pop-to-buffer] 4 "

(fn BUFFER URL-OR-PORT)"] nil) (ein:run "/usr/bin/jupyter-execute" "/home/anderson/git/Educacional/Programa_Desenvolve_Boticario/013_Python_Ciencia_Dados/" nil #[514 "\300!\207" [pop-to-buffer] 4 "

(fn BUFFER URL-OR-PORT)"] nil) (ein:login "http://127.0.0.1:8888" #[514 "\300!\207" [pop-to-buffer] 4 "

(fn BUFFER URL-OR-PORT)"] nil nil nil) (ein:jupyter-server-stop t nil) (ein:login "http://127.0.0.1:0" #[514 "\300!\207" [pop-to-buffer] 4 "

(fn BUFFER URL-OR-PORT)"] nil nil nil) (ein:login "http://127.0.0.1" #[514 "\300!\207" [pop-to-buffer] 4 "

(fn BUFFER URL-OR-PORT)"] nil nil nil) (package-install 'eink-theme nil) (package-install 'ein nil) (kill-buffer "100-graficos-tabelas-uni.R") (neotree-create-node "/home/anderson/git/Educacional/UFPR_Estatistica/CE301_Estatistica_Basica/Scripts_R/exercicio_medidas_posicao_dispersao.r") (projectile-switch-project nil) (project-switch-project "~/git/Educacional/Programa_Desenvolve_Boticario/") (project-switch-project "~/git/Educacional/UFPR_Estatistica/")))
(setq sql-product-history '(#("ansi" 0 4 (ivy-index 0))))
(setq sql-server-history '("172.17.0.2" "172.17.0.4" "172.17.0.3" "172.17.0.1"))
(setq sql-database-history '(#("alura" 0 5 (ivy-index 0)) #("postgres" 0 8 (ivy-index 0)) #("anderson" 0 8 (ivy-index 0))))
(setq sql-user-history '("postgres" "root"))
(setq read-number-history '("5432" "1"))
(setq compile-history '("make -k "))
(setq shell-command-history '("/usr/bin/zsh" "/usr/bin/bash"))
(setq magit-revision-history '(#("HEAD" 0 4 (ivy-index 3)) #("main" 0 4 (ivy-index 1)) #("5ad9048" 0 7 (ivy-index 0)) #("9e4e37a8e58c4c2695feeb6ce1223b8849c5f7f7" 0 40 (ivy-index 0)) #("e5b577f5f6a6135f1566bf97f4a4c1a2ea06af15" 0 40 (ivy-index 0)) #("origin/main" 0 11 (ivy-index 0)) #("1a51c1d" 0 7 (ivy-index 0)) #("ola mundo" 0 9 (ivy-index 0))))
(setq extended-command-history '("recover-session" "package-install"))
(setq ido-file-history '("prnabnt.py" "achaSpc.py" "achamaior.py" "lancheria.py" "test_while.py" "lanche.py" "contapal.py" "juntatxt.py" "." nil "emacs.org" "init.el" "dmenu-corrige" "poluicao.py" "abnt.py" "percdna.py" "copel.py" "003_loja.py" "Analise_Exploratoria_com_R.r" "brilho_tela_diminui" "brilho_tela_aumenta" "Projeto+inicial+-+Python+para+DS.ipynb" "exercicio_medidas_posicao_dispersao.r" "query_mariadb.sql" "somaMultiplos.py" "calculadora.py" "teste.sql" "onibus.py" "credito.py" "pesoideal.py" "achemaior.py" "medias.py" "multiplos.py" "notas.py" "calcnota.py" "py" "ultimoStr.py" "primaStr.py" "juntaStr.py" "compStr.py" "tamStr.py" "sl-wttr.sh" "sl-wttr.sh~" "degraus.py" "distpontos.py" "eq2graus.py" "volesFera.py" "calculos.py" "escada.py" "capitulo_02_resumo_dados.r" "sxhkdrc" "dmenu-bitwarden" "teste.ini" "config.ini" "teste" "eqSistCramer.py" "eqSist.py" "eqGrau1.py" "convKm.py" "mediaPond.py" "convFarenheit.py" "segundo2horas.py" "idadeDias2anos.py" "idadeAnos2dias.py" "media.py" "calcula_sistemas.py" "equacao_segundo_grau.py" "media_aritimetica.py" "media_aritimetica_3_valores.py" "soma_dois_numeros.py" "calcula_raiz_de_3_numeros.py" "aula004_usando_funcoes.sql" "aula003_sub_consultas.sql" "dmenu-teclados" "aula001.sql" "myinit.org" "tabela_funcionarios.sql" "tabela_aluno.sql" "README.md" "dunstrc" "cpu_status.sh" "music_status_bar.sh" "volume_icon.sh" "battery_status.sh" "advinha_mais.html" "estrelas.html" "media_idades_familiares.html" "media_idades_familiares.hml" "tabuada.html" "ano_copa.html" "jogo_advinha.html" "futebol.html" "imc.html" "programa.html" "texto_puro.html" "primeiro_teste.html"))
(setq minibuffer-history '(".emacs.d/emacs.org" ".local/bin/rofi_network" ".dwm/config.def.h" ".local/bin/dmenu/dmenu-monitor" ".dwm/autostart.sh" ".dwm/config.h" "jupyter-execute" "jupyter notebook" "/home/anderson/.local/bin/jupyter lab" "~/.local/bin/jupyter lab" "jupyter lab" "python3 -m jupyter lab" "jupyter" ".Xresources" "~/.dotfiles/" "djklsklsdsdnj" "dashboard" "/usr/bin/zsh" "select * from curso;" "select * from cursos;" "/usr/bin/bash"))
(setq ivy-history '(#("edwina-20221206.1610" 0 20 (ivy-index 1)) #("xclip" 0 5 (ivy-index 0)) #("simpleclip" 0 10 (ivy-index 1)) #("Brazilian Portuguese" 0 20 (idx 22 ivy-index 22)) #("con" 0 3 (ivy-index 0)) "config.h" #("config." 0 7 (ivy-index 0)) "config.def.h" #("CE301_Estatistica_Basica/" 0 25 (ivy-index 3)) #("/home/anderson/git/Educacional/UFPR_Estatistica/" 0 48 (ivy-index 2)) #("Python 3 (ipykernel)" 0 20 (ivy-index 0)) #("python3" 0 7 (idx 0 ivy-index 0)) #("http://127.0.0.1:8888/Projeto_Python_Data_Science.ipynb" 0 55 (ivy-index 0)) #("8888" 0 4 (ivy-index 0)) #("0" 0 1 (ivy-index 0)) #("eink-theme" 0 10 (ivy-index 4)) #("ein" 0 3 (ivy-index 5)) #("CE301_Estatistica_Basica/Scripts_R/" 0 35 (ivy-index 8)) #("005_Logica_Programacao_Javascript/Logica/jogo_advinha.html" 0 58 (ivy-index 34)) #("~/git/Educacional/Programa_Desenvolve_Boticario/" 0 48 (ivy-index 1)) #("CE300_Estatistica_e_Sociedade/Seminario_001/Impacto_Vacina_Tdap_em_gravidas.pdf" 0 79 (ivy-index 1)) #("~/git/Educacional/UFPR_Estatistica/" 0 35 (ivy-index 2)) #("... (choose a dir)" 0 18 (ivy-index 3)) #("~/.dotfiles/" 0 12 (ivy-index 1)) #("./" 0 2 (ivy-index 0)) #("compilation-disable-input" 0 25 (ivy-index 4)) #("tree-sitter-ispell" 0 18 (ivy-index 1)) #("tree-sitter-langs" 0 17 (ivy-index 0)) #("tree-sitter" 0 11 (ivy-index 4)) #("rainbow-mode" 0 12 (ivy-index 0)) #("101-medidas-uni.R" 0 17 (ivy-index 4)) #("origin" 0 6 (ivy-index 0)) #("master" 0 6 (ivy-index 0)) #("pdf-tools" 0 9 (ivy-index 0)) #("~/git/Educacional/Programa_Desenvolve_Boticario/006_Git_Github/projeto_inicial/" 0 79 (ivy-index 0)) #("dape" 0 4 (ivy-index 0)) #("elpy" 0 4 (ivy-index 1)) #("nyan-mode" 0 9 (ivy-index 0)) #("flycheck" 0 8 (ivy-index 64)) #("emacsql-psql" 0 12 (ivy-index 13)) #("index.html" 0 10 (ivy-index 0)) #("myterminal-controls" 0 19 (ivy-index 10)) #("electric-indent-mode" 0 20 (ivy-index 14)) #("indent-guide" 0 12 (ivy-index 0)) #("web-mode-indent-style" 0 21 (ivy-index 0))))
(setq counsel-M-x-history '(#("^term" 0 5 (ivy-index 0)) "term" #("^ter" 0 4 (ivy-index 0)) #("^proje" 0 6 (ivy-index 2)) "projectile-mode-menu" #("^pdb" 0 4 (ivy-index 0)) "pdb" #("^" 0 1 (ivy-index 0)) #("^pd" 0 3 (ivy-index 0)) #("^tetr" 0 5 (ivy-index 1)) "tetris-end-game" "tetris" "snake" #("^snake" 0 6 (ivy-index 9)) "snake-start-game" #("^sna" 0 4 (ivy-index 0)) #("^pon" 0 4 (ivy-index 1)) "pong-quit" "pong" #("^package-inst" 0 13 (ivy-index 0)) "package-install" #("^ess-" 0 5 (ivy-index 109)) "ess-show-call-stack" #("^scroll-down" 0 12 (ivy-index 0)) "scroll-down" #("^magit-re" 0 9 (ivy-index 0)) "magit-reset" #("^magit" 0 6 (ivy-index 22)) "magit-revert" #("^package" 0 8 (ivy-index 0)) "package-delete" #("^pack" 0 5 (ivy-index 1)) "set-clipboard-coding-system" #("^set-cli" 0 8 (ivy-index 0)) #("^ele" 0 4 (ivy-index 3)) "electric-indent-mode" #("^xcl" 0 4 (ivy-index 0)) "xclip-mode" #("^xc" 0 3 (ivy-index 0)) #("^package-ins" 0 12 (ivy-index 0)) #("^simpl" 0 6 (ivy-index 0)) "simpleclip-mode" "simpleclip-paste" "set-language-environment" #("^set-la" 0 7 (ivy-index 0)) #("^shell" 0 6 (ivy-index 0)) "shell" #("^jupyter-" 0 9 (ivy-index 57)) "jupyter-org-kill-block-and-results" #("^jupyter" 0 8 (ivy-index 11)) "jupyter-org-hydra/body" "jupyter-run-repl" "jupyter-repl-mode" #("^jupyter-re" 0 11 (ivy-index 0)) "jupyter-load-file" #("^jupyter-run" 0 12 (ivy-index 0)) "ein:stop" "ein:run" #("^ein" 0 4 (ivy-index 4)) "ein:ipynb-mode" "ein:login" "ein:jupyter-server-stop" #("^ein:l" 0 6 (ivy-index 0)) #("^package-install" 0 16 (ivy-index 0)) #("^projectile" 0 11 (ivy-index 0)) "projectile-switch-project" #("^projectile-s" 0 13 (ivy-index 1)) #("^packa" 0 6 (ivy-index 0)) #("^projectile-mo" 0 14 (ivy-index 1)) #("^projectile-co" 0 14 (ivy-index 2)) "projectile-configure-project" #("^projectile-" 0 12 (ivy-index 0)) "projectile-skel-dir-locals" #("^sql-maria" 0 10 (ivy-index 0)) "sql-mariadb" "sql-postgres" #("^sql-pos" 0 8 (ivy-index 0)) #("^sql-mari" 0 9 (ivy-index 0)) #("^rainbo" 0 7 (ivy-index 0)) "rainbow-mode" #("^python-mode" 0 12 (ivy-index 0)) "python-mode" #("^python" 0 7 (ivy-index 0)) #("^eglo" 0 5 (ivy-index 0)) "eglot" #("packa" 0 5 (ivy-index 0)) #("^rain" 0 5 (ivy-index 0)) #("^magit-" 0 7 (ivy-index 24)) "magit-status" #("^pdf-view" 0 9 (ivy-index 0)) "pdf-view-mode" #("^pdf-vi" 0 7 (ivy-index 0)) #("^pdf-t" 0 6 (ivy-index 6)) "pdf-tools-enable-minor-modes" #("^try" 0 4 (ivy-index 0)) "try" #("^r" 0 2 (ivy-index 1)) "R" #("^R" 0 2 (ivy-index 1)) "R-mode" #("^dape" 0 5 (ivy-index 0)) "dape-continue" #("^elpy-mo" 0 8 (ivy-index 1)) "elpy-mode" #("^elpy-ena" 0 9 (ivy-index 0)) "elpy-enable" #("^elpy-dis" 0 9 (ivy-index 0)) "elpy-disable" #("^elpy" 0 5 (ivy-index 0)) #("^elpy-shell-send" 0 16 (ivy-index 2)) "elpy-shell-send-file" "elpy-shell-send-buffer" "elpy-shell-send-statement-and-step" #("^elpy-con" 0 9 (ivy-index 0)) "elpy-config" #("^elpy-s" 0 7 (ivy-index 11)) "elpy-shell-send-defun-and-go" #("^run-p" 0 6 (ivy-index 1)) "run-python" #("^sql-post" 0 9 (ivy-index 0)) #("^unta" 0 5 (ivy-index 0)) "untabify" #("^elpy-mode" 0 10 (ivy-index 0)) #("^elpy-mod" 0 9 (ivy-index 1)) #("^auto-com" 0 9 (ivy-index 2)) "auto-complete-mode" #("^auto" 0 5 (ivy-index 3)) "auto-complete" #("^elpy-c" 0 7 (ivy-index 1)) #("^elpy-conf" 0 10 (ivy-index 0)) #("^elpy-confi" 0 11 (ivy-index 0)) #("^nyan" 0 5 (ivy-index 4)) "nyan-start-animation" "nyan-start-music" "nyan-mode" "nyan-scroll-buffer" #("^nya" 0 4 (ivy-index 1)) "nyan-toggle-wavy-trail" #("nyan-" 0 5 (ivy-index 7)) #("^spaceline-toggle-n" 0 19 (ivy-index 1)) "spaceline-toggle-nyan-cat-on" "spaceline-toggle-nyan-cat" "elpy-autopep8-fix-code" #("^elpy-menu" 0 10 (ivy-index 0)) "elpy-menu" #("^elpy-" 0 6 (ivy-index 16)) "elpy-check" #("^elpy-config" 0 12 (ivy-index 0)) #("^elpy-en" 0 8 (ivy-index 0)) #("^pyve" 0 5 (ivy-index 5)) "pyvenv-workon" #("^pyvenv" 0 7 (ivy-index 6)) "pyvenv-activate" #("^elpy-rpc" 0 9 (ivy-index 1)) "elpy-rpc-restart" #("^elpy-rp" 0 8 (ivy-index 1)) #("^ansi" 0 5 (ivy-index 1)) "ansi-term" #("^python-mo" 0 10 (ivy-index 0)) #("^sql" 0 4 (ivy-index 1)) #("^conf-mo" 0 8 (ivy-index 0)) "conf-mode" #("linu" 0 4 (ivy-index 0)) "linum-mode" #("^sql-hel" 0 8 (ivy-index 0)) "sql-help" #("^sql-set" 0 8 (ivy-index 1)) "sql-set-sqli-buffer" "sql-set-product" #("^sql-mode" 0 9 (ivy-index 0)) "sql-mode" #("^markdown-pre" 0 13 (ivy-index 0)) "markdown-preview-cleanup" #("^markdown-previ" 0 15 (ivy-index 1)) "markdown-preview" "markdown-preview-mode" "markdown-preview-open-browser" #("^markdown-vi" 0 12 (ivy-index 0)) "markdown-view-mode" #("^markdown-v" 0 11 (ivy-index 0)) #("^markdown-p" 0 11 (ivy-index 0)) #("^markdown-mode" 0 14 (ivy-index 2)) "markdown-mode" #("^markdo" 0 7 (ivy-index 2)) #("^ra" 0 3 (ivy-index 1)) #("^conf-mod" 0 9 (ivy-index 0)) #("^myter" 0 6 (ivy-index 1)) "myterminal-controls-open-controls" #("^magit-rebase" 0 13 (ivy-index 2)) "magit-rebase" #("^magit-log-current" 0 18 (ivy-index 0)) "magit-log-current" #("^magit-log --g" 0 14 (ivy-index 0)) "magit-log:--grep" #("^magit-lo" 0 9 (ivy-index 1)) "magit-log:-G" #("^magit-log" 0 10 (ivy-index 8)) "magit-log" #("^centaur-tabs-mode" 0 18 (ivy-index 0)) "centaur-tabs-mode" #("^centaur-tabs-g" 0 15 (ivy-index 0)) "centaur-tabs-group-buffer-groups" #("^magit-merge" 0 12 (ivy-index 3)) "magit-merge" #("^magit-status" 0 13 (ivy-index 2)) #("^rainb" 0 6 (ivy-index 0)) #("^ansi-" 0 6 (ivy-index 1)) #("^conf-mode" 0 10 (ivy-index 0)) #("^magit-stat" 0 11 (ivy-index 2)) #("^ansi-te" 0 8 (ivy-index 0)) #("^java" 0 5 (ivy-index 1)) "javascript-mode" #("^customize-va" 0 13 (ivy-index 0)) "customize-variable" #("^indent-gui" 0 11 (ivy-index 0)) "indent-guide-mode" #("^package-lis" 0 12 (ivy-index 0)) "package-list-packages" #("^web-mode" 0 9 (ivy-index 82)) "web-mode" #("ansi" 0 4 (ivy-index 2)) #("^cua" 0 4 (ivy-index 5)) "cua-toggle-rectangle-mark" "cua-paste" "cua-paste-pop" "cua-cut-region" #("^cua-sc" 0 7 (ivy-index 1)) "cua-scroll-down" #("^cua-s" 0 6 (ivy-index 2)) "cua-selection-mode"))
(setq swiper-history '(#("updatebars" 0 10 (ivy-index 3)) #(" updatebars(void)" 0 1 (display "2467 " swiper-line-number 2467) 1 11 (face font-lock-function-name-face fontified t) 11 12 (c-type c-decl-arg-start fontified t) 12 16 (face font-lock-type-face fontified t) 16 17 (fontified t)) #("togglebar" 0 9 (ivy-index 1)) #(" togglebar(const Arg *arg)" 0 1 (display "2300 " swiper-line-number 2300) 1 10 (face font-lock-function-name-face fontified t) 10 11 (c-type c-decl-arg-start fontified t) 11 16 (face font-lock-keyword-face fontified t) 16 17 (fontified t) 17 20 (face font-lock-type-face fontified t) 20 22 (fontified t) 22 25 (face font-lock-variable-name-face fontified t) 25 26 (fontified t)) #("setup" 0 5 (ivy-index 1)) #(" setup(void)" 0 1 (display "2094 " swiper-line-number 2094) 1 6 (face font-lock-function-name-face fontified t) 6 7 (c-type c-decl-arg-start fontified t) 7 11 (face font-lock-type-face fontified t) 11 12 (fontified t)) #("drawbar" 0 7 (ivy-index 2)) #(" drawbar(Monitor *m)" 0 1 (display "1005 " swiper-line-number 1005) 1 8 (face font-lock-function-name-face fontified t) 8 9 (c-type c-decl-arg-start fontified t) 9 16 (face font-lock-type-face fontified t) 16 18 (fontified t) 18 19 (face font-lock-variable-name-face fontified t) 19 20 (fontified t)) #("configureno" 0 11 (ivy-index 3)) #(" configurenotify(XEvent *e)" 0 1 (swiper-line-number 687 display "687  ") 1 16 (fontified t face font-lock-function-name-face) 16 17 (fontified t c-type c-decl-arg-start) 17 23 (fontified t face font-lock-type-face) 23 25 (fontified t) 25 26 (fontified t face font-lock-variable-name-face) 26 27 (fontified t)) #("sp" 0 2 (ivy-index 0)) #("  * whenever a new event has been fetched. This allows event dispatching" 0 1 (swiper-line-number 10 display "10   ") 1 72 (fontified t face font-lock-comment-face c-in-sws t)) #("updatege" 0 8 (ivy-index 4)) #(" updategeom(void)" 0 1 (swiper-line-number 2511 display "2511 ") 1 11 (fontified t face font-lock-function-name-face) 11 12 (fontified t c-type c-decl-arg-start) 12 16 (fontified t face font-lock-type-face) 16 17 (fontified t)) "indent" #("indent" 0 6 (ivy-index 16)) #("   indent-guide                   20160630       available    melpa-stable show vertical lines to guide indentation" 0 1 (swiper-line-number 1665 display "1665 ") 1 3 (tabulated-list-id #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) tabulated-list-entry [("indent-guide" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) action package-menu-describe-package) #("20160630" 0 8 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa-stable" 0 12 (font-lock-face package-status-available)) #("show vertical lines to guide indentation" 0 40 (font-lock-face package-description))]) 3 15 (button (t) category default-button face package-name font-lock-face package-name follow-link t package-desc #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) action package-menu-describe-package tabulated-list-column-name "Package" tabulated-list-id #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) tabulated-list-entry [("indent-guide" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) action package-menu-describe-package) #("20160630" 0 8 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa-stable" 0 12 (font-lock-face package-status-available)) #("show vertical lines to guide indentation" 0 40 (font-lock-face package-description))]) 15 16 (tabulated-list-column-name "Package" tabulated-list-id #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) tabulated-list-entry [("indent-guide" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) action package-menu-describe-package) #("20160630" 0 8 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa-stable" 0 12 (font-lock-face package-status-available)) #("show vertical lines to guide indentation" 0 40 (font-lock-face package-description))]) 16 34 (display (space :align-to 33) tabulated-list-column-name "Package" tabulated-list-id #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) tabulated-list-entry [("indent-guide" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) action package-menu-describe-package) #("20160630" 0 8 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa-stable" 0 12 (font-lock-face package-status-available)) #("show vertical lines to guide indentation" 0 40 (font-lock-face package-description))]) 34 42 (font-lock-face package-status-available help-echo #("Version: 20160630" 9 17 (font-lock-face package-status-available)) tabulated-list-column-name "Version" tabulated-list-id #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) tabulated-list-entry [("indent-guide" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) action package-menu-describe-package) #("20160630" 0 8 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa-stable" 0 12 (font-lock-face package-status-available)) #("show vertical lines to guide indentation" 0 40 (font-lock-face package-description))]) 42 43 (tabulated-list-column-name "Version" tabulated-list-id #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) tabulated-list-entry [("indent-guide" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) action package-menu-describe-package) #("20160630" 0 8 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa-stable" 0 12 (font-lock-face package-status-available)) #("show vertical lines to guide indentation" 0 40 (font-lock-face package-description))]) 43 49 (display (space :align-to 48) tabulated-list-column-name "Version" tabulated-list-id #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) tabulated-list-entry [("indent-guide" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) action package-menu-describe-package) #("20160630" 0 8 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa-stable" 0 12 (font-lock-face package-status-available)) #("show vertical lines to guide indentation" 0 40 (font-lock-face package-description))]) 49 58 (font-lock-face package-status-available help-echo #("Status: available" 8 17 (font-lock-face package-status-available)) tabulated-list-column-name "Status" tabulated-list-id #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) tabulated-list-entry [("indent-guide" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) action package-menu-describe-package) #("20160630" 0 8 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa-stable" 0 12 (font-lock-face package-status-available)) #("show vertical lines to guide indentation" 0 40 (font-lock-face package-description))]) 58 59 (tabulated-list-column-name "Status" tabulated-list-id #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) tabulated-list-entry [("indent-guide" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) action package-menu-describe-package) #("20160630" 0 8 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa-stable" 0 12 (font-lock-face package-status-available)) #("show vertical lines to guide indentation" 0 40 (font-lock-face package-description))]) 59 62 (display (space :align-to 61) tabulated-list-column-name "Status" tabulated-list-id #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) tabulated-list-entry [("indent-guide" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) action package-menu-describe-package) #("20160630" 0 8 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa-stable" 0 12 (font-lock-face package-status-available)) #("show vertical lines to guide indentation" 0 40 (font-lock-face package-description))]) 62 69 (font-lock-face package-status-available help-echo #("Archive: melpa-stable" 9 21 (font-lock-face package-status-available)) tabulated-list-column-name "Archive" tabulated-list-id #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) tabulated-list-entry [("indent-guide" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) action package-menu-describe-package) #("20160630" 0 8 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa-stable" 0 12 (font-lock-face package-status-available)) #("show vertical lines to guide indentation" 0 40 (font-lock-face package-description))]) 69 74 (font-lock-face package-status-available display "…" help-echo #("Archive: melpa-stable" 9 21 (font-lock-face package-status-available)) tabulated-list-column-name "Archive" tabulated-list-id #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) tabulated-list-entry [("indent-guide" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) action package-menu-describe-package) #("20160630" 0 8 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa-stable" 0 12 (font-lock-face package-status-available)) #("show vertical lines to guide indentation" 0 40 (font-lock-face package-description))]) 74 75 (tabulated-list-column-name "Archive" tabulated-list-id #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) tabulated-list-entry [("indent-guide" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) action package-menu-describe-package) #("20160630" 0 8 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa-stable" 0 12 (font-lock-face package-status-available)) #("show vertical lines to guide indentation" 0 40 (font-lock-face package-description))]) 75 115 (font-lock-face package-description help-echo #("Description: show vertical lines to guide indentation" 13 53 (font-lock-face package-description)) tabulated-list-column-name "Description" tabulated-list-id #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) tabulated-list-entry [("indent-guide" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) action package-menu-describe-package) #("20160630" 0 8 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa-stable" 0 12 (font-lock-face package-status-available)) #("show vertical lines to guide indentation" 0 40 (font-lock-face package-description))])) "scheme[SchemeNorm][ColBg" #("scheme[SchemeNorm][ColB" 0 23 (ivy-index 8)) #(" 	XSetForeground(dpy, drw->gc, scheme[SchemeNorm][ColBg].pixel);" 0 1 (swiper-line-number 2761 display "2761 ") 1 2 (fontified t c-is-sws t) 2 3 (c-is-sws t fontified t) 3 49 (fontified t) 49 50 (fontified t) 50 51 (fontified t) 51 52 (fontified t) 52 53 (fontified t) 53 54 (fontified t) 54 55 (fontified t) 55 56 (fontified t) 56 57 (fontified t) 57 58 (fontified t) 58 59 (fontified t) 59 60 (fontified t) 60 61 (fontified t) 61 62 (fontified t) 62 63 (fontified t) 63 64 (fontified t rear-nonsticky t)) #("updatesys" 0 9 (ivy-index 18)) #(" updatesystray(void)" 0 1 (swiper-line-number 2700 display "2700 ") 1 14 (fontified t face font-lock-function-name-face) 14 15 (fontified t c-type c-decl-arg-start) 15 19 (fontified t face font-lock-type-face) 19 20 (fontified t)) #("mai" 0 3 (ivy-index 0)) #(" main(int argc, char *argv[])" 0 1 (swiper-line-number 814 display "814 ") 1 5 (fontified t face font-lock-function-name-face) 5 6 (fontified t c-type c-decl-arg-start) 6 9 (fontified t face font-lock-type-face) 9 10 (fontified t) 10 14 (fontified t face font-lock-variable-name-face) 14 15 (fontified t c-type c-decl-arg-start) 15 16 (fontified t) 16 20 (fontified t face font-lock-type-face) 20 22 (fontified t) 22 26 (fontified t face font-lock-variable-name-face) 26 29 (fontified t))))
(setq ido-buffer-history '("slstatus.c" "*terminal*" "emacs.org" "slstatus" "config.def.h" "config.def.h<slstatus>" "blocks.def.h" "rofi_network" "snake-scores" "*scratch*" "*EGLOT (UFPR_Estatistica/(python-mode)) events*" "prova_001.r" "dwm.c" "NotasAula.pdf" "config.h" "100-graficos-tabelas-uni.R" "*SQL: MariaDB*" "achemaior.py" "sl-wttr.sh" "*Python*" "dmenu-docker-images" "dmenu-power" "dmenu-atalhos-programas" "equacao_segundo_grau.py" "media_aritimetica_3_valores.py" "calcula_raiz_de_3_numeros.py" "teste.py" "*Elpy Config*" "*Customize Option: Python Flymake Command*" "if_monitor.sh" "*ansi-term*" "dmenu-teclados" "tabela_funcionarios.sql" "aula001.sql" "banco-inicial.sql" "*SQL: Postgres*" "dmenu-docker-compose.sh" "HELLO" "index.theme" "icon-theme.cache" "]" "action-unavailable-symbolic.svg" "autostart.sh" "dmenu-window" "battery_status.sh" "init.el" "dunstrc" "*Compile-Log*" "picom.conf" "index.html" "config.mk" "Untitled<2>" "Untitled<3>" "Untitled" "myinit.org" "config" "muta_microfone" "config.def.h<.dwm>" "block-battery" "dwmbar-powerline" "diminui_volume" "muta_volume" "*Messages*" "*Async-native-compile-log*" "*Warnings*" "magit-process: .dotfiles" "magit: .dotfiles" "volume_icon.sh" "app.js" "x.c" "x.c.rej" "config.def.h.rej" "config.def.h<st>"))
(setq file-name-history '(#("/home/anderson/.dwm/autostart_blocking.sh" 0 41 (ivy-index 1)) #("/home/anderson/.Xresources" 0 26 (ivy-index 0)) #("/home/anderson/.dotfiles/.config/dwmblocks/blocks.def.h" 0 55 (ivy-index 7)) #("/home/anderson/.dotfiles/.config/slstatus/" 0 42 (ivy-index 0)) "~/.emacs.d/emacs.org" "/home/anderson/.dotfiles/.emacs.d/emacs.org" "/home/anderson/.emacs.d/init.el" #("/home/anderson/.dotfiles/" 0 25 (ivy-index 0)) #("/home/anderson/.xinitrc" 0 23 (ivy-index 0)) #("/home/anderson/git/Educacional/UFPR_Estatistica/CI182_Fundamentos_Programacao_Computadores/" 0 91 (ivy-index 0)) #("/home/anderson/git/Educacional/UFPR_Estatistica/CI182_Fundamentos_Programacao_Computadores/exercicios/teste_while.py" 0 116 (ivy-index 0)) #("/home/anderson/.emacs.d/emacs.org" 0 33 (ivy-index 3)) #("/home/anderson/.emacs.d/projects" 0 32 (ivy-index 19)) #("/home/anderson/git/Educacional/Programa_Desenvolve_Boticario/013_Python_Ciencia_Dados/Projeto_Python_Data_Science.ipynb" 0 119 (ivy-index 2)) #("/home/anderson/git/Educacional/UFPR_Estatistica/SobreviventesTitanic.r" 0 70 (ivy-index 0)) #("/home/anderson/git/Educacional/Programa_Desenvolve_Boticario/007_PostgreSQL/" 0 76 (ivy-index 9)) #("/home/anderson/git;Edu" 0 22 (ivy-index 0)) #("/home/anderson/git/Educacional/UFPR_Estatistica/CE301_Estatistica_Basica/histograma_em_r.r" 0 90 (ivy-index 0)) "~/git/Educacional/Programa_Desenvolve_Boticario/012_PowerBI_Tratamento_Dados/power_query_dump.sql" "~/git/win10vm/win10.xml" #("/home/anderson/.dwm/autostart.sh" 0 32 (ivy-index 0)) #("/home/anderson/.config/slstatus/" 0 32 (ivy-index 0)) #("/home/anderson/git/Educacional/UFPR_Estatistica/CE301_Estatistica_Basica/100-graficos-tabelas-uni.R" 0 99 (ivy-index 14)) #("/home/anderson/git/Educacional/UFPR_Estatistica/CE301_Estatistica_Basica/Livro_Estatitica_Basica/testes.r" 0 105 (ivy-index 0)) #("/home/anderson/git/Educacional/UFPR_Estatistica/CE301_Estatistica_Basica/" 0 73 (ivy-index 4)) #("/var/spool/cron/crontabs/anderson" 0 33 (ivy-index 0)) #("/var/spool/cron/crontabs/" 0 25 (ivy-index 2)) "/tmp/crontab.uSJaXd/crontab" "/tmp/crontab.vtEVge/crontab" "/home/anderson/.dotfiles/.local/bin/sl-wttr.sh~" #("/home/anderson/git/Educacional/UFPR_Estatistica/CE301_Estatistica_Basica/101-medidas-uni.R" 0 90 (ivy-index 0)) #("/home/anderson/.dwm/config.def.h" 0 32 (ivy-index 0)) #("/home/anderson/git/Educacional/Programa_Desenvolve_Boticario/008_Postgres_views_funcoes_consultas/dados-aula-2.sql" 0 114 (ivy-index 5)) #("/home/anderson/git/Educacional/UFPR_Estatistica/CI182_Fundamentos_Programacao_Computadores/calcula_raiz_de_3_numeros.py" 0 119 (ivy-index 0)) #("/home/anderson/.dotfiles/.config/slstatus/config.def.h" 0 54 (ivy-index 0)) #("/home/anderson/.local/bin/battery_status.sh" 0 43 (ivy-index 1)) #("/home/anderson/teste.py" 0 23 (ivy-index 0)) #("/home/anderson/.dotfiles/.local/bin/dmenu/" 0 42 (ivy-index 2)) #("/home/anderson/.dotfiles/.local/bin/dmenu/dmenu-docker-lista-funcionando" 0 72 (ivy-index 0)) #("/home/anderson/.dotfiles/.local/bin/dmenu/dmenu-atalhos-programas" 0 65 (ivy-index 0)) #("/home/anderson/.dotfiles/.local/bin/dmenu/dmenu-docker-images" 0 61 (ivy-index 4)) #("/home/anderson/dmenu-docker-compose.sh" 0 38 (ivy-index 2)) #("/home/anderson/.dotfiles/.dwm/config.def.h" 0 42 (ivy-index 0)) "/home/anderson/.emacs.d/myinit.org" #("/home/anderson/git/Educacional/Programa_Desenvolve_Boticario/007_PostgreSQL/tabela_funcionarios.sql" 0 99 (ivy-index 9)) "/home/anderson/.dotfiles/.config/dunst/dunstrc" #("/home/anderson/.local/bin/volume_icon.sh" 0 40 (ivy-index 6)) #("/home/anderson/git/Educacional/Programa_Desenvolve_Boticario/006_Git_Github/projeto_inicial/index.html" 0 102 (ivy-index 7)) #("/home/anderson/git/Educacional/Programa_Desenvolve_Boticario/006_Git_Github/projeto_inicial/app.js" 0 98 (ivy-index 3)) #("/home/anderson/.config/picom.conf" 0 33 (ivy-index 3)) #("/home/anderson/.dotfiles/.dwm/" 0 30 (ivy-index 0)) #("/home/anderson/.dotfiles/.Xresources" 0 36 (ivy-index 0)) #("/home/anderson/.config/st/config.def.h" 0 38 (ivy-index 0)) "~/.dotfiles/.emacs.d/init.el"))
(setq projectile-project-command-history '#s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data ()))
(setq kill-ring '(#("^c#fabd2f^" 0 2 (fontified t face font-lock-string-face) 2 8 (fontified t face font-lock-string-face) 8 9 (fontified t rear-nonsticky t face font-lock-string-face) 9 10 (fontified t face font-lock-string-face)) #("#fabd2f" 0 7 (face font-lock-string-face fontified t)) #("
static const struct arg args[] = {
	/* function                     format					argument */
	{ run_command,		\"^b#282828^^c#629464^ %s\",			\"bash ~/.local/bin/music_status_bar.sh\"},
	{ run_command,		\"^b#282828^^c#b16286^ %s\",			\"bash ~/.local/bin/sl-wttr.sh\"},
	{ run_command,		\"^b#282828^^c#fb4934^ %s\",			\"bash ~/.local/bin/cpu_status.sh\"},
	//{ cpu_perc,		\"^b#282828^^c#fb4934^ %.3s󰏰 \",			NULL},
	//{ run_command,	\"^b#282828^^c#fb4934^%s\",			\"sensors | awk '/edge/ {print$2}' | sed 's/+//'\"},
	{ ram_perc,		\"^b#282828^^c#B8bb26^  %s󰏰 \",			NULL},
	{ disk_perc,		\"^b#282828^^c#45858B^ 󰋊 %s󰏰 \",			\"/\" },
	{ wifi_essid,		\"^b#282828^^c#fabd2f^  %s\",			\"wlan0\" },
	{ wifi_perc,		\"^b#282828^^c#fabd2f^ %s󰏰 \",			\"wlan0\" },
	//{ netspeed_rx,		\"^b#282828^^c#fabd2f^   %s\",			\"wlan0\" },
	//{ netspeed_tx,		\"^b#282828^^c#fabd2f^   %s\",			\"wlan0\" },
	//{ battery_perc,	\"^b#282828^^c#b16286^  %s󰏰 \",			\"BAT1\" },
	{ run_command,		\"%s\",						\"bash ~/.local/bin/battery_status.sh\" },
	{ run_command,		\"^b#282828^^c#dfbf8e^ %s\",			\"bash ~/.local/bin/volume_icon.sh\" },
	{ run_command,		\"^b#282828^^c#45858b^ 󰌌 %s\",			\"setxkbmap -query | grep layout | awk '{print$2}'\"},
	{ run_command,		\"^b#282828^^c#d65d0e^  %s\",			\"date +'%a %d %b %Y'\" },
	{ run_command,		\"^b#282828^^c#689d6a^ 󰥔 %s \",			\"date +'%H:%M'\"},
};
" 0 1 (fontified t) 1 7 (fontified t face font-lock-keyword-face) 7 8 (fontified t) 8 13 (fontified t face font-lock-keyword-face) 13 14 (fontified t) 14 20 (fontified t face font-lock-keyword-face) 20 21 (fontified t) 21 23 (fontified t face font-lock-type-face) 23 24 (fontified t c-type c-decl-id-start face font-lock-type-face) 24 25 (fontified t) 25 29 (fontified t face font-lock-variable-name-face) 29 36 (fontified t) 36 37 (fontified t c-in-sws t c-is-sws t) 37 38 (fontified t c-in-sws t c-is-sws t face font-lock-comment-delimiter-face) 38 40 (fontified t c-in-sws t face font-lock-comment-delimiter-face) 40 88 (fontified t c-in-sws t face font-lock-comment-face) 88 91 (fontified t c-in-sws t face font-lock-comment-delimiter-face) 91 92 (fontified t c-in-sws t) 92 93 (fontified t c-is-sws t c-in-sws t) 93 94 (fontified t c-is-sws t c-type c-not-decl) 94 106 (fontified t) 106 107 (fontified t c-type c-not-decl) 107 109 (fontified t) 109 134 (fontified t face font-lock-string-face) 134 138 (fontified t) 138 177 (fontified t face font-lock-string-face) 177 181 (fontified t) 181 182 (fontified t c-type c-not-decl) 182 194 (fontified t) 194 195 (fontified t c-type c-not-decl) 195 197 (fontified t) 197 215 (fontified t face font-lock-string-face) 215 222 (fontified t face font-lock-string-face) 222 226 (fontified t) 226 256 (fontified t face font-lock-string-face) 256 259 (fontified t) 259 260 (fontified t) 260 261 (fontified t c-type c-not-decl) 261 273 (fontified t) 273 274 (fontified t c-type c-not-decl) 274 276 (fontified t) 276 301 (fontified t face font-lock-string-face) 301 305 (fontified t) 305 338 (fontified t face font-lock-string-face) 338 341 (fontified t) 341 342 (fontified t c-in-sws t c-is-sws t) 342 343 (fontified t face font-lock-comment-delimiter-face c-in-sws t c-is-sws t) 343 344 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 344 398 (fontified t face font-lock-comment-face c-in-sws t) 398 399 (fontified t c-in-sws t) 399 401 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 401 459 (fontified t face font-lock-comment-face c-in-sws t) 459 460 (syntax-table (1) fontified t face font-lock-comment-face c-in-sws t) 460 476 (fontified t face font-lock-comment-face c-in-sws t) 476 477 (syntax-table (1) fontified t face font-lock-comment-face c-in-sws t) 477 484 (fontified t face font-lock-comment-face c-in-sws t) 484 485 (syntax-table (1) fontified t face font-lock-comment-face c-in-sws t) 485 490 (fontified t face font-lock-comment-face c-in-sws t) 490 491 (syntax-table (1) fontified t face font-lock-comment-face c-in-sws t) 491 495 (fontified t face font-lock-comment-face c-in-sws t) 495 496 (fontified t c-is-sws t c-in-sws t) 496 497 (fontified t c-is-sws t c-type c-not-decl) 497 506 (fontified t) 506 507 (fontified t c-type c-not-decl) 507 509 (fontified t) 509 538 (fontified t face font-lock-string-face) 538 542 (fontified t) 542 546 (fontified t face font-lock-constant-face) 546 550 (fontified t) 550 551 (fontified t c-type c-not-decl) 551 561 (fontified t) 561 562 (fontified t c-type c-not-decl) 562 564 (fontified t) 564 593 (fontified t face font-lock-string-face) 593 597 (fontified t) 597 600 (fontified t face font-lock-string-face) 600 605 (fontified t) 605 606 (fontified t c-type c-not-decl) 606 617 (fontified t) 617 618 (fontified t c-type c-not-decl) 618 620 (fontified t) 620 647 (fontified t face font-lock-string-face) 647 651 (fontified t) 651 658 (fontified t face font-lock-string-face) 658 663 (fontified t) 663 664 (fontified t c-type c-not-decl) 664 674 (fontified t) 674 675 (fontified t c-type c-not-decl) 675 677 (fontified t) 677 704 (fontified t face font-lock-string-face) 704 708 (fontified t) 708 715 (fontified t face font-lock-string-face) 715 719 (fontified t) 719 720 (fontified t c-in-sws t c-is-sws t) 720 721 (fontified t face font-lock-comment-delimiter-face c-in-sws t c-is-sws t) 721 722 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 722 781 (fontified t face font-lock-comment-face c-in-sws t) 781 782 (fontified t c-in-sws t) 782 784 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 784 843 (fontified t face font-lock-comment-face c-in-sws t) 843 844 (fontified t c-in-sws t) 844 846 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 846 905 (fontified t face font-lock-comment-face c-in-sws t) 905 906 (fontified t c-is-sws t c-in-sws t) 906 907 (fontified t c-is-sws t c-type c-not-decl) 907 919 (fontified t) 919 920 (fontified t c-type c-not-decl) 920 922 (fontified t) 922 926 (fontified t face font-lock-string-face) 926 933 (fontified t) 933 970 (fontified t face font-lock-string-face) 970 975 (fontified t) 975 976 (fontified t c-type c-not-decl) 976 988 (fontified t) 988 989 (fontified t c-type c-not-decl) 989 991 (fontified t) 991 1016 (fontified t face font-lock-string-face) 1016 1020 (fontified t) 1020 1054 (fontified t face font-lock-string-face) 1054 1059 (fontified t) 1059 1060 (fontified t c-type c-not-decl) 1060 1072 (fontified t) 1072 1073 (fontified t c-type c-not-decl) 1073 1075 (fontified t) 1075 1102 (fontified t face font-lock-string-face) 1102 1106 (fontified t) 1106 1144 (fontified t face font-lock-string-face) 1144 1145 (syntax-table (1) fontified t face font-lock-string-face) 1145 1154 (fontified t face font-lock-string-face) 1154 1155 (syntax-table (1) fontified t face font-lock-string-face) 1155 1156 (fontified t face font-lock-string-face) 1156 1160 (fontified t) 1160 1161 (fontified t c-type c-not-decl) 1161 1173 (fontified t) 1173 1174 (fontified t c-type c-not-decl) 1174 1176 (fontified t) 1176 1203 (fontified t face font-lock-string-face) 1203 1207 (fontified t) 1207 1214 (fontified t face font-lock-string-face) 1214 1215 (syntax-table (1) fontified t face font-lock-string-face) 1215 1226 (fontified t face font-lock-string-face) 1226 1227 (syntax-table (1) fontified t face font-lock-string-face) 1227 1228 (fontified t face font-lock-string-face) 1228 1233 (fontified t) 1233 1234 (fontified t c-type c-not-decl) 1234 1246 (fontified t) 1246 1247 (fontified t c-type c-not-decl) 1247 1249 (fontified t) 1249 1277 (fontified t face font-lock-string-face) 1277 1281 (fontified t) 1281 1288 (fontified t face font-lock-string-face) 1288 1289 (syntax-table (1) fontified t face font-lock-string-face) 1289 1294 (fontified t face font-lock-string-face) 1294 1295 (syntax-table (1) fontified t face font-lock-string-face) 1295 1296 (fontified t face font-lock-string-face) 1296 1302 (fontified t)) "pdb3\")" #("nomeMeioPosicao = ultimaPosicao+1
                print(nomeCompleto[nomeMeioPosicao].upper()+'. ',  end='')
" 0 1 (fontified t face font-lock-variable-name-face) 1 2 (fontified t face font-lock-variable-name-face) 2 3 (fontified t face font-lock-variable-name-face) 3 8 (fontified t face font-lock-variable-name-face) 8 9 (fontified t face font-lock-variable-name-face) 9 10 (fontified t face font-lock-variable-name-face) 10 11 (fontified t face font-lock-variable-name-face) 11 12 (fontified t face font-lock-variable-name-face) 12 13 (fontified t face font-lock-variable-name-face) 13 14 (fontified t face font-lock-variable-name-face) 14 15 (fontified t face font-lock-variable-name-face) 15 18 (fontified t) 18 33 (fontified t) 33 34 (fontified t) 34 50 (fontified t) 50 55 (fontified t face font-lock-builtin-face) 55 56 (fontified t) 56 69 (fontified t) 69 84 (fontified t) 84 94 (fontified t) 94 98 (fontified t face font-lock-string-face) 98 105 (fontified t) 105 107 (fontified t face font-lock-string-face) 107 108 (rear-nonsticky t fontified t) 108 109 (fontified t)) #("        print(nomeCompleto[nomeMeioPosicao], ' ',  end='')" 0 8 (fontified t) 8 13 (fontified t face font-lock-builtin-face) 13 14 (fontified t) 14 27 (fontified t) 27 42 (fontified t) 42 43 (fontified t) 43 45 (fontified t) 45 48 (fontified t face font-lock-string-face) 48 55 (fontified t) 55 57 (fontified t face font-lock-string-face) 57 58 (fontified t)) #("qtdeEspacos = qtdeEspacos - 1" 0 11 (fontified t face font-lock-variable-name-face) 11 29 (fontified t)) #("print(nomeCompleto[ultimoNomeInicio:].upper(), ' ', end='')" 0 5 (fontified t face font-lock-builtin-face) 5 6 (fontified t) 6 19 (fontified t) 19 36 (fontified t) 36 47 (fontified t) 47 50 (fontified t face font-lock-string-face) 50 56 (fontified t) 56 58 (fontified t face font-lock-string-face) 58 59 (fontified t)) #("nomeCompleto.rfind(' ', ultimaPosicao+1)" 0 19 (fontified t) 19 22 (fontified t face font-lock-string-face) 22 40 (fontified t)) "iwconfig | awk '/wlp5s0/ {print$4}' | sed 's/ESSID://'" #("-font 'Comic code 15' -show drun -icon-theme 'Gruvbox' -show-icons -theme 'gruvbox-dark'" 0 6 (fontified t face font-lock-string-face) 6 7 (syntax-table (1) fontified t face font-lock-string-face) 7 20 (fontified t face font-lock-string-face) 20 21 (syntax-table (1) fontified t face font-lock-string-face) 21 45 (fontified t face font-lock-string-face) 45 46 (syntax-table (1) fontified t face font-lock-string-face) 46 53 (fontified t face font-lock-string-face) 53 54 (syntax-table (1) fontified t face font-lock-string-face) 54 74 (fontified t face font-lock-string-face) 74 75 (syntax-table (1) fontified t face font-lock-string-face) 75 87 (fontified t face font-lock-string-face) 87 88 (syntax-table (1) fontified t face font-lock-string-face)) #("qtdeEspacos = nomeCompleto.count(' ')
ultimaPosicao = -1

if qtdeEspacos == 0:
    print('Nao informado um nome completo')

else:
    print('O nome ', nomeCompleto, ' possui espacos nas posicoes: ', end='')
    while qtdeEspacos != 0:

        posicao = nomeCompleto.find(' ', ultimaPosicao+1)
        ultimaPosicao = posicao
        qtdeEspacos = qtdeEspacos - 1
        print(posicao, ' ',  end='')
print('')
" 0 11 (face font-lock-variable-name-face fontified t) 11 14 (fontified t) 14 33 (fontified t) 33 36 (face font-lock-string-face fontified t) 36 37 (rear-nonsticky t fontified t) 37 38 (fontified t) 38 51 (face font-lock-variable-name-face fontified t) 51 56 (fontified t) 56 57 (fontified t) 57 58 (fontified t) 58 60 (face font-lock-keyword-face fontified t) 60 72 (fontified t) 72 79 (fontified t) 79 83 (fontified t) 83 88 (face font-lock-builtin-face fontified t) 88 89 (fontified t) 89 120 (face font-lock-string-face fontified t) 120 121 (face font-lock-string-face fontified t) 121 123 (fontified t) 123 124 (fontified t) 124 128 (face font-lock-keyword-face fontified t) 128 129 (fontified t) 129 130 (fontified t) 130 134 (fontified t) 134 139 (face font-lock-builtin-face fontified t) 139 140 (fontified t) 140 149 (face font-lock-string-face fontified t) 149 151 (fontified t) 151 165 (fontified t) 165 197 (face font-lock-string-face fontified t) 197 199 (fontified t) 199 203 (fontified t) 203 205 (face font-lock-string-face fontified t) 205 206 (fontified t rear-nonsticky t) 206 207 (fontified t) 207 211 (fontified t) 211 216 (face font-lock-keyword-face fontified t) 216 217 (fontified t) 217 235 (fontified t) 235 236 (fontified t) 236 244 (fontified t) 244 251 (fontified t) 251 254 (fontified t) 254 266 (fontified t) 266 272 (fontified t) 272 275 (face font-lock-string-face fontified t) 275 277 (fontified t) 277 292 (fontified t) 292 294 (fontified t) 294 302 (fontified t) 302 315 (fontified t) 315 324 (fontified t) 324 325 (fontified t rear-nonsticky t) 325 326 (fontified t) 326 334 (fontified t) 334 345 (fontified t) 345 348 (fontified t) 348 364 (fontified t) 364 372 (fontified t) 372 377 (face font-lock-builtin-face fontified t) 377 378 (fontified t) 378 387 (fontified t) 387 390 (face font-lock-string-face fontified t) 390 392 (fontified t) 392 393 (fontified t) 393 397 (fontified t) 397 398 (face font-lock-string-face fontified t) 398 399 (face font-lock-string-face fontified t) 399 401 (fontified t) 401 406 (face font-lock-builtin-face fontified t) 406 407 (fontified t) 407 408 (face font-lock-string-face fontified t) 408 409 (face font-lock-string-face fontified t) 409 411 (fontified t)) "Escreva programa que leia um nome completo de uma pessoa e imprima na tela o
último sobrenome com todas as letras maiúsculas, seguido de vı́rgula, seguido do restante
do nome, onde apenas o 1o. nome deve estar por extenso e o restante abreviado.
Ex.: se entrada for ’Armando Luiz Nicolini Delgado’ a saı́da deve ser ’DELGADO, Ar-
mando L. N.’" #("#!/usr/bin/env python3
# coding=utf8
# ----------------------------------------------------------------------------
# Created By  : Anderson José de Souza Inácio
# Created Date: 2024-04-07
# version ='1.0'
# ---------------------------------------------------------------------------
\"\"\" Curso Estatística 2024 UFPR
Disciplina CI182 Fundamentos de Programacao de Computadores
Aula 4 Exercício 11.2 - 1 achaSpc

Escreva programa que leia um nome completo de uma pessoa e imprima na tela
a localização de todos os espaços existentes no nome. Se não houver
espaços, o programa deve indicar isto em uma mensagem conveniente..\"\"\"
# ---------------------------------------------------------------------------
# Import
# ---------------------------------------------------------------------------
# from string import *
# import math
" 0 1 (face font-lock-comment-delimiter-face fontified t) 1 23 (face font-lock-comment-face fontified t) 23 25 (face font-lock-comment-delimiter-face fontified t) 25 37 (face font-lock-comment-face fontified t) 37 39 (face font-lock-comment-delimiter-face fontified t) 39 116 (face font-lock-comment-face fontified t) 116 118 (face font-lock-comment-delimiter-face fontified t) 118 162 (face font-lock-comment-face fontified t) 162 164 (face font-lock-comment-delimiter-face fontified t) 164 189 (face font-lock-comment-face fontified t) 189 191 (face font-lock-comment-delimiter-face fontified t) 191 206 (face font-lock-comment-face fontified t) 206 208 (face font-lock-comment-delimiter-face fontified t) 208 284 (face font-lock-comment-face fontified t) 284 286 (face font-lock-doc-face fontified t) 286 287 (face font-lock-doc-face syntax-table (15) fontified t) 287 376 (face font-lock-doc-face fontified t) 376 410 (face font-lock-doc-face fontified t) 410 411 (face font-lock-doc-face fontified t) 411 486 (face font-lock-doc-face fontified t) 486 558 (face font-lock-doc-face fontified t) 558 579 (face font-lock-doc-face fontified t) 579 624 (face font-lock-doc-face fontified t) 624 625 (face font-lock-doc-face fontified t rear-nonsticky t) 625 626 (face font-lock-doc-face fontified t) 626 627 (face font-lock-doc-face fontified t syntax-table (15)) 627 629 (face font-lock-doc-face fontified t) 629 630 (fontified t) 630 632 (face font-lock-comment-delimiter-face fontified t) 632 708 (face font-lock-comment-face fontified t) 708 710 (face font-lock-comment-delimiter-face fontified t) 710 717 (face font-lock-comment-face fontified t) 717 719 (face font-lock-comment-delimiter-face fontified t) 719 795 (face font-lock-comment-face fontified t) 795 797 (face font-lock-comment-delimiter-face fontified t) 797 818 (face font-lock-comment-face fontified t) 818 820 (face font-lock-comment-delimiter-face fontified t) 820 831 (face font-lock-comment-face fontified t) 831 832 (face font-lock-comment-face fontified t rear-nonsticky t)) #(", sep=';'" 0 6 (fontified t) 6 9 (face font-lock-string-face fontified t)) #("[ultimaPosicao+1:]" 0 1 (fontified t) 1 17 (fontified t) 17 18 (fontified t)) #("    contador = 0" 0 4 (fontified t) 4 12 (fontified t) 12 16 (fontified t)) #("    for letra in nomeCompleto:
        print(contador, letra)
        contador = contador + 1" 0 4 (fontified t) 4 7 (face font-lock-keyword-face fontified t) 7 14 (fontified t) 14 16 (face font-lock-keyword-face fontified t) 16 17 (fontified t) 17 29 (face font-lock-variable-name-face fontified t) 29 31 (fontified t) 31 39 (fontified t) 39 44 (face font-lock-builtin-face fontified t) 44 45 (fontified t) 45 60 (fontified t) 60 62 (fontified t) 62 70 (fontified t) 70 78 (face font-lock-variable-name-face fontified t) 78 93 (fontified t)) #("        ultimaPosicao = posicao" 0 8 (fontified t) 8 21 (face font-lock-variable-name-face fontified t) 21 31 (fontified t)) #("        print('O nome ', nomeCompleto, ' possui espacos nas posicoes: ',
              end='')" 0 8 (fontified t) 8 13 (face font-lock-builtin-face fontified t) 13 14 (fontified t) 14 23 (face font-lock-string-face fontified t) 23 25 (fontified t) 25 39 (fontified t) 39 71 (face font-lock-string-face fontified t) 71 91 (fontified t) 91 93 (face font-lock-string-face fontified t) 93 94 (fontified t)) #("qtdeEspacos = nomeCompleto.count(' ')" 0 11 (face font-lock-variable-name-face fontified t) 11 14 (fontified t) 14 33 (fontified t) 33 36 (face font-lock-string-face fontified t) 36 37 (fontified t)) #("nomeCompleto.count(' ') == 0:" 0 19 (fontified t) 19 22 (face font-lock-string-face fontified t) 22 29 (fontified t)) "Escreva programa que leia um nome completo de uma pessoa e imprima na tela
a localização de todos os espaços existentes no nome. Se não houver espaços, o programa
deve indicar isto em uma mensagem conveniente." "#!/usr/bin/env python3
# coding=utf8
# ----------------------------------------------------------------------------
# Created By  : Anderson José de Souza Inácio
# Created Date: 2024-04-07
# version ='1.0'
# ---------------------------------------------------------------------------
\"\"\" Curso Estatística 2024 UFPR
Disciplina CI182 Fundamentos de Programacao de Computadores
Aula 4 Exercício 10.3 - 1 lanche

Escrever um programa que leia o código de um item pedido, a quantidade do
item e calcule o valor a ser pago por aquele item. Considere que a cada
execução do programa somente será calculado o valor referente a 1 (um)
item. Se um valor inválido de código  for indicado, o programa deve emitir
uma mensagem conveniente e, sem exibir outros resultados, terminar.\"\"\"
# ---------------------------------------------------------------------------
# Import
# ---------------------------------------------------------------------------
# from string import *
# import math
" "deve ser impresso. O número zero é o ultimo número fornecido como dado de entrada.
OBSERVACAO: o zero não deve ser considerado na busca do maior valor." "Fazer um programa que seja capaz de ler números inteiros positivos do te-
clado e de identificar o maior destes números lidos. Ao final, o maior número encontrado" "#!/usr/bin/env python3
# coding=utf8
# ----------------------------------------------------------------------------
# Created By  : Anderson José de Souza Inácio
# Created Date: 2024-04-07
# version ='1.0'
# ---------------------------------------------------------------------------
\"\"\" Curso Estatística 2024 UFPR
Disciplina CI182 Fundamentos de Programacao de Computadores
Aula 4 Exercício 10.3 - 1 lanche

Escrever um programa que leia o código de um item pedido, a quantidade do
item e calcule o valor a ser pago por aquele item. Considere que a cada
execução do programa somente será calculado o valor referente a 1 (um)
item. Se um valor inválido de código  for indicado, o programa deve emitir
uma mensagem conveniente e, sem exibir outros resultados, terminar.\"\"\"
# ---------------------------------------------------------------------------
# Import
# ---------------------------------------------------------------------------
# from string import *
# import math
" #("valorTotal + (" 0 14 (fontified t)) "Complete o programa anterior de forma que seja feito o cálculo do preço do
lanche até que o usuário entre com código de ı́tem 0 (zero), quando então o programa deve
exibir o valor total e terminar." #("valorTotal = 0
pedido = 1

while pedido:
    pedido = input('Informe o codigo do produto: ')

    if not pedido:
        print('Codigo nao informado, saindo...')
        break

    qtde = int(input('Informe a quantidade: '))

    if pedido == 100:
        valorTotal = qtde * 1.2

    elif pedido == 101:
        valorTotal = qtde * 1.3

    elif pedido == 102:
        valorTotal = qtde * 1.5

    elif pedido == 103:
        valorTotal = qtde * 1.2

    elif pedido == 104:
        valorTotal = qtde * 1.3

    elif pedido == 105:
        valorTotal = qtde * 1

    else:
        print('Codigo incorreto')
        break
    print('O valor total e de R$', round(valorTotal, 0))
" 0 10 (face font-lock-variable-name-face fontified t) 10 14 (fontified t) 14 15 (fontified t) 15 21 (face font-lock-variable-name-face fontified t) 21 25 (fontified t) 25 26 (fontified t) 26 27 (fontified t) 27 32 (face font-lock-keyword-face fontified t) 32 33 (fontified t) 33 39 (fontified t) 39 41 (fontified t) 41 45 (fontified t) 45 51 (face font-lock-variable-name-face fontified t) 51 54 (fontified t) 54 59 (face font-lock-builtin-face fontified t) 59 60 (fontified t) 60 91 (face font-lock-string-face fontified t) 91 92 (fontified t) 92 93 (fontified t rear-nonsticky t) 93 98 (fontified t) 98 100 (face font-lock-keyword-face fontified t) 100 101 (fontified t) 101 104 (face font-lock-keyword-face fontified t) 104 105 (fontified t) 105 111 (face font-lock-variable-name-face fontified t) 111 113 (fontified t) 113 121 (fontified t) 121 126 (face font-lock-builtin-face fontified t) 126 127 (fontified t) 127 160 (face font-lock-string-face fontified t) 160 161 (fontified t rear-nonsticky t) 161 162 (fontified t) 162 170 (fontified t) 170 174 (face font-lock-keyword-face fontified t) 174 175 (face font-lock-keyword-face fontified t rear-nonsticky t) 175 176 (fontified t) 176 177 (fontified t) 177 181 (fontified t) 181 185 (fontified t) 185 188 (fontified t) 188 191 (face font-lock-builtin-face fontified t) 191 192 (fontified t) 192 197 (face font-lock-builtin-face fontified t) 197 198 (fontified t) 198 222 (face font-lock-string-face fontified t) 222 225 (fontified t) 225 226 (fontified t) 226 230 (fontified t) 230 232 (face font-lock-keyword-face fontified t) 232 233 (fontified t) 233 239 (fontified t) 239 248 (fontified t) 248 256 (fontified t) 256 266 (fontified t) 266 280 (fontified t) 280 281 (fontified t) 281 285 (fontified t) 285 289 (face font-lock-keyword-face fontified t) 289 290 (fontified t) 290 296 (fontified t) 296 305 (fontified t) 305 313 (fontified t) 313 323 (fontified t) 323 337 (fontified t) 337 338 (fontified t) 338 342 (fontified t) 342 346 (face font-lock-keyword-face fontified t) 346 347 (fontified t) 347 353 (fontified t) 353 362 (fontified t) 362 370 (fontified t) 370 380 (fontified t) 380 393 (fontified t) 393 394 (fontified t) 394 395 (fontified t) 395 399 (fontified t) 399 403 (face font-lock-keyword-face fontified t) 403 404 (fontified t) 404 410 (fontified t) 410 419 (fontified t) 419 427 (fontified t) 427 437 (fontified t) 437 450 (fontified t) 450 451 (fontified t) 451 452 (fontified t) 452 456 (fontified t) 456 460 (face font-lock-keyword-face fontified t) 460 461 (fontified t) 461 467 (fontified t) 467 476 (fontified t) 476 484 (fontified t) 484 494 (fontified t) 494 506 (fontified t) 506 507 (fontified t rear-nonsticky t) 507 508 (fontified t) 508 509 (fontified t) 509 513 (fontified t) 513 517 (face font-lock-keyword-face fontified t) 517 518 (fontified t) 518 524 (fontified t) 524 533 (fontified t) 533 541 (fontified t) 541 551 (fontified t) 551 563 (fontified t) 563 564 (fontified t) 564 568 (fontified t) 568 572 (face font-lock-keyword-face fontified t) 572 574 (fontified t) 574 582 (fontified t) 582 587 (face font-lock-builtin-face fontified t) 587 588 (fontified t) 588 606 (face font-lock-string-face fontified t) 606 607 (fontified t rear-nonsticky t) 607 608 (fontified t) 608 616 (fontified t) 616 621 (face font-lock-keyword-face fontified t) 621 622 (fontified t) 622 626 (fontified t) 626 631 (face font-lock-builtin-face fontified t) 631 632 (fontified t) 632 654 (face font-lock-string-face fontified t) 654 655 (face font-lock-string-face fontified t) 655 657 (fontified t) 657 662 (face font-lock-builtin-face fontified t) 662 663 (fontified t) 663 677 (fontified t) 677 678 (fontified t) 678 679 (fontified t)) #("#!/usr/bin/env python3
# coding=utf8
# ----------------------------------------------------------------------------
# Created By  : Anderson José de Souza Inácio
# Created Date: 2024-04-07
# version ='1.0'
# ---------------------------------------------------------------------------
\"\"\" Curso Estatística 2024 UFPR
Disciplina CI182 Fundamentos de Programacao de Computadores
Aula 4 Exercício 10.3 - 1 lanche

Escrever um programa que leia o código de um item pedido, a quantidade do
item e calcule o valor a ser pago por aquele item. Considere que a cada
execução do programa somente será calculado o valor referente a 1 (um)
item. Se um valor inválido de código  for indicado, o programa deve emitir
uma mensagem conveniente e, sem exibir outros resultados, terminar.\"\"\"
# ---------------------------------------------------------------------------
# Import
# ---------------------------------------------------------------------------
# from string import *
# import math
" 0 1 (face font-lock-comment-delimiter-face fontified t) 1 23 (face font-lock-comment-face fontified t) 23 25 (face font-lock-comment-delimiter-face fontified t) 25 37 (face font-lock-comment-face fontified t) 37 39 (face font-lock-comment-delimiter-face fontified t) 39 116 (face font-lock-comment-face fontified t) 116 118 (face font-lock-comment-delimiter-face fontified t) 118 162 (face font-lock-comment-face fontified t) 162 164 (face font-lock-comment-delimiter-face fontified t) 164 189 (face font-lock-comment-face fontified t) 189 191 (face font-lock-comment-delimiter-face fontified t) 191 206 (face font-lock-comment-face fontified t) 206 208 (face font-lock-comment-delimiter-face fontified t) 208 284 (face font-lock-comment-face fontified t) 284 286 (face font-lock-doc-face fontified t) 286 287 (face font-lock-doc-face fontified t syntax-table (15)) 287 376 (face font-lock-doc-face fontified t) 376 409 (face font-lock-doc-face fontified t) 409 410 (face font-lock-doc-face fontified t) 410 485 (face font-lock-doc-face fontified t) 485 492 (face font-lock-doc-face fontified t) 492 557 (face font-lock-doc-face fontified t) 557 580 (face font-lock-doc-face fontified t) 580 631 (face font-lock-doc-face fontified t) 631 671 (face font-lock-doc-face fontified t) 671 708 (face font-lock-doc-face fontified t) 708 754 (face font-lock-doc-face fontified t) 754 774 (face font-lock-doc-face fontified t) 774 775 (face font-lock-doc-face fontified t rear-nonsticky t) 775 776 (face font-lock-doc-face fontified t syntax-table (15)) 776 778 (face font-lock-doc-face fontified t) 778 779 (fontified t) 779 781 (face font-lock-comment-delimiter-face fontified t) 781 857 (face font-lock-comment-face fontified t) 857 859 (face font-lock-comment-delimiter-face fontified t) 859 866 (face font-lock-comment-face fontified t) 866 868 (face font-lock-comment-delimiter-face fontified t) 868 944 (face font-lock-comment-face fontified t) 944 946 (face font-lock-comment-delimiter-face fontified t) 946 967 (face font-lock-comment-face fontified t) 967 969 (face font-lock-comment-delimiter-face fontified t) 969 980 (face font-lock-comment-face fontified t) 980 981 (face font-lock-comment-face fontified t rear-nonsticky t)) #("        print('Codigo incorreto')
        break" 0 8 (fontified t) 8 13 (face font-lock-builtin-face fontified t) 13 14 (fontified t) 14 32 (face font-lock-string-face fontified t) 32 33 (rear-nonsticky t fontified t) 33 34 (fontified t) 34 42 (fontified t) 42 47 (face font-lock-keyword-face fontified t)) #("    print('Codigo incorreto')" 0 4 (fontified t) 4 9 (face font-lock-builtin-face fontified t) 9 10 (fontified t) 10 28 (face font-lock-string-face fontified t) 28 29 (fontified t)) #("    elif pedido == 104:
        valorTotal = qtde * 1.3" 0 4 (fontified t) 4 8 (face font-lock-keyword-face fontified t) 8 9 (fontified t) 9 15 (fontified t) 15 24 (fontified t) 24 32 (fontified t) 32 42 (face font-lock-variable-name-face fontified t) 42 54 (fontified t) 54 55 (fontified t rear-nonsticky t)) #("    elif pedido == 101:
        valorTotal = qtde * 1.3" 0 4 (fontified t) 4 8 (face font-lock-keyword-face fontified t) 8 9 (fontified t) 9 15 (fontified t) 15 24 (fontified t) 24 32 (fontified t) 32 42 (face font-lock-variable-name-face fontified t) 42 55 (fontified t)) #("valorTotal = qtde * 1.2" 0 10 (face font-lock-variable-name-face fontified t) 10 23 (fontified t)) #("pedido = input('Informe o codigo do produto')
" 0 6 (face font-lock-variable-name-face fontified t) 6 9 (fontified t) 9 14 (face font-lock-builtin-face fontified t) 14 15 (fontified t) 15 44 (face font-lock-string-face fontified t) 44 46 (fontified t)) "Escrever um programa que leia o código de um item pedido, a quantidade do item e
calcule o valor a ser pago por aquele item. Considere que a cada execução do programa
somente será calculado o valor referente a 1 (um) item. Se um valor inválido de código
for indicado, o programa deve emitir uma mensagem conveniente e, sem exibir outros
resultados, terminar." #("#!/usr/bin/env python3
# coding=utf8
# ----------------------------------------------------------------------------
# Created By  : Anderson José de Souza Inácio
# Created Date: 2024-04-05
# version ='1.0'
# ---------------------------------------------------------------------------
\"\"\" Curso Estatística 2024 UFPR
Disciplina CI182 Fundamentos de Programacao de Computadores
Aula 4 Exercício 9.5 - 3 juntatxt

Faça um programa que obtenha um texto do usuário e em seguida solicite pala-
vras do usuário, informando se cada palavra está ou não dentro do texto.
O final da entrada das palavras para busca ocorre quando o usuário teclar
ENTER, sem digitar texto algum. Após as buscas, o programa deve imprimir o
texto inicial e a quantidade de palavras que foram encontradas no texto.\"\"\"
# ---------------------------------------------------------------------------
# Import
# ---------------------------------------------------------------------------
# from string import *
# import math
" 0 1 (face font-lock-comment-delimiter-face fontified t) 1 23 (face font-lock-comment-face fontified t) 23 25 (face font-lock-comment-delimiter-face fontified t) 25 37 (face font-lock-comment-face fontified t) 37 39 (face font-lock-comment-delimiter-face fontified t) 39 116 (face font-lock-comment-face fontified t) 116 118 (face font-lock-comment-delimiter-face fontified t) 118 162 (face font-lock-comment-face fontified t) 162 164 (face font-lock-comment-delimiter-face fontified t) 164 189 (face font-lock-comment-face fontified t) 189 191 (face font-lock-comment-delimiter-face fontified t) 191 206 (face font-lock-comment-face fontified t) 206 208 (face font-lock-comment-delimiter-face fontified t) 208 284 (face font-lock-comment-face fontified t) 284 286 (face font-lock-doc-face fontified t) 286 287 (face font-lock-doc-face syntax-table (15) fontified t) 287 376 (face font-lock-doc-face fontified t) 376 410 (face font-lock-doc-face fontified t) 410 411 (face font-lock-doc-face fontified t) 411 490 (face font-lock-doc-face fontified t) 490 566 (face font-lock-doc-face fontified t) 566 585 (face font-lock-doc-face fontified t) 585 641 (face font-lock-doc-face fontified t) 641 673 (face font-lock-doc-face fontified t) 673 717 (face font-lock-doc-face fontified t) 717 762 (face font-lock-doc-face fontified t) 762 788 (face font-lock-doc-face fontified t) 788 789 (face font-lock-doc-face fontified t rear-nonsticky t) 789 790 (face font-lock-doc-face fontified t syntax-table (15)) 790 792 (face font-lock-doc-face fontified t) 792 793 (fontified t) 793 795 (face font-lock-comment-delimiter-face fontified t) 795 871 (face font-lock-comment-face fontified t) 871 873 (face font-lock-comment-delimiter-face fontified t) 873 880 (face font-lock-comment-face fontified t) 880 882 (face font-lock-comment-delimiter-face fontified t) 882 958 (face font-lock-comment-face fontified t) 958 960 (face font-lock-comment-delimiter-face fontified t) 960 981 (face font-lock-comment-face fontified t) 981 983 (face font-lock-comment-delimiter-face fontified t) 983 994 (face font-lock-comment-face fontified t) 994 995 (face font-lock-comment-face fontified t rear-nonsticky t)) "Faça um programa que obtenha um texto do usuário e em seguida solicite pala-
vras do usuário, informando se cada palavra está ou não dentro do texto. O final da entrada
das palavras para busca ocorre quando o usuário teclar ENTER, sem digitar texto algum.
Após as buscas, o programa deve imprimir o texto inicial e a quantidade de palavras que
foram encontradas no texto." #("#!/usr/bin/env python3
# coding=utf8
# ----------------------------------------------------------------------------
# Created By  : Anderson José de Souza Inácio
# Created Date: 2024-04-05
# version ='1.0'
# ---------------------------------------------------------------------------
\"\"\" Curso Estatística 2024 UFPR
Disciplina CI182 Fundamentos de Programacao de Computadores
Aula 4 Exercício 9.5 - 2 juntatxt

Faça um programa que obtenha um conjunto de frases do usuário e as junte em
um único texto, na mesma sequência em que foram informadas, com um espaço
entre elas. O final da entrada do conjunto inicial de frases ocorre quando o
usuário teclar ENTER, sem digitar texto algum. Após juntar as frases, o
programa deve imprimir o resultado na tela.\"\"\"
# ---------------------------------------------------------------------------
# Import
# ---------------------------------------------------------------------------
# from string import *
# import math

" 0 1 (face font-lock-comment-delimiter-face fontified t) 1 23 (face font-lock-comment-face fontified t) 23 25 (face font-lock-comment-delimiter-face fontified t) 25 37 (face font-lock-comment-face fontified t) 37 39 (face font-lock-comment-delimiter-face fontified t) 39 116 (face font-lock-comment-face fontified t) 116 118 (face font-lock-comment-delimiter-face fontified t) 118 162 (face font-lock-comment-face fontified t) 162 164 (face font-lock-comment-delimiter-face fontified t) 164 189 (face font-lock-comment-face fontified t) 189 191 (face font-lock-comment-delimiter-face fontified t) 191 206 (face font-lock-comment-face fontified t) 206 208 (face font-lock-comment-delimiter-face fontified t) 208 284 (face font-lock-comment-face fontified t) 284 286 (face font-lock-doc-face fontified t) 286 287 (face font-lock-doc-face syntax-table (15) fontified t) 287 376 (face font-lock-doc-face fontified t) 376 410 (face font-lock-doc-face fontified t) 410 411 (face font-lock-doc-face fontified t) 411 489 (face font-lock-doc-face fontified t) 489 566 (face font-lock-doc-face fontified t) 566 578 (face font-lock-doc-face fontified t) 578 643 (face font-lock-doc-face fontified t) 643 666 (face font-lock-doc-face fontified t) 666 717 (face font-lock-doc-face fontified t) 717 755 (face font-lock-doc-face fontified t) 755 759 (face font-lock-doc-face fontified t) 759 760 (face font-lock-doc-face fontified t rear-nonsticky t) 760 761 (face font-lock-doc-face fontified t syntax-table (15)) 761 763 (face font-lock-doc-face fontified t) 763 764 (fontified t) 764 766 (face font-lock-comment-delimiter-face fontified t) 766 842 (face font-lock-comment-face fontified t) 842 844 (face font-lock-comment-delimiter-face fontified t) 844 851 (face font-lock-comment-face fontified t) 851 853 (face font-lock-comment-delimiter-face fontified t) 853 929 (face font-lock-comment-face fontified t) 929 931 (face font-lock-comment-delimiter-face fontified t) 931 952 (face font-lock-comment-face fontified t) 952 954 (face font-lock-comment-delimiter-face fontified t) 954 965 (face font-lock-comment-face fontified t) 965 966 (face font-lock-comment-face fontified t rear-nonsticky t) 966 967 (fontified t)) "Faça um programa que obtenha um conjunto de frases do usuário e as junte em
um único texto, na mesma sequência em que foram informadas, com um espaço entre elas.
O final da entrada do conjunto inicial de frases ocorre quando o usuário teclar ENTER,
sem digitar texto algum. Após juntar as frases, o programa deve imprimir o resultado na
tela." #("#!/usr/bin/env python3
# coding=utf8
# ----------------------------------------------------------------------------
# Created By  : Anderson José de Souza Inácio
# Created Date: 2024-04-05
# version ='1.0'
# ---------------------------------------------------------------------------
\"\"\" Curso Estatística 2024 UFPR
Disciplina CI182 Fundamentos de Programacao de Computadores
Aula 4 Exercício 9.5 - 2 somaMultiplos

Calcule e imprima a soma dos inteiros entre 1 a N que s˜ao m´ultiplos de
K, onde os valores N e K s˜ao informados pelo usu´ario.
\"\"\"
# ---------------------------------------------------------------------------
# Import
# ---------------------------------------------------------------------------
# from string import *
# import math
" 0 1 (face font-lock-comment-delimiter-face fontified t) 1 23 (face font-lock-comment-face fontified t) 23 25 (face font-lock-comment-delimiter-face fontified t) 25 37 (face font-lock-comment-face fontified t) 37 39 (face font-lock-comment-delimiter-face fontified t) 39 116 (face font-lock-comment-face fontified t) 116 118 (face font-lock-comment-delimiter-face fontified t) 118 162 (face font-lock-comment-face fontified t) 162 164 (face font-lock-comment-delimiter-face fontified t) 164 189 (face font-lock-comment-face fontified t) 189 191 (face font-lock-comment-delimiter-face fontified t) 191 206 (face font-lock-comment-face fontified t) 206 208 (face font-lock-comment-delimiter-face fontified t) 208 284 (face font-lock-comment-face fontified t) 284 286 (face font-lock-doc-face fontified t) 286 287 (face font-lock-doc-face syntax-table (15) fontified t) 287 376 (face font-lock-doc-face fontified t) 376 415 (face font-lock-doc-face fontified t) 415 416 (face font-lock-doc-face fontified t) 416 543 (face font-lock-doc-face fontified t) 543 544 (face font-lock-doc-face fontified t rear-nonsticky t) 544 545 (face font-lock-doc-face fontified t) 545 546 (face font-lock-doc-face fontified t syntax-table (15)) 546 548 (face font-lock-doc-face fontified t) 548 549 (fontified t) 549 551 (face font-lock-comment-delimiter-face fontified t) 551 627 (face font-lock-comment-face fontified t) 627 629 (face font-lock-comment-delimiter-face fontified t) 629 636 (face font-lock-comment-face fontified t) 636 638 (face font-lock-comment-delimiter-face fontified t) 638 714 (face font-lock-comment-face fontified t) 714 716 (face font-lock-comment-delimiter-face fontified t) 716 737 (face font-lock-comment-face fontified t) 737 739 (face font-lock-comment-delimiter-face fontified t) 739 751 (face font-lock-comment-face fontified t)) "Calcule e imprima a soma dos inteiros entre 1 a N que s˜ao m´ultiplos de
K, onde os valores N e K s˜ao informados pelo usu´ario." #("#!/usr/bin/env python3
# coding=utf8
# ----------------------------------------------------------------------------
# Created By  : Anderson José de Souza Inácio
# Created Date: 2024-04-05
# version ='1.0'
# ---------------------------------------------------------------------------
\"\"\" Curso Estatística 2024 UFPR
Disciplina CI182 Fundamentos de Programacao de Computadores
Aula 4 Exercício 7.6 - 2 percdna


O departamento que controla o ı́ndice de poluição do meio ambiente mantém 3
grupos de indústrias que são altamente poluentes do meio ambiente. O ı́ndice
de poluição aceitável varia de 0,05 até 0,25. Se o ı́ndice sobe para 0,3
as indústrias do 1o grupo são intimadas a suspenderem suas atividades, se
o ı́ndice cresce para 0,4 as do 1o e 2o grupo são intimadas a suspenderem
suas atividades e se o ı́ndice atingir 0,5 todos os 3 grupos devem ser
notificados a paralisarem suas atividades. Escrever um programa que lê
o ı́ndice de poluição medido e emite a notificação adequada aos diferentes
grupos de empresas.
\"\"\"
# ---------------------------------------------------------------------------
# Import
# ---------------------------------------------------------------------------
# from string import *
# import math
" 0 1 (face font-lock-comment-delimiter-face fontified t) 1 23 (face font-lock-comment-face fontified t) 23 25 (face font-lock-comment-delimiter-face fontified t) 25 37 (face font-lock-comment-face fontified t) 37 39 (face font-lock-comment-delimiter-face fontified t) 39 116 (face font-lock-comment-face fontified t) 116 118 (face font-lock-comment-delimiter-face fontified t) 118 162 (face font-lock-comment-face fontified t) 162 164 (face font-lock-comment-delimiter-face fontified t) 164 189 (face font-lock-comment-face fontified t) 189 191 (face font-lock-comment-delimiter-face fontified t) 191 206 (face font-lock-comment-face fontified t) 206 208 (face font-lock-comment-delimiter-face fontified t) 208 284 (face font-lock-comment-face fontified t) 284 286 (face font-lock-doc-face fontified t) 286 287 (face font-lock-doc-face fontified t syntax-table (15)) 287 1039 (face font-lock-doc-face fontified t) 1039 1040 (face font-lock-doc-face fontified t syntax-table (15)) 1040 1042 (face font-lock-doc-face fontified t) 1042 1043 (fontified t) 1043 1045 (face font-lock-comment-delimiter-face fontified t) 1045 1121 (face font-lock-comment-face fontified t) 1121 1123 (face font-lock-comment-delimiter-face fontified t) 1123 1130 (face font-lock-comment-face fontified t) 1130 1132 (face font-lock-comment-delimiter-face fontified t) 1132 1208 (face font-lock-comment-face fontified t) 1208 1210 (face font-lock-comment-delimiter-face fontified t) 1210 1231 (face font-lock-comment-face fontified t) 1231 1233 (face font-lock-comment-delimiter-face fontified t) 1233 1245 (face font-lock-comment-face fontified t)) "Calcule e imprima a soma dos inteiros entre 1 a N que s˜ao m´ultiplos de
K, onde os valores N e K s˜ao informados pelo usu´ario." "incorporated later and so are not always in a coherent order and in sync which each other.
This history is continuing: If you are using the new LATEX PDF management which is currently distributed as a testphase package pdfmanagement-testphase then hyperref will for the PDF
output use a new generic driver which contains a number of changes and new features. The documentation of this driver hyperref-generic.pdf is currently a part of the pdfmanagement-testphase
documentation. One important change of the new driver is that it removed the old hyperref code
for book marks and uses the bookmark package instead. So to learn about options to extend the
bookmarks you should consult the bookmark documentation too." "Uma vari´avel ´e uma informa¸c˜ao que vocˆe pode usar dentro de um programa Python . Esta
informa¸c˜ao est´a associada com um lugar espec´ıfico da mem´oria (isso ´e feito pelo compilador). O
nome da vari´avel e o endere¸co da mem´oria onde a informa¸c˜ao est´a armazenada est˜ao associados.
O nome e o endere¸co n˜ao mudam. Mas, o valor da informa¸c˜ao pode mudar (o valor do que est´a
dentro da caixa pode mudar, embora o tipo seja sempre o mesmo). Cada vari´avel tem um tipo
associado. Alguns tipos de vari´aveis que discutiremos incluem int, string, boolean e float." #("indiceInformado >" 0 14 (fontified t) 14 15 (rear-nonsticky t fontified t) 15 17 (fontified t)) #("indiceInformado" 0 15 (fontified t)) #("
elif (0.4 >= indice < 0.5):
    print('Acionar grupo de empresas 1 e 2')
" 0 1 (fontified t) 1 5 (face font-lock-keyword-face fontified t) 5 6 (fontified t) 6 26 (fontified t) 26 27 (rear-nonsticky t fontified t) 27 29 (fontified t) 29 33 (fontified t) 33 38 (face font-lock-builtin-face fontified t) 38 39 (fontified t) 39 72 (face font-lock-string-face fontified t) 72 73 (rear-nonsticky t fontified t) 73 74 (fontified t)) #("print('Acionar grupo de empresas 1')" 0 5 (face font-lock-builtin-face fontified t) 5 6 (fontified t) 6 35 (face font-lock-string-face fontified t) 35 36 (fontified t)) #("(0.3 >= indice < 0.4)" 0 21 (fontified t)) "{ \"Soffice\", \"soffice\", \"Presenting: \", 0,        0,         1 }," "(winner-mode 1)" "(use-package ace-window
:ensure t
:init
(progn
(global-set-key [remap other-window] 'ace-window)
(custom-set-faces
'(aw-leading-char-face
((t (:inherit ace-jump-face-foreground :height 3.0)))))
))" "(scroll-down-aggressively 1)" "colMax <- function(data) sapply(data, max, na.rm = TRUE)" #("classes <- cut(dados$salario,
               breaks = breaks,
               include.lowest = TRUE,
               right = FALSE)

table(classes)
" 0 8 (fontified t) 8 10 (face ess-assignment-face fontified t) 10 94 (fontified t) 94 98 (face ess-constant-face fontified t) 98 123 (fontified t) 123 128 (face ess-constant-face fontified t) 128 138 (fontified t) 138 146 (fontified t)) " \"rstudio\"
"))
(setq search-ring '(#("/" 0 1 (isearch-regexp-function nil isearch-case-fold-search t))))
(setq regexp-search-ring '("updatebars" "togglebar" "setup" "drawbar" "configureno" "sp" "updatege" "indent" "scheme\\[SchemeNorm]\\[ColB" "updatesys" "mai"))
