;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by ‘savehist’.

(setq savehist-minibuffer-history-variables '(counsel-locate-history sql-product-history sql-server-history sql-database-history sql-user-history read-char-history counsel-git-history transient--history read-number-history compile-history shell-command-history magit-git-command-history magit-revision-history extended-command-history ido-file-history minibuffer-history empty-history read-from-kill-ring-history ivy-history counsel-M-x-history swiper-history ido-buffer-history file-name-history))
(setq sql-product-history '(#("ansi" 0 4 (ivy-index 0))))
(setq sql-server-history '("172.17.0.2" "172.17.0.1"))
(setq sql-database-history '(#("alura" 0 5 (ivy-index 0)) #("postgres" 0 8 (ivy-index 0)) #("anderson" 0 8 (ivy-index 0))))
(setq sql-user-history '("postgres"))
(setq read-number-history '("5432" "1"))
(setq compile-history '("make -k "))
(setq shell-command-history '("/usr/bin/zsh" "/usr/bin/bash"))
(setq magit-revision-history '(#("5ad9048" 0 7 (ivy-index 0)) #("9e4e37a8e58c4c2695feeb6ce1223b8849c5f7f7" 0 40 (ivy-index 0)) #("e5b577f5f6a6135f1566bf97f4a4c1a2ea06af15" 0 40 (ivy-index 0)) #("HEAD" 0 4 (ivy-index 3)) #("main" 0 4 (ivy-index 0)) #("origin/main" 0 11 (ivy-index 0)) #("1a51c1d" 0 7 (ivy-index 0)) #("ola mundo" 0 9 (ivy-index 0))))
(setq extended-command-history '("package-install"))
(setq ido-file-history '("." "teste.sql" "onibus.py" "credito.py" "pesoideal.py" "achemaior.py" "medias.py" "multiplos.py" "notas.py" "calcnota.py" "py" "ultimoStr.py" "primaStr.py" "juntaStr.py" "compStr.py" "tamStr.py" "sl-wttr.sh" "sl-wttr.sh~" "degraus.py" "distpontos.py" "eq2graus.py" "volesFera.py" "calculos.py" "escada.py" "capitulo_02_resumo_dados.r" "sxhkdrc" "dmenu-bitwarden" "teste.ini" "config.ini" "teste" "eqSistCramer.py" "eqSist.py" "eqGrau1.py" "convKm.py" "mediaPond.py" "convFarenheit.py" "segundo2horas.py" "idadeDias2anos.py" "idadeAnos2dias.py" "media.py" "calcula_sistemas.py" "equacao_segundo_grau.py" "media_aritimetica.py" "media_aritimetica_3_valores.py" "soma_dois_numeros.py" "init.el" "calcula_raiz_de_3_numeros.py" "aula004_usando_funcoes.sql" "aula003_sub_consultas.sql" "dmenu-teclados" "aula001.sql" "emacs.org" "myinit.org" nil "tabela_funcionarios.sql" "tabela_aluno.sql" "README.md" "dunstrc" "cpu_status.sh" "music_status_bar.sh" "volume_icon.sh" "battery_status.sh" "advinha_mais.html" "estrelas.html" "media_idades_familiares.html" "media_idades_familiares.hml" "tabuada.html" "ano_copa.html" "jogo_advinha.html" "futebol.html" "imc.html" "programa.html" "texto_puro.html" "primeiro_teste.html"))
(setq minibuffer-history '("dashboard" "/usr/bin/zsh" "select * from curso;" "select * from cursos;" "/usr/bin/bash"))
(setq ivy-history '(#("tree-sitter-ispell" 0 18 (ivy-index 1)) #("tree-sitter-langs" 0 17 (ivy-index 0)) #("tree-sitter" 0 11 (ivy-index 4)) #("rainbow-mode" 0 12 (ivy-index 0)) #("101-medidas-uni.R" 0 17 (ivy-index 4)) #("con" 0 3 (ivy-index 0)) "config.h" #("config." 0 7 (ivy-index 0)) #("origin" 0 6 (ivy-index 0)) #("master" 0 6 (ivy-index 0)) #("pdf-tools" 0 9 (ivy-index 0)) #("~/git/Educacional/Programa_Desenvolve_Boticario/006_Git_Github/projeto_inicial/" 0 79 (ivy-index 0)) #("dape" 0 4 (ivy-index 0)) #("elpy" 0 4 (ivy-index 1)) #("~/.dotfiles/" 0 12 (ivy-index 0)) #("nyan-mode" 0 9 (ivy-index 0)) #("flycheck" 0 8 (ivy-index 64)) #("emacsql-psql" 0 12 (ivy-index 13)) #("index.html" 0 10 (ivy-index 0)) #("myterminal-controls" 0 19 (ivy-index 10)) #("./" 0 2 (ivy-index 0)) #("... (choose a dir)" 0 18 (ivy-index 1)) #("electric-indent-mode" 0 20 (ivy-index 14)) #("indent-guide" 0 12 (ivy-index 0)) #("web-mode-indent-style" 0 21 (ivy-index 0))))
(setq counsel-M-x-history '(#("^term" 0 5 (ivy-index 0)) "term" #("^rainbo" 0 7 (ivy-index 0)) "rainbow-mode" #("^sql-pos" 0 8 (ivy-index 0)) "sql-postgres" #("^python-mode" 0 12 (ivy-index 0)) "python-mode" #("^python" 0 7 (ivy-index 0)) #("^eglo" 0 5 (ivy-index 0)) "eglot" #("package-install" 0 15 (ivy-index 0)) #("^package-ins" 0 12 (ivy-index 0)) #("packa" 0 5 (ivy-index 0)) #("^package-install" 0 16 (ivy-index 0)) #("^packa" 0 6 (ivy-index 0)) #("^rain" 0 5 (ivy-index 0)) #("^shell" 0 6 (ivy-index 0)) "shell" #("^magit-" 0 7 (ivy-index 24)) "magit-status" #("^pdf-view" 0 9 (ivy-index 0)) "pdf-view-mode" #("^pdf-vi" 0 7 (ivy-index 0)) #("^pdf-t" 0 6 (ivy-index 6)) "pdf-tools-enable-minor-modes" #("^try" 0 4 (ivy-index 0)) "try" #("^r" 0 2 (ivy-index 1)) "R" #("^R" 0 2 (ivy-index 1)) "R-mode" #("^dape" 0 5 (ivy-index 0)) "dape-continue" #("^elpy-mo" 0 8 (ivy-index 1)) "elpy-mode" #("^elpy-ena" 0 9 (ivy-index 0)) "elpy-enable" #("^elpy-dis" 0 9 (ivy-index 0)) "elpy-disable" #("^elpy" 0 5 (ivy-index 0)) #("^elpy-shell-send" 0 16 (ivy-index 2)) "elpy-shell-send-file" "elpy-shell-send-buffer" "elpy-shell-send-statement-and-step" #("^elpy-con" 0 9 (ivy-index 0)) "elpy-config" #("^elpy-s" 0 7 (ivy-index 11)) "elpy-shell-send-defun-and-go" #("^run-p" 0 6 (ivy-index 1)) "run-python" #("^sql-post" 0 9 (ivy-index 0)) #("^unta" 0 5 (ivy-index 0)) "untabify" #("^package-inst" 0 13 (ivy-index 0)) #("^elpy-mode" 0 10 (ivy-index 0)) #("^elpy-mod" 0 9 (ivy-index 1)) #("^auto-com" 0 9 (ivy-index 2)) "auto-complete-mode" #("^auto" 0 5 (ivy-index 3)) "auto-complete" #("^elpy-c" 0 7 (ivy-index 1)) #("^elpy-conf" 0 10 (ivy-index 0)) #("^elpy-confi" 0 11 (ivy-index 0)) #("^nyan" 0 5 (ivy-index 4)) "nyan-start-animation" "nyan-start-music" "nyan-mode" "nyan-scroll-buffer" #("^nya" 0 4 (ivy-index 1)) "nyan-toggle-wavy-trail" #("nyan-" 0 5 (ivy-index 7)) #("^spaceline-toggle-n" 0 19 (ivy-index 1)) "spaceline-toggle-nyan-cat-on" "spaceline-toggle-nyan-cat" "elpy-autopep8-fix-code" #("^elpy-menu" 0 10 (ivy-index 0)) "elpy-menu" #("^elpy-" 0 6 (ivy-index 16)) "elpy-check" #("^elpy-config" 0 12 (ivy-index 0)) #("^elpy-en" 0 8 (ivy-index 0)) #("^pyve" 0 5 (ivy-index 5)) "pyvenv-workon" #("^pyvenv" 0 7 (ivy-index 6)) "pyvenv-activate" #("^elpy-rpc" 0 9 (ivy-index 1)) "elpy-rpc-restart" #("^elpy-rp" 0 8 (ivy-index 1)) #("^ansi" 0 5 (ivy-index 1)) "ansi-term" #("^python-mo" 0 10 (ivy-index 0)) #("^sql" 0 4 (ivy-index 1)) #("^conf-mo" 0 8 (ivy-index 0)) "conf-mode" #("linu" 0 4 (ivy-index 0)) "linum-mode" #("^sql-hel" 0 8 (ivy-index 0)) "sql-help" #("^sql-set" 0 8 (ivy-index 1)) "sql-set-sqli-buffer" "sql-set-product" #("^sql-mode" 0 9 (ivy-index 0)) "sql-mode" #("^ter" 0 4 (ivy-index 0)) #("^markdown-pre" 0 13 (ivy-index 0)) "markdown-preview-cleanup" #("^markdown-previ" 0 15 (ivy-index 1)) "markdown-preview" "markdown-preview-mode" "markdown-preview-open-browser" #("^markdown-vi" 0 12 (ivy-index 0)) "markdown-view-mode" #("^markdown-v" 0 11 (ivy-index 0)) #("^markdown-p" 0 11 (ivy-index 0)) #("^markdown-mode" 0 14 (ivy-index 2)) "markdown-mode" #("^markdo" 0 7 (ivy-index 2)) #("^ra" 0 3 (ivy-index 1)) #("^conf-mod" 0 9 (ivy-index 0)) #("^myter" 0 6 (ivy-index 1)) "myterminal-controls-open-controls" #("^magit-rebase" 0 13 (ivy-index 2)) "magit-rebase" #("^magit-log-current" 0 18 (ivy-index 0)) "magit-log-current" #("^magit-log --g" 0 14 (ivy-index 0)) "magit-log:--grep" #("^magit-lo" 0 9 (ivy-index 1)) "magit-log:-G" #("^magit-log" 0 10 (ivy-index 8)) "magit-log" #("^centaur-tabs-mode" 0 18 (ivy-index 0)) "centaur-tabs-mode" #("^centaur-tabs-g" 0 15 (ivy-index 0)) "centaur-tabs-group-buffer-groups" #("^magit-merge" 0 12 (ivy-index 3)) "magit-merge" #("^magit-status" 0 13 (ivy-index 2)) #("^rainb" 0 6 (ivy-index 0)) #("^ansi-" 0 6 (ivy-index 1)) #("^conf-mode" 0 10 (ivy-index 0)) #("^magit-stat" 0 11 (ivy-index 2)) #("^ansi-te" 0 8 (ivy-index 0)) #("^java" 0 5 (ivy-index 1)) "javascript-mode" #("^customize-va" 0 13 (ivy-index 0)) "customize-variable" #("^indent-gui" 0 11 (ivy-index 0)) "indent-guide-mode" #("^package-lis" 0 12 (ivy-index 0)) "package-list-packages" #("^web-mode" 0 9 (ivy-index 82)) "web-mode" #("ansi" 0 4 (ivy-index 2)) #("^cua" 0 4 (ivy-index 5)) "cua-toggle-rectangle-mark" "cua-paste" "cua-paste-pop" "cua-cut-region" #("^cua-sc" 0 7 (ivy-index 1)) "cua-scroll-down" #("^cua-s" 0 6 (ivy-index 2)) "cua-selection-mode"))
(setq swiper-history '(#("indent" 0 6 (ivy-index 16)) #("   indent-guide                   20160630       available    melpa-stable show vertical lines to guide indentation" 0 1 (display "1665 " swiper-line-number 1665) 1 3 (tabulated-list-entry [("indent-guide" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) action package-menu-describe-package) #("20160630" 0 8 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa-stable" 0 12 (font-lock-face package-status-available)) #("show vertical lines to guide indentation" 0 40 (font-lock-face package-description))] tabulated-list-id #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil)) 3 15 (tabulated-list-entry [("indent-guide" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) action package-menu-describe-package) #("20160630" 0 8 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa-stable" 0 12 (font-lock-face package-status-available)) #("show vertical lines to guide indentation" 0 40 (font-lock-face package-description))] tabulated-list-id #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) tabulated-list-column-name "Package" action package-menu-describe-package package-desc #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) follow-link t font-lock-face package-name face package-name category default-button button (t)) 15 16 (tabulated-list-entry [("indent-guide" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) action package-menu-describe-package) #("20160630" 0 8 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa-stable" 0 12 (font-lock-face package-status-available)) #("show vertical lines to guide indentation" 0 40 (font-lock-face package-description))] tabulated-list-id #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) tabulated-list-column-name "Package") 16 34 (tabulated-list-entry [("indent-guide" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) action package-menu-describe-package) #("20160630" 0 8 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa-stable" 0 12 (font-lock-face package-status-available)) #("show vertical lines to guide indentation" 0 40 (font-lock-face package-description))] tabulated-list-id #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) tabulated-list-column-name "Package" display (space :align-to 33)) 34 42 (tabulated-list-entry [("indent-guide" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) action package-menu-describe-package) #("20160630" 0 8 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa-stable" 0 12 (font-lock-face package-status-available)) #("show vertical lines to guide indentation" 0 40 (font-lock-face package-description))] tabulated-list-id #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) tabulated-list-column-name "Version" help-echo #("Version: 20160630" 9 17 (font-lock-face package-status-available)) font-lock-face package-status-available) 42 43 (tabulated-list-entry [("indent-guide" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) action package-menu-describe-package) #("20160630" 0 8 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa-stable" 0 12 (font-lock-face package-status-available)) #("show vertical lines to guide indentation" 0 40 (font-lock-face package-description))] tabulated-list-id #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) tabulated-list-column-name "Version") 43 49 (tabulated-list-entry [("indent-guide" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) action package-menu-describe-package) #("20160630" 0 8 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa-stable" 0 12 (font-lock-face package-status-available)) #("show vertical lines to guide indentation" 0 40 (font-lock-face package-description))] tabulated-list-id #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) tabulated-list-column-name "Version" display (space :align-to 48)) 49 58 (tabulated-list-entry [("indent-guide" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) action package-menu-describe-package) #("20160630" 0 8 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa-stable" 0 12 (font-lock-face package-status-available)) #("show vertical lines to guide indentation" 0 40 (font-lock-face package-description))] tabulated-list-id #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) tabulated-list-column-name "Status" help-echo #("Status: available" 8 17 (font-lock-face package-status-available)) font-lock-face package-status-available) 58 59 (tabulated-list-entry [("indent-guide" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) action package-menu-describe-package) #("20160630" 0 8 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa-stable" 0 12 (font-lock-face package-status-available)) #("show vertical lines to guide indentation" 0 40 (font-lock-face package-description))] tabulated-list-id #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) tabulated-list-column-name "Status") 59 62 (tabulated-list-entry [("indent-guide" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) action package-menu-describe-package) #("20160630" 0 8 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa-stable" 0 12 (font-lock-face package-status-available)) #("show vertical lines to guide indentation" 0 40 (font-lock-face package-description))] tabulated-list-id #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) tabulated-list-column-name "Status" display (space :align-to 61)) 62 69 (tabulated-list-entry [("indent-guide" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) action package-menu-describe-package) #("20160630" 0 8 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa-stable" 0 12 (font-lock-face package-status-available)) #("show vertical lines to guide indentation" 0 40 (font-lock-face package-description))] tabulated-list-id #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) tabulated-list-column-name "Archive" help-echo #("Archive: melpa-stable" 9 21 (font-lock-face package-status-available)) font-lock-face package-status-available) 69 74 (tabulated-list-entry [("indent-guide" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) action package-menu-describe-package) #("20160630" 0 8 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa-stable" 0 12 (font-lock-face package-status-available)) #("show vertical lines to guide indentation" 0 40 (font-lock-face package-description))] tabulated-list-id #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) tabulated-list-column-name "Archive" help-echo #("Archive: melpa-stable" 9 21 (font-lock-face package-status-available)) display "…" font-lock-face package-status-available) 74 75 (tabulated-list-entry [("indent-guide" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) action package-menu-describe-package) #("20160630" 0 8 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa-stable" 0 12 (font-lock-face package-status-available)) #("show vertical lines to guide indentation" 0 40 (font-lock-face package-description))] tabulated-list-id #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) tabulated-list-column-name "Archive") 75 115 (tabulated-list-entry [("indent-guide" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) action package-menu-describe-package) #("20160630" 0 8 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa-stable" 0 12 (font-lock-face package-status-available)) #("show vertical lines to guide indentation" 0 40 (font-lock-face package-description))] tabulated-list-id #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) tabulated-list-column-name "Description" help-echo #("Description: show vertical lines to guide indentation" 13 53 (font-lock-face package-description)) font-lock-face package-description)) "scheme[SchemeNorm][ColBg" #("scheme[SchemeNorm][ColB" 0 23 (ivy-index 8)) #(" 	XSetForeground(dpy, drw->gc, scheme[SchemeNorm][ColBg].pixel);" 0 1 (display "2761 " swiper-line-number 2761) 1 2 (c-is-sws t fontified t) 2 3 (fontified t c-is-sws t) 3 49 (fontified t) 49 50 (fontified t) 50 51 (fontified t) 51 52 (fontified t) 52 53 (fontified t) 53 54 (fontified t) 54 55 (fontified t) 55 56 (fontified t) 56 57 (fontified t) 57 58 (fontified t) 58 59 (fontified t) 59 60 (fontified t) 60 61 (fontified t) 61 62 (fontified t) 62 63 (fontified t) 63 64 (rear-nonsticky t fontified t)) #("updatesys" 0 9 (ivy-index 18)) #(" updatesystray(void)" 0 1 (display "2700 " swiper-line-number 2700) 1 14 (face font-lock-function-name-face fontified t) 14 15 (c-type c-decl-arg-start fontified t) 15 19 (face font-lock-type-face fontified t) 19 20 (fontified t)) #("mai" 0 3 (ivy-index 0)) #(" main(int argc, char *argv[])" 0 1 (display "814 " swiper-line-number 814) 1 5 (face font-lock-function-name-face fontified t) 5 6 (c-type c-decl-arg-start fontified t) 6 9 (face font-lock-type-face fontified t) 9 10 (fontified t) 10 14 (face font-lock-variable-name-face fontified t) 14 15 (c-type c-decl-arg-start fontified t) 15 16 (fontified t) 16 20 (face font-lock-type-face fontified t) 20 22 (fontified t) 22 26 (face font-lock-variable-name-face fontified t) 26 29 (fontified t))))
(setq ido-buffer-history '("sl-wttr.sh" "*Python*" "config.def.h" "*terminal*" "dmenu-docker-images" "dmenu-power" "dmenu-atalhos-programas" "equacao_segundo_grau.py" "media_aritimetica_3_valores.py" "calcula_raiz_de_3_numeros.py" "teste.py" "*Elpy Config*" "*Customize Option: Python Flymake Command*" "if_monitor.sh" "*ansi-term*" "dmenu-teclados" "config.def.h<slstatus>" "tabela_funcionarios.sql" "aula001.sql" "banco-inicial.sql" "*SQL: Postgres*" "dmenu-docker-compose.sh" "HELLO" "index.theme" "icon-theme.cache" "]" "action-unavailable-symbolic.svg" "autostart.sh" "dmenu-window" "battery_status.sh" "emacs.org" "init.el" "dunstrc" "*Compile-Log*" "picom.conf" "index.html" "config.mk" "Untitled<2>" "Untitled<3>" "Untitled" "myinit.org" "config" "muta_microfone" "config.def.h<.dwm>" "block-battery" "dwmbar-powerline" "diminui_volume" "muta_volume" "*scratch*" "*Messages*" "*Async-native-compile-log*" "*Warnings*" "magit-process: .dotfiles" "magit: .dotfiles" "volume_icon.sh" "app.js" "x.c" "x.c.rej" "config.def.h.rej" "config.def.h<st>"))
(setq file-name-history '("~/git/win10vm/win10.xml" #("/home/anderson/.dwm/autostart.sh" 0 32 (ivy-index 0)) #("/home/anderson/.config/slstatus/" 0 32 (ivy-index 0)) #("/home/anderson/git/Educacional/UFPR_Estatistica/CE301_Estatistica_Basica/100-graficos-tabelas-uni.R" 0 99 (ivy-index 14)) #("/home/anderson/git/Educacional/UFPR_Estatistica/CE301_Estatistica_Basica/Livro_Estatitica_Basica/testes.r" 0 105 (ivy-index 0)) #("/home/anderson/git/Educacional/UFPR_Estatistica/CE301_Estatistica_Basica/" 0 73 (ivy-index 4)) #("/var/spool/cron/crontabs/anderson" 0 33 (ivy-index 0)) #("/var/spool/cron/crontabs/" 0 25 (ivy-index 2)) "/tmp/crontab.uSJaXd/crontab" "/tmp/crontab.vtEVge/crontab" "/home/anderson/.dotfiles/.local/bin/sl-wttr.sh~" #("/home/anderson/.dotfiles/.config/slstatus/" 0 42 (ivy-index 1)) #("/home/anderson/git/Educacional/UFPR_Estatistica/CE301_Estatistica_Basica/101-medidas-uni.R" 0 90 (ivy-index 0)) #("/home/anderson/.dwm/config.def.h" 0 32 (ivy-index 0)) #("/home/anderson/.emacs.d/emacs.org" 0 33 (ivy-index 12)) "/home/anderson/.emacs.d/init.el" #("/home/anderson/git/Educacional/Programa_Desenvolve_Boticario/008_Postgres_views_funcoes_consultas/dados-aula-2.sql" 0 114 (ivy-index 5)) #("/home/anderson/git/Educacional/UFPR_Estatistica/CI182_Fundamentos_Programacao_Computadores/calcula_raiz_de_3_numeros.py" 0 119 (ivy-index 0)) "~/.emacs.d/emacs.org" #("/home/anderson/.dotfiles/.config/slstatus/config.def.h" 0 54 (ivy-index 0)) #("/home/anderson/.local/bin/battery_status.sh" 0 43 (ivy-index 1)) #("/home/anderson/teste.py" 0 23 (ivy-index 0)) #("/home/anderson/.dotfiles/.local/bin/dmenu/" 0 42 (ivy-index 2)) #("/home/anderson/.dotfiles/.local/bin/dmenu/dmenu-docker-lista-funcionando" 0 72 (ivy-index 0)) #("/home/anderson/.dotfiles/.local/bin/dmenu/dmenu-atalhos-programas" 0 65 (ivy-index 0)) #("/home/anderson/.dotfiles/.local/bin/dmenu/dmenu-docker-images" 0 61 (ivy-index 4)) #("/home/anderson/dmenu-docker-compose.sh" 0 38 (ivy-index 2)) #("/home/anderson/.dotfiles/.dwm/config.def.h" 0 42 (ivy-index 0)) "/home/anderson/.emacs.d/myinit.org" #("/home/anderson/git/Educacional/Programa_Desenvolve_Boticario/007_PostgreSQL/tabela_funcionarios.sql" 0 99 (ivy-index 9)) "/home/anderson/.dotfiles/.config/dunst/dunstrc" #("/home/anderson/.local/bin/volume_icon.sh" 0 40 (ivy-index 6)) #("/home/anderson/git/Educacional/Programa_Desenvolve_Boticario/006_Git_Github/projeto_inicial/index.html" 0 102 (ivy-index 7)) #("/home/anderson/git/Educacional/Programa_Desenvolve_Boticario/006_Git_Github/projeto_inicial/app.js" 0 98 (ivy-index 3)) #("/home/anderson/.config/picom.conf" 0 33 (ivy-index 3)) #("/home/anderson/.dotfiles/.dwm/" 0 30 (ivy-index 0)) #("/home/anderson/.dotfiles/.Xresources" 0 36 (ivy-index 0)) #("/home/anderson/.config/st/config.def.h" 0 38 (ivy-index 0)) "~/.dotfiles/.emacs.d/init.el"))
(setq projectile-project-command-history '#s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data ()))
(setq kill-ring '(#(" if [ \"$battery_level\" -le 95 ]; then" 0 1 (fontified t) 1 3 (fontified t face font-lock-keyword-face) 3 6 (fontified t) 6 22 (fontified t face font-lock-string-face) 22 29 (fontified t) 29 33 (fontified t) 33 37 (fontified t face font-lock-keyword-face)) #("$iconCam " 0 9 (face font-lock-string-face fontified t)) #("b#282828^^c#fb4934^" 0 1 (face font-lock-string-face fontified t) 1 8 (face ((:foreground "white") (:background "#282828")) fontified t) 8 11 (face font-lock-string-face fontified t) 11 18 (face ((:foreground "white") (:background "#fb4934")) fontified t) 18 19 (face font-lock-string-face fontified t)) #("if [ -z \"$camera\" ]; then
    iconCam=\"\"
else
    iconCam=\"\"" 0 2 (face font-lock-keyword-face fontified t) 2 8 (fontified t) 8 17 (face font-lock-string-face fontified t) 17 18 (fontified t) 18 21 (fontified t) 21 25 (face font-lock-keyword-face fontified t) 25 26 (fontified t) 26 30 (fontified t) 30 37 (face font-lock-variable-name-face fontified t) 37 38 (fontified t) 38 40 (face font-lock-string-face fontified t) 40 41 (fontified t) 41 45 (face font-lock-keyword-face fontified t) 45 46 (fontified t) 46 50 (fontified t) 50 57 (face font-lock-variable-name-face fontified t) 57 58 (fontified t) 58 59 (face font-lock-string-face fontified t) 59 60 (face font-lock-string-face fontified t rear-nonsticky t) 60 61 (face font-lock-string-face fontified t)) #("camera=$(fuser /dev/video0)" 0 6 (face font-lock-variable-name-face fontified t) 6 9 (fontified t) 9 12 (face sh-quoted-exec fontified t) 12 26 (face sh-quoted-exec fontified t) 26 27 (fontified t)) "" "fuser /dev/video0
" "A9w@arM4AY3u*%" #("    print('As médias calculadas foram:\\n\\t'
          '- Média Aritimética {0}\\n\\t'
          '- Média Ponderada {1}\\n\\t'
          '- Média Harmônica {2}'.format(
              round(mediaAritimetica, 2),
              round(mediaPonderada, 2),
              round(mediaHarmonica, 2)))" 0 4 (fontified t) 4 9 (fontified t face font-lock-builtin-face) 9 10 (fontified t) 10 11 (fontified t face font-lock-string-face) 11 42 (fontified t face font-lock-string-face) 42 43 (fontified t face font-lock-string-face) 43 44 (fontified t) 44 54 (fontified t) 54 55 (fontified t face font-lock-string-face) 55 82 (fontified t face font-lock-string-face) 82 83 (fontified t face font-lock-string-face) 83 84 (fontified t) 84 94 (fontified t) 94 95 (fontified t face font-lock-string-face) 95 120 (fontified t face font-lock-string-face) 120 121 (fontified t face font-lock-string-face) 121 122 (fontified t) 122 132 (fontified t) 132 133 (fontified t face font-lock-string-face) 133 139 (fontified t face font-lock-string-face) 139 154 (fontified t face font-lock-string-face) 154 155 (fontified t face font-lock-string-face) 155 156 (fontified t) 156 162 (fontified t face font-lock-builtin-face) 162 164 (fontified t) 164 178 (fontified t) 178 183 (fontified t face font-lock-builtin-face) 183 206 (fontified t) 206 220 (fontified t) 220 225 (fontified t face font-lock-builtin-face) 225 246 (fontified t) 246 260 (fontified t) 260 265 (fontified t face font-lock-builtin-face) 265 286 (fontified t)) #("print('O texto informado possui {0} caracteres'.format(tamanhoTexto))" 0 5 (face font-lock-builtin-face fontified t) 5 6 (fontified t) 6 47 (face font-lock-string-face fontified t) 47 48 (fontified t) 48 54 (face font-lock-builtin-face fontified t) 54 69 (fontified t)) #("print('O texto informado possui {0} caracteres'.format(tamanhoTexto))" 0 5 (face font-lock-builtin-face fontified t) 5 6 (fontified t) 6 47 (face font-lock-string-face fontified t) 47 48 (fontified t) 48 54 (face font-lock-builtin-face fontified t) 54 69 (fontified t)) "(setq python-indent-guess-indent-offset t)  
(setq python-indent-guess-indent-offset-verbose nil)" #("title=$(mpc -f %title% current)" 0 1 (face font-lock-variable-name-face fontified t) 1 2 (face font-lock-variable-name-face fontified t) 2 3 (face font-lock-variable-name-face fontified t) 3 4 (face font-lock-variable-name-face fontified t) 4 5 (face font-lock-variable-name-face fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (face sh-quoted-exec fontified t) 9 10 (face sh-quoted-exec fontified t) 10 11 (face sh-quoted-exec fontified t) 11 12 (face sh-quoted-exec fontified t) 12 13 (face sh-quoted-exec fontified t) 13 14 (face sh-quoted-exec fontified t) 14 15 (face sh-quoted-exec fontified t) 15 16 (face sh-quoted-exec fontified t) 16 17 (face sh-quoted-exec fontified t) 17 18 (face sh-quoted-exec fontified t) 18 19 (face sh-quoted-exec fontified t) 19 20 (face sh-quoted-exec fontified t) 20 21 (face sh-quoted-exec fontified t) 21 22 (face sh-quoted-exec fontified t) 22 23 (face sh-quoted-exec fontified t) 23 24 (face sh-quoted-exec fontified t) 24 25 (face sh-quoted-exec fontified t) 25 26 (face sh-quoted-exec fontified t) 26 27 (face sh-quoted-exec fontified t) 27 28 (face sh-quoted-exec fontified t) 28 29 (face sh-quoted-exec fontified t) 29 30 (face sh-quoted-exec fontified t) 30 31 (fontified t)) "playing" "mpc status %state%
" "Escreva programa que pergunte a distância em km que um passageiro deseja per-
correr e calcule o preço da passagem, cobrando R$ 0,53 por km para viagens de até 200
km e R$ 0,47/km para viagens mais longas." #("#!/usr/bin/env python3
# coding=utf8
# ----------------------------------------------------------------------------
# Created By  : Anderson José de Souza Inácio
# Created Date: 2024-03-13
# version ='1.0'
# ---------------------------------------------------------------------------
\"\"\" Curso Estatística 2024 UFPR
Disciplina CI182 Fundamentos de Programacao de Computadores
Aula 4 Exercício 6.7 - 5 credito

Um banco concedera um credito especial aos seus clientes, variavel com o saldo
medio no ultimo ano. Faca um programa que leia o saldo medio de um cliente e
calcule o valor do credito de acordo com a tabela abaixo. Mostre uma mensagem
informando o saldo medio e o valor do credito.

Saldo medio         Percentual
-------------------------------------------------------
de 0 a 200          nenhum credito
de 201 a 400        20% do valor do saldo medio
de 401 a 600        30% do valor do saldo medio
acima de 601        40% do valor do saldo medio
\"\"\"
# ---------------------------------------------------------------------------
# Import
# ---------------------------------------------------------------------------
# from string import *
# import math
" 0 1 (fontified t face font-lock-comment-delimiter-face) 1 23 (fontified t face font-lock-comment-face) 23 25 (fontified t face font-lock-comment-delimiter-face) 25 37 (fontified t face font-lock-comment-face) 37 39 (fontified t face font-lock-comment-delimiter-face) 39 116 (fontified t face font-lock-comment-face) 116 118 (fontified t face font-lock-comment-delimiter-face) 118 162 (fontified t face font-lock-comment-face) 162 164 (fontified t face font-lock-comment-delimiter-face) 164 189 (fontified t face font-lock-comment-face) 189 191 (fontified t face font-lock-comment-delimiter-face) 191 206 (fontified t face font-lock-comment-face) 206 208 (fontified t face font-lock-comment-delimiter-face) 208 284 (fontified t face font-lock-comment-face) 284 286 (fontified t face font-lock-doc-face) 286 287 (fontified t syntax-table (15) face font-lock-doc-face) 287 376 (fontified t face font-lock-doc-face) 376 409 (fontified t face font-lock-doc-face) 409 410 (fontified t face font-lock-doc-face) 410 489 (fontified t face font-lock-doc-face) 489 566 (fontified t face font-lock-doc-face) 566 574 (fontified t face font-lock-doc-face) 574 644 (fontified t face font-lock-doc-face) 644 657 (fontified t face font-lock-doc-face) 657 689 (fontified t face font-lock-doc-face) 689 690 (rear-nonsticky t fontified t face font-lock-doc-face) 690 691 (fontified t face font-lock-doc-face) 691 692 (fontified t face font-lock-doc-face) 692 712 (fontified t face font-lock-doc-face) 712 723 (fontified t face font-lock-doc-face) 723 778 (fontified t face font-lock-doc-face) 778 779 (fontified t face font-lock-doc-face) 779 799 (fontified t face font-lock-doc-face) 799 812 (fontified t face font-lock-doc-face) 812 813 (rear-nonsticky t fontified t face font-lock-doc-face) 813 814 (fontified t face font-lock-doc-face) 814 834 (fontified t face font-lock-doc-face) 834 860 (fontified t face font-lock-doc-face) 860 861 (rear-nonsticky t fontified t face font-lock-doc-face) 861 862 (fontified t face font-lock-doc-face) 862 882 (fontified t face font-lock-doc-face) 882 908 (fontified t face font-lock-doc-face) 908 909 (rear-nonsticky t fontified t face font-lock-doc-face) 909 910 (fontified t face font-lock-doc-face) 910 930 (fontified t face font-lock-doc-face) 930 956 (fontified t face font-lock-doc-face) 956 957 (rear-nonsticky t fontified t face font-lock-doc-face) 957 958 (fontified t face font-lock-doc-face) 958 959 (syntax-table (15) fontified t face font-lock-doc-face) 959 961 (fontified t face font-lock-doc-face) 961 962 (fontified t) 962 964 (fontified t face font-lock-comment-delimiter-face) 964 1040 (fontified t face font-lock-comment-face) 1040 1042 (fontified t face font-lock-comment-delimiter-face) 1042 1049 (fontified t face font-lock-comment-face) 1049 1051 (fontified t face font-lock-comment-delimiter-face) 1051 1127 (fontified t face font-lock-comment-face) 1127 1129 (fontified t face font-lock-comment-delimiter-face) 1129 1150 (fontified t face font-lock-comment-face) 1150 1152 (fontified t face font-lock-comment-delimiter-face) 1152 1158 (fontified t face font-lock-comment-face) 1158 1163 (fontified t face font-lock-comment-face) 1163 1164 (rear-nonsticky t fontified t face font-lock-comment-face)) #("
print('Com seu saldo médio de R${0}, você pode conseguir crédito de até R${1}'.
      format(round(saldoMedio, 2), round(credito, 2)))" 0 1 (fontified t) 1 6 (fontified t face font-lock-builtin-face) 6 7 (fontified t) 7 79 (fontified t face font-lock-string-face) 79 81 (fontified t) 81 87 (fontified t) 87 93 (fontified t face font-lock-builtin-face) 93 94 (fontified t) 94 99 (fontified t face font-lock-builtin-face) 99 100 (fontified t) 100 115 (fontified t) 115 116 (fontified t) 116 121 (fontified t face font-lock-builtin-face) 121 133 (fontified t) 133 134 (fontified t) 134 135 (fontified t)) #("if (saldoMedio > 200 and saldoMedio <= 400):
    credito = 20
" 0 2 (fontified t face font-lock-keyword-face) 2 4 (fontified t) 4 21 (fontified t) 21 24 (fontified t face font-lock-keyword-face) 24 25 (fontified t) 25 42 (fontified t) 42 45 (fontified t) 45 49 (fontified t) 49 56 (fontified t face font-lock-variable-name-face) 56 62 (fontified t)) #("40% do valor do saldo médio" 0 27 (fontified t face font-lock-doc-face) 27 28 (rear-nonsticky t fontified t face font-lock-doc-face)) #("30% do valor do saldo médio" 0 28 (fontified t face font-lock-doc-face)) #("20% do valor do saldo médio" 0 28 (fontified t face font-lock-doc-face)) #("nenhum crédito" 0 14 (fontified t face font-lock-doc-face) 14 15 (rear-nonsticky t fontified t face font-lock-doc-face)) #("Percentual
nenhum crédito" 0 26 (fontified t face font-lock-doc-face)) "Saldo médio
de 0 a 200
de 201 a 400
de 401 a 600
acima de 601
Percentual
nenhum crédito
20% do valor do saldo médio
30% do valor do saldo médio
40% do valor do saldo médio" "Um banco concederá um crédito especial aos seus clientes, variável com o saldo
médio no último ano. Faça um programa que leia o saldo médio de um cliente e calcule
o valor do crédito de acordo com a tabela abaixo. Mostre uma mensagem informando o
saldo médio e o valor do crédito." #("#!/usr/bin/env python3
# coding=utf8
# ----------------------------------------------------------------------------
# Created By  : Anderson José de Souza Inácio
# Created Date: 2024-03-13
# version ='1.0'
# ---------------------------------------------------------------------------
\"\"\" Curso Estatística 2024 UFPR
Disciplina CI182 Fundamentos de Programacao de Computadores
Aula 4 Exercício 6.7 - 4 pesoideal

Tendo como dados de entrada a altura e o sexo de uma pessoa (M masculino
e F feminino), construa um programa que calcule seu peso ideal, utilizando
as seguintes formulas:
• para homens: (72.7 ∗ h) − 58
• para mulheres: (62.1 ∗ h) − 44.7
\"\"\"
# ---------------------------------------------------------------------------
# Import
# ---------------------------------------------------------------------------
# from string import *
# import math

" 0 1 (fontified t face font-lock-comment-delimiter-face) 1 23 (fontified t face font-lock-comment-face) 23 25 (fontified t face font-lock-comment-delimiter-face) 25 37 (fontified t face font-lock-comment-face) 37 39 (fontified t face font-lock-comment-delimiter-face) 39 116 (fontified t face font-lock-comment-face) 116 118 (fontified t face font-lock-comment-delimiter-face) 118 162 (fontified t face font-lock-comment-face) 162 164 (fontified t face font-lock-comment-delimiter-face) 164 189 (fontified t face font-lock-comment-face) 189 191 (fontified t face font-lock-comment-delimiter-face) 191 206 (fontified t face font-lock-comment-face) 206 208 (fontified t face font-lock-comment-delimiter-face) 208 284 (fontified t face font-lock-comment-face) 284 286 (fontified t face font-lock-doc-face) 286 287 (fontified t syntax-table (15) face font-lock-doc-face) 287 376 (fontified t face font-lock-doc-face) 376 411 (fontified t face font-lock-doc-face) 411 412 (fontified t face font-lock-doc-face) 412 485 (fontified t face font-lock-doc-face) 485 560 (fontified t face font-lock-doc-face) 560 573 (fontified t face font-lock-doc-face) 573 583 (fontified t face font-lock-doc-face) 583 647 (fontified t face font-lock-doc-face) 647 648 (rear-nonsticky t fontified t face font-lock-doc-face) 648 649 (fontified t face font-lock-doc-face) 649 650 (syntax-table (15) fontified t face font-lock-doc-face) 650 652 (fontified t face font-lock-doc-face) 652 653 (fontified t) 653 655 (fontified t face font-lock-comment-delimiter-face) 655 731 (fontified t face font-lock-comment-face) 731 733 (fontified t face font-lock-comment-delimiter-face) 733 740 (fontified t face font-lock-comment-face) 740 742 (fontified t face font-lock-comment-delimiter-face) 742 818 (fontified t face font-lock-comment-face) 818 820 (fontified t face font-lock-comment-delimiter-face) 820 841 (fontified t face font-lock-comment-face) 841 843 (fontified t face font-lock-comment-delimiter-face) 843 849 (fontified t face font-lock-comment-face) 849 854 (fontified t face font-lock-comment-face) 854 855 (rear-nonsticky t fontified t face font-lock-comment-face) 855 856 (fontified t)) #("(sexo.upper == 'F'" 0 1 (fontified t) 1 15 (fontified t) 15 18 (fontified t face font-lock-string-face)) "Tendo como dados de entrada a altura e o sexo de uma pessoa (M masculino
e F feminino), construa um programa que calcule seu peso ideal, utilizando as seguintes
fórmulas:
• para homens: (72.7 ∗ h) − 58
• para mulheres: (62.1 ∗ h) − 44.7" #("#!/usr/bin/env python3
# coding=utf8
# ----------------------------------------------------------------------------
# Created By  : Anderson José de Souza Inácio
# Created Date: 2024-03-13
# version ='1.0'
# ---------------------------------------------------------------------------
\"\"\" Curso Estatística 2024 UFPR
Disciplina CI182 Fundamentos de Programacao de Computadores
Aula 4 Exercício 6.7 - 3 achamaior

Escreva um programa que leia 3 números inteiros e mostre o maior deles.
\"\"\"
# ---------------------------------------------------------------------------
# Import
# ---------------------------------------------------------------------------
# from string import *
# import math
" 0 1 (fontified t face font-lock-comment-delimiter-face) 1 23 (fontified t face font-lock-comment-face) 23 25 (fontified t face font-lock-comment-delimiter-face) 25 37 (fontified t face font-lock-comment-face) 37 39 (fontified t face font-lock-comment-delimiter-face) 39 116 (fontified t face font-lock-comment-face) 116 118 (fontified t face font-lock-comment-delimiter-face) 118 162 (fontified t face font-lock-comment-face) 162 164 (fontified t face font-lock-comment-delimiter-face) 164 189 (fontified t face font-lock-comment-face) 189 191 (fontified t face font-lock-comment-delimiter-face) 191 206 (fontified t face font-lock-comment-face) 206 208 (fontified t face font-lock-comment-delimiter-face) 208 284 (fontified t face font-lock-comment-face) 284 286 (fontified t face font-lock-doc-face) 286 287 (fontified t syntax-table (15) face font-lock-doc-face) 287 376 (fontified t face font-lock-doc-face) 376 411 (fontified t face font-lock-doc-face) 411 412 (fontified t face font-lock-doc-face) 412 483 (fontified t face font-lock-doc-face) 483 484 (rear-nonsticky t fontified t face font-lock-doc-face) 484 485 (fontified t face font-lock-doc-face) 485 486 (syntax-table (15) fontified t face font-lock-doc-face) 486 488 (fontified t face font-lock-doc-face) 488 489 (fontified t) 489 491 (fontified t face font-lock-comment-delimiter-face) 491 567 (fontified t face font-lock-comment-face) 567 569 (fontified t face font-lock-comment-delimiter-face) 569 576 (fontified t face font-lock-comment-face) 576 578 (fontified t face font-lock-comment-delimiter-face) 578 654 (fontified t face font-lock-comment-face) 654 656 (fontified t face font-lock-comment-delimiter-face) 656 677 (fontified t face font-lock-comment-face) 677 679 (fontified t face font-lock-comment-delimiter-face) 679 685 (fontified t face font-lock-comment-face) 685 691 (fontified t face font-lock-comment-face)) #("maior = num1 if num1 > num2 and num1 > num3 else 0" 0 5 (fontified t face font-lock-variable-name-face) 5 13 (fontified t) 13 15 (fontified t face font-lock-keyword-face) 15 28 (fontified t) 28 31 (fontified t face font-lock-keyword-face) 31 44 (fontified t) 44 48 (fontified t face font-lock-keyword-face) 48 50 (fontified t)) #("nota1 = int(input('Informe o valor da nota 1: '))
nota2 = int(input('Informe o valor da nota 2: '))
nota3 = int(input('Informe o valor da nota 3: '))
" 0 5 (fontified t face font-lock-variable-name-face) 5 8 (fontified t) 8 11 (fontified t face font-lock-builtin-face) 11 12 (fontified t) 12 17 (fontified t face font-lock-builtin-face) 17 18 (fontified t) 18 47 (fontified t face font-lock-string-face) 47 48 (fontified t) 48 50 (fontified t) 50 55 (fontified t face font-lock-variable-name-face) 55 56 (fontified t) 56 58 (fontified t) 58 61 (fontified t face font-lock-builtin-face) 61 62 (fontified t) 62 67 (fontified t face font-lock-builtin-face) 67 68 (fontified t) 68 97 (fontified t face font-lock-string-face) 97 98 (fontified t) 98 99 (rear-nonsticky t fontified t) 99 100 (fontified t) 100 105 (fontified t face font-lock-variable-name-face) 105 108 (fontified t) 108 111 (fontified t face font-lock-builtin-face) 111 112 (fontified t) 112 117 (fontified t face font-lock-builtin-face) 117 118 (fontified t) 118 147 (fontified t face font-lock-string-face) 147 148 (fontified t) 148 149 (rear-nonsticky t fontified t) 149 150 (fontified t)) "Escreva um programa que leia 3 números inteiros e mostre o maior deles." #("#!/usr/bin/env python3
# coding=utf8
# ----------------------------------------------------------------------------
# Created By  : Anderson José de Souza Inácio
# Created Date: 2024-03-13
# version ='1.0'
# ---------------------------------------------------------------------------
\"\"\" Curso Estatística 2024 UFPR
Disciplina CI182 Fundamentos de Programacao de Computadores
Aula 4 Exercício 6.7 - 2 medias

Um usuario deseja um programa onde possa escolher que tipo de media deseja
calcular a partir de 3 notas. Faca um programa que leia as notas, a opcao
escolhida pelo usuario e calcule as medias:
• aritmetica
• ponderada (pesos 3, 3 e 4)
• harmonica (definida como sendo o numero de termos dividido pela soma dos
inversos de cada termo)
\"\"\"
# ---------------------------------------------------------------------------
# Import
# ---------------------------------------------------------------------------
# from string import *
import math
" 0 1 (fontified t face font-lock-comment-delimiter-face) 1 23 (fontified t face font-lock-comment-face) 23 25 (fontified t face font-lock-comment-delimiter-face) 25 37 (fontified t face font-lock-comment-face) 37 39 (fontified t face font-lock-comment-delimiter-face) 39 116 (fontified t face font-lock-comment-face) 116 118 (fontified t face font-lock-comment-delimiter-face) 118 162 (fontified t face font-lock-comment-face) 162 164 (fontified t face font-lock-comment-delimiter-face) 164 189 (fontified t face font-lock-comment-face) 189 191 (fontified t face font-lock-comment-delimiter-face) 191 206 (fontified t face font-lock-comment-face) 206 208 (fontified t face font-lock-comment-delimiter-face) 208 284 (fontified t face font-lock-comment-face) 284 286 (fontified t face font-lock-doc-face) 286 287 (fontified t syntax-table (15) face font-lock-doc-face) 287 376 (fontified t face font-lock-doc-face) 376 408 (fontified t face font-lock-doc-face) 408 409 (fontified t face font-lock-doc-face) 409 484 (fontified t face font-lock-doc-face) 484 558 (fontified t face font-lock-doc-face) 558 573 (fontified t face font-lock-doc-face) 573 602 (fontified t face font-lock-doc-face) 602 615 (fontified t face font-lock-doc-face) 615 644 (fontified t face font-lock-doc-face) 644 719 (fontified t face font-lock-doc-face) 719 728 (fontified t face font-lock-doc-face) 728 741 (fontified t face font-lock-doc-face) 741 742 (rear-nonsticky t fontified t face font-lock-doc-face) 742 743 (fontified t face font-lock-doc-face) 743 744 (syntax-table (15) fontified t face font-lock-doc-face) 744 746 (fontified t face font-lock-doc-face) 746 747 (fontified t) 747 749 (fontified t face font-lock-comment-delimiter-face) 749 825 (fontified t face font-lock-comment-face) 825 827 (fontified t face font-lock-comment-delimiter-face) 827 834 (fontified t face font-lock-comment-face) 834 836 (fontified t face font-lock-comment-delimiter-face) 836 912 (fontified t face font-lock-comment-face) 912 914 (fontified t face font-lock-comment-delimiter-face) 914 935 (fontified t face font-lock-comment-face) 935 941 (fontified t face font-lock-keyword-face) 941 946 (fontified t) 946 947 (rear-nonsticky t fontified t)) #("(((mmc/nota1)+(mmc/nota2)+(mmc/nota3))/mmc)" 0 3 (fontified t) 3 7 (fontified t) 7 12 (fontified t) 12 15 (fontified t) 15 19 (fontified t) 19 24 (fontified t) 24 27 (fontified t) 27 31 (fontified t) 31 36 (fontified t) 36 43 (fontified t)) #("nota1 = float(input('Informe o valor da nota 1: '))" 0 5 (fontified t face font-lock-variable-name-face) 5 8 (fontified t) 8 13 (fontified t face font-lock-builtin-face) 13 14 (fontified t) 14 19 (fontified t face font-lock-builtin-face) 19 20 (fontified t) 20 49 (fontified t face font-lock-string-face) 49 50 (fontified t) 50 51 (fontified t)) "Um usuário deseja um programa onde possa escolher que tipo de média deseja
calcular a partir de 3 notas. Faça um programa que leia as notas, a opção escolhida pelo
usuário e calcule as médias:
• aritmética
• ponderada (pesos 3, 3 e 4)
• harmônica (definida como sendo o número de termos dividido pela soma dos inversos
de cada termo)" #("#!/usr/bin/env python3
# coding=utf8
# ----------------------------------------------------------------------------
# Created By  : Anderson José de Souza Inácio
# Created Date: 2024-03-13
# version ='1.0'
# ---------------------------------------------------------------------------
\"\"\" Curso Estatística 2024 UFPR
Disciplina CI182 Fundamentos de Programacao de Computadores
Aula 4 Exercício 6.6 - 2 multiplos

Elaborar um programa que le 2 valores a e b e os escreve com a mensagem:
“Sao multiplos” ou “Nao sao multiplos”.
\"\"\"
# ---------------------------------------------------------------------------
# Import
# ---------------------------------------------------------------------------
# from string import *
# import math
" 0 1 (fontified t face font-lock-comment-delimiter-face) 1 23 (fontified t face font-lock-comment-face) 23 25 (fontified t face font-lock-comment-delimiter-face) 25 37 (fontified t face font-lock-comment-face) 37 39 (fontified t face font-lock-comment-delimiter-face) 39 116 (fontified t face font-lock-comment-face) 116 118 (fontified t face font-lock-comment-delimiter-face) 118 162 (fontified t face font-lock-comment-face) 162 164 (fontified t face font-lock-comment-delimiter-face) 164 189 (fontified t face font-lock-comment-face) 189 191 (fontified t face font-lock-comment-delimiter-face) 191 206 (fontified t face font-lock-comment-face) 206 208 (fontified t face font-lock-comment-delimiter-face) 208 284 (fontified t face font-lock-comment-face) 284 286 (fontified t face font-lock-doc-face) 286 287 (fontified t syntax-table (15) face font-lock-doc-face) 287 376 (fontified t face font-lock-doc-face) 376 411 (fontified t face font-lock-doc-face) 411 412 (fontified t face font-lock-doc-face) 412 485 (fontified t face font-lock-doc-face) 485 523 (fontified t face font-lock-doc-face) 523 524 (rear-nonsticky t fontified t face font-lock-doc-face) 524 525 (fontified t face font-lock-doc-face) 525 526 (syntax-table (15) fontified t face font-lock-doc-face) 526 528 (fontified t face font-lock-doc-face) 528 529 (fontified t) 529 531 (fontified t face font-lock-comment-delimiter-face) 531 607 (fontified t face font-lock-comment-face) 607 609 (fontified t face font-lock-comment-delimiter-face) 609 616 (fontified t face font-lock-comment-face) 616 618 (fontified t face font-lock-comment-delimiter-face) 618 694 (fontified t face font-lock-comment-face) 694 696 (fontified t face font-lock-comment-delimiter-face) 696 717 (fontified t face font-lock-comment-face) 717 719 (fontified t face font-lock-comment-delimiter-face) 719 725 (fontified t face font-lock-comment-face) 725 731 (fontified t face font-lock-comment-face)) #("    multiplo = valorA * i
    if (multiplo == valorB):
        isMultiplos = True
        break" 0 4 (fontified t) 4 12 (fontified t face font-lock-variable-name-face) 12 26 (fontified t) 26 30 (fontified t) 30 32 (fontified t face font-lock-keyword-face) 32 33 (fontified t) 33 34 (fontified t) 34 42 (fontified t) 42 55 (fontified t) 55 63 (fontified t) 63 74 (fontified t face font-lock-variable-name-face) 74 77 (fontified t) 77 81 (fontified t face font-lock-constant-face) 81 82 (fontified t) 82 90 (fontified t) 90 95 (fontified t face font-lock-keyword-face)) #("for i in range(1, 100):
    multiplo = valorA * i
    if (multiplo == valorB):
        isMultiplos = True
        break
" 0 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t) 4 6 (fontified t) 6 8 (fontified t face font-lock-keyword-face) 8 9 (fontified t) 9 14 (fontified t face font-lock-builtin-face) 14 21 (fontified t) 21 24 (fontified t) 24 28 (fontified t) 28 36 (fontified t face font-lock-variable-name-face) 36 50 (fontified t) 50 54 (fontified t) 54 56 (fontified t face font-lock-keyword-face) 56 57 (fontified t) 57 58 (fontified t) 58 66 (fontified t) 66 79 (fontified t) 79 87 (fontified t) 87 98 (fontified t face font-lock-variable-name-face) 98 101 (fontified t) 101 105 (fontified t face font-lock-constant-face) 105 106 (fontified t) 106 114 (fontified t) 114 119 (fontified t face font-lock-keyword-face) 119 120 (fontified t)) "Elaborar um programa que lê 2 valores a e b e os escreve com a mensagem:
“São múltiplos” ou “Não são múltiplos”." #("#!/usr/bin/env python3
# coding=utf8
# ----------------------------------------------------------------------------
# Created By  : Anderson José de Souza Inácio
# Created Date: 2024-03-13
# version ='1.0'
# ---------------------------------------------------------------------------
\"\"\" Curso Estatística 2024 UFPR
Disciplina CI182 Fundamentos de Programacao de Computadores
Aula 4 Exercício 6.6 - 1 notas

Escreva um programa que leia o codigo de um aluno e suas tres notas. Calcule a
media ponderada do aluno, considerando que o peso para a maior nota seja 4 e
para as duas restantes, 3. Mostre o codigo do aluno, suas tres notas,
a media calculada e uma mensagem ”APROVADO” se a media for maior ou igual a
5 e ”REPROVADO” se a media for menor que 5.
\"\"\"
# ---------------------------------------------------------------------------
# Import
# ---------------------------------------------------------------------------
# from string import *
# import math
" 0 1 (fontified t face font-lock-comment-delimiter-face) 1 23 (fontified t face font-lock-comment-face) 23 25 (fontified t face font-lock-comment-delimiter-face) 25 37 (fontified t face font-lock-comment-face) 37 39 (fontified t face font-lock-comment-delimiter-face) 39 116 (fontified t face font-lock-comment-face) 116 118 (fontified t face font-lock-comment-delimiter-face) 118 162 (fontified t face font-lock-comment-face) 162 164 (fontified t face font-lock-comment-delimiter-face) 164 189 (fontified t face font-lock-comment-face) 189 191 (fontified t face font-lock-comment-delimiter-face) 191 206 (fontified t face font-lock-comment-face) 206 208 (fontified t face font-lock-comment-delimiter-face) 208 284 (fontified t face font-lock-comment-face) 284 286 (fontified t face font-lock-doc-face) 286 287 (fontified t syntax-table (15) face font-lock-doc-face) 287 376 (fontified t face font-lock-doc-face) 376 407 (fontified t face font-lock-doc-face) 407 408 (fontified t face font-lock-doc-face) 408 487 (fontified t face font-lock-doc-face) 487 564 (fontified t face font-lock-doc-face) 564 572 (fontified t face font-lock-doc-face) 572 634 (fontified t face font-lock-doc-face) 634 658 (fontified t face font-lock-doc-face) 658 710 (fontified t face font-lock-doc-face) 710 737 (fontified t face font-lock-doc-face) 737 752 (fontified t face font-lock-doc-face) 752 753 (rear-nonsticky t fontified t face font-lock-doc-face) 753 754 (fontified t face font-lock-doc-face) 754 755 (syntax-table (15) fontified t face font-lock-doc-face) 755 757 (fontified t face font-lock-doc-face) 757 758 (fontified t) 758 760 (fontified t face font-lock-comment-delimiter-face) 760 836 (fontified t face font-lock-comment-face) 836 838 (fontified t face font-lock-comment-delimiter-face) 838 845 (fontified t face font-lock-comment-face) 845 847 (fontified t face font-lock-comment-delimiter-face) 847 923 (fontified t face font-lock-comment-face) 923 925 (fontified t face font-lock-comment-delimiter-face) 925 946 (fontified t face font-lock-comment-face) 946 948 (fontified t face font-lock-comment-delimiter-face) 948 959 (fontified t face font-lock-comment-face) 959 960 (rear-nonsticky t fontified t face font-lock-comment-face)) #("nota1 = nota1*4 if nota1 > nota2 and nota1 > nota3 else nota1*3" 0 5 (fontified t face font-lock-variable-name-face) 5 8 (fontified t) 8 16 (fontified t) 16 18 (fontified t face font-lock-keyword-face) 18 19 (fontified t) 19 27 (fontified t) 27 33 (fontified t) 33 36 (fontified t face font-lock-keyword-face) 36 37 (fontified t) 37 45 (fontified t) 45 51 (fontified t) 51 55 (fontified t face font-lock-keyword-face) 55 56 (fontified t) 56 63 (fontified t)) #("print('Bem vindo ao programa calcnota')
identificacao = int(input('Informe o seu número de indentificação: '))
nota1 = int(input('Informe o valor da nota 1: '))
nota2 = int(input('Informe o valor da nota 2: '))
nota3 = int(input('Informe o valor da nota 3: '))
mediaExercicios = float(input('Informe a sua média de exercícios: '))

mediaAproveitamento = float(
    (nota1 + (nota2 * 2) + (nota3 * 3) + mediaExercicios)/7
)
" 0 5 (fontified t face font-lock-builtin-face) 5 6 (fontified t) 6 38 (fontified t face font-lock-string-face) 38 40 (fontified t) 40 53 (fontified t face font-lock-variable-name-face) 53 56 (fontified t) 56 59 (fontified t face font-lock-builtin-face) 59 60 (fontified t) 60 65 (fontified t face font-lock-builtin-face) 65 66 (fontified t) 66 107 (fontified t face font-lock-string-face) 107 108 (fontified t face font-lock-string-face) 108 110 (fontified t) 110 111 (fontified t) 111 116 (fontified t) 116 119 (fontified t) 119 122 (fontified t face font-lock-builtin-face) 122 123 (fontified t) 123 128 (fontified t face font-lock-builtin-face) 128 129 (fontified t) 129 158 (fontified t face font-lock-string-face) 158 161 (fontified t) 161 166 (fontified t face font-lock-variable-name-face) 166 169 (fontified t) 169 172 (fontified t face font-lock-builtin-face) 172 173 (fontified t) 173 178 (fontified t face font-lock-builtin-face) 178 179 (fontified t) 179 208 (fontified t face font-lock-string-face) 208 209 (rear-nonsticky t fontified t) 209 210 (fontified t) 210 211 (fontified t) 211 212 (fontified t face font-lock-variable-name-face) 212 216 (fontified t face font-lock-variable-name-face) 216 219 (fontified t) 219 222 (fontified t face font-lock-builtin-face) 222 223 (fontified t) 223 228 (fontified t face font-lock-builtin-face) 228 229 (fontified t) 229 258 (fontified t face font-lock-string-face) 258 259 (rear-nonsticky t fontified t) 259 261 (fontified t) 261 276 (fontified t face font-lock-variable-name-face) 276 279 (fontified t) 279 284 (fontified t face font-lock-builtin-face) 284 285 (fontified t) 285 290 (fontified t face font-lock-builtin-face) 290 291 (fontified t) 291 328 (fontified t face font-lock-string-face) 328 329 (fontified t) 329 331 (fontified t) 331 332 (fontified t) 332 351 (fontified t) 351 354 (fontified t) 354 359 (fontified t face font-lock-builtin-face) 359 361 (fontified t) 361 365 (fontified t) 365 366 (fontified t) 366 375 (fontified t) 375 389 (fontified t) 389 402 (fontified t) 402 417 (fontified t) 417 418 (fontified t) 418 423 (fontified t)) "Escreva um programa que leia o código de um aluno e suas três notas. Calcule a
média ponderada do aluno, considerando que o peso para a maior nota seja 4 e para as
duas restantes, 3. Mostre o código do aluno, suas três notas, a média calculada e uma
mensagem ”APROVADO” se a média for maior ou igual a 5 e ”REPROVADO” se a média
for menor que 5." #("#!/usr/bin/env python3
# coding=utf8
# ----------------------------------------------------------------------------
# Created By  : Anderson José de Souza Inácio
# Created Date: 2024-03-13
# version ='1.0'
# ---------------------------------------------------------------------------
\"\"\" Curso Estatística 2024 UFPR
Disciplina CI182 Fundamentos de Programacao de Computadores
Aula 4 Exercício 6.7 - 1 calcnota

Escrever um programa que le o numero de identificacao, as 3 notas obtidas por
um aluno em 3 provas e a media dos exercıcios (ME) que fazem parte da
avaliacao. Calcular a media de aproveitamento, usando a formula:

   MA = (Nota1 + Nota2 × 2 + Nota3 × 3 + ME)/7

A atribuicao de conceitos obedece a tabela abaixo:

Media de Aproveitamento     Conceito
   media > 90                  A
      75 < media ⩽ 90          B
      60 < media ⩽ 75          C
      40 < media ⩽ 60          D
   media ⩽ 40                  E

O programa deve escrever o numero do aluno, suas notas, a media dos exercıcios,
a media de aproveitamento, o conceito correspondente e a mensagem: APROVADO
se o conceito for A,B ou C e REPROVADO se o conceito for D ou E.
\"\"\"
# ---------------------------------------------------------------------------
# Import
# ---------------------------------------------------------------------------
# from string import *
# import math
" 0 1 (fontified t face font-lock-comment-delimiter-face) 1 23 (fontified t face font-lock-comment-face) 23 25 (fontified t face font-lock-comment-delimiter-face) 25 37 (fontified t face font-lock-comment-face) 37 39 (fontified t face font-lock-comment-delimiter-face) 39 116 (fontified t face font-lock-comment-face) 116 118 (fontified t face font-lock-comment-delimiter-face) 118 162 (fontified t face font-lock-comment-face) 162 164 (fontified t face font-lock-comment-delimiter-face) 164 189 (fontified t face font-lock-comment-face) 189 191 (fontified t face font-lock-comment-delimiter-face) 191 206 (fontified t face font-lock-comment-face) 206 208 (fontified t face font-lock-comment-delimiter-face) 208 284 (fontified t face font-lock-comment-face) 284 286 (fontified t face font-lock-doc-face) 286 287 (fontified t syntax-table (15) face font-lock-doc-face) 287 376 (fontified t face font-lock-doc-face) 376 410 (fontified t face font-lock-doc-face) 410 411 (fontified t face font-lock-doc-face) 411 489 (fontified t face font-lock-doc-face) 489 491 (fontified t face font-lock-doc-face) 491 492 (fontified t face font-lock-doc-face) 492 559 (fontified t face font-lock-doc-face) 559 570 (fontified t face font-lock-doc-face) 570 573 (fontified t face font-lock-doc-face) 573 583 (fontified t face font-lock-doc-face) 583 624 (fontified t face font-lock-doc-face) 624 625 (fontified t face font-lock-doc-face) 625 628 (fontified t face font-lock-doc-face) 628 672 (fontified t face font-lock-doc-face) 672 673 (fontified t face font-lock-doc-face) 673 724 (fontified t face font-lock-doc-face) 724 725 (fontified t face font-lock-doc-face) 725 762 (fontified t face font-lock-doc-face) 762 765 (fontified t face font-lock-doc-face) 765 795 (fontified t face font-lock-doc-face) 795 801 (fontified t face font-lock-doc-face) 801 828 (fontified t face font-lock-doc-face) 828 834 (fontified t face font-lock-doc-face) 834 861 (fontified t face font-lock-doc-face) 861 867 (fontified t face font-lock-doc-face) 867 894 (fontified t face font-lock-doc-face) 894 897 (fontified t face font-lock-doc-face) 897 927 (fontified t face font-lock-doc-face) 927 928 (fontified t face font-lock-doc-face) 928 1008 (fontified t face font-lock-doc-face) 1008 1016 (fontified t face font-lock-doc-face) 1016 1084 (fontified t face font-lock-doc-face) 1084 1098 (fontified t face font-lock-doc-face) 1098 1147 (fontified t face font-lock-doc-face) 1147 1148 (rear-nonsticky t fontified t face font-lock-doc-face) 1148 1149 (fontified t face font-lock-doc-face) 1149 1150 (syntax-table (15) fontified t face font-lock-doc-face) 1150 1152 (fontified t face font-lock-doc-face) 1152 1153 (fontified t) 1153 1155 (fontified t face font-lock-comment-delimiter-face) 1155 1231 (fontified t face font-lock-comment-face) 1231 1233 (fontified t face font-lock-comment-delimiter-face) 1233 1240 (fontified t face font-lock-comment-face) 1240 1242 (fontified t face font-lock-comment-delimiter-face) 1242 1318 (fontified t face font-lock-comment-face) 1318 1320 (fontified t face font-lock-comment-delimiter-face) 1320 1341 (fontified t face font-lock-comment-face) 1341 1343 (fontified t face font-lock-comment-delimiter-face) 1343 1354 (fontified t face font-lock-comment-face) 1354 1355 (rear-nonsticky t fontified t face font-lock-comment-face)) #("float(" 0 5 (fontified t face font-lock-builtin-face) 5 6 (fontified t)) #("elif (mediaAproveitamento <= 90 and mediaAproveitamento > 75):
    conceito = 'B'
    " 0 4 (fontified t face font-lock-keyword-face) 4 6 (fontified t) 6 32 (fontified t) 32 35 (fontified t face font-lock-keyword-face) 35 36 (fontified t) 36 60 (fontified t) 60 63 (fontified t) 63 67 (fontified t) 67 75 (fontified t face font-lock-variable-name-face) 75 78 (fontified t) 78 81 (fontified t face font-lock-string-face) 81 86 (fontified t)) #("    print('O aluno id {0} obteve conceito A, com a média de aproveitamento'
          ' em {1}'.format(identificacao, mediaAproveitamento))" 0 4 (fontified t) 4 9 (fontified t face font-lock-builtin-face) 9 10 (fontified t) 10 75 (fontified t face font-lock-string-face) 75 76 (fontified t) 76 86 (fontified t) 86 88 (fontified t face font-lock-string-face) 88 94 (fontified t face font-lock-string-face) 94 95 (fontified t face font-lock-string-face) 95 96 (fontified t) 96 102 (fontified t face font-lock-builtin-face) 102 103 (fontified t) 103 118 (fontified t) 118 137 (fontified t) 137 138 (fontified t) 138 139 (fontified t)) #("nota1 = input('Informe o valor da nota 1:' )" 0 5 (fontified t face font-lock-variable-name-face) 5 8 (fontified t) 8 13 (fontified t face font-lock-builtin-face) 13 14 (fontified t) 14 42 (fontified t face font-lock-string-face) 42 43 (fontified t) 43 44 (fontified t)) "Escrever um programa que lê o número de identificação, as 3 notas obtidas por
um aluno em 3 provas e a média dos exercı́cios (M E) que fazem parte da avaliação. Cal-
cular a média de aproveitamento, usando a fórmula:
M A = (N ota1 + N ota2 × 2 + N ota3 × 3 + M E)/7
A atribuição de conceitos obedece a tabela abaixo:
Média de Aproveitamento
media > 90
75 < media ⩽ 90
60 < media ⩽ 75
40 < media ⩽ 60
media ⩽ 40
Conceito
A
B
C
D
E
O programa deve escrever o número do aluno, suas notas, a média dos exercı́cios, a média
de aproveitamento, o conceito correspondente e a mensagem: APROVADO se o conceito
for A,B ou C e REPROVADO se o conceito for D ou E." #("#!/usr/bin/env python3
# coding=utf8
# ----------------------------------------------------------------------------
# Created By  : Anderson José de Souza Inácio
# Created Date: 2024-03-13
# version ='1.0'
# ---------------------------------------------------------------------------
\"\"\" Curso Estatística 2024 UFPR
Disciplina CI182 Fundamentos de Programacao de Computadores
Aula 4 Exercício 5.4 - 5 ultimoStr

Solicitar do usuario dois textos separados e em seguida mostrar o ındice da
ultima ocorrencia do segundo texto t no primeiro, ou -1, se o segundo texto
nao ocorre no primeiro.
\"\"\"
# ---------------------------------------------------------------------------
# Import
# ---------------------------------------------------------------------------
# from string import *
# import math
" 0 1 (fontified t face font-lock-comment-delimiter-face) 1 23 (fontified t face font-lock-comment-face) 23 25 (fontified t face font-lock-comment-delimiter-face) 25 37 (fontified t face font-lock-comment-face) 37 39 (fontified t face font-lock-comment-delimiter-face) 39 116 (fontified t face font-lock-comment-face) 116 118 (fontified t face font-lock-comment-delimiter-face) 118 162 (fontified t face font-lock-comment-face) 162 164 (fontified t face font-lock-comment-delimiter-face) 164 189 (fontified t face font-lock-comment-face) 189 191 (fontified t face font-lock-comment-delimiter-face) 191 206 (fontified t face font-lock-comment-face) 206 208 (fontified t face font-lock-comment-delimiter-face) 208 284 (fontified t face font-lock-comment-face) 284 286 (fontified t face font-lock-doc-face) 286 287 (fontified t syntax-table (15) face font-lock-doc-face) 287 376 (fontified t face font-lock-doc-face) 376 411 (fontified t face font-lock-doc-face) 411 412 (fontified t face font-lock-doc-face) 412 488 (fontified t face font-lock-doc-face) 488 564 (fontified t face font-lock-doc-face) 564 575 (fontified t face font-lock-doc-face) 575 586 (fontified t face font-lock-doc-face) 586 587 (rear-nonsticky t fontified t face font-lock-doc-face) 587 588 (fontified t face font-lock-doc-face) 588 589 (syntax-table (15) fontified t face font-lock-doc-face) 589 591 (fontified t face font-lock-doc-face) 591 592 (fontified t) 592 594 (fontified t face font-lock-comment-delimiter-face) 594 670 (fontified t face font-lock-comment-face) 670 672 (fontified t face font-lock-comment-delimiter-face) 672 679 (fontified t face font-lock-comment-face) 679 681 (fontified t face font-lock-comment-delimiter-face) 681 757 (fontified t face font-lock-comment-face) 757 759 (fontified t face font-lock-comment-delimiter-face) 759 780 (fontified t face font-lock-comment-face) 780 782 (fontified t face font-lock-comment-delimiter-face) 782 794 (fontified t face font-lock-comment-face)) #("pessego passeia a noite com pessego, so que pessego tem medo do escuro, pes" 0 75 (fontified t mouse-face highlight help-echo "mouse-2: insert after prompt as new input")) "Solicitar do usuário dois textos separados e em seguida mostrar o ı́ndice da
última ocorrência do segundo texto t no primeiro, ou -1, se o segundo texto não ocorre
no primeiro." #("#!/usr/bin/env python3
# coding=utf8
# ----------------------------------------------------------------------------
# Created By  : Anderson José de Souza Inácio
# Created Date: 2024-03-13
# version ='1.0'
# ---------------------------------------------------------------------------
\"\"\" Curso Estatística 2024 UFPR
Disciplina CI182 Fundamentos de Programacao de Computadores
Aula 4 Exercício 5.4 - 4 primaStr

Solicitar do usuario um texto qualquer e depois um caracter c qualquer. O
programa entao deve mostrar o ındice no texto da primeira ocorrencia de c no
texto, ou -1, se c nao ocorre no texto.
\"\"\"
# ---------------------------------------------------------------------------
# Import
# ---------------------------------------------------------------------------
# from string import *
# import math
" 0 1 (fontified t face font-lock-comment-delimiter-face) 1 23 (fontified t face font-lock-comment-face) 23 25 (fontified t face font-lock-comment-delimiter-face) 25 37 (fontified t face font-lock-comment-face) 37 39 (fontified t face font-lock-comment-delimiter-face) 39 116 (fontified t face font-lock-comment-face) 116 118 (fontified t face font-lock-comment-delimiter-face) 118 162 (fontified t face font-lock-comment-face) 162 164 (fontified t face font-lock-comment-delimiter-face) 164 189 (fontified t face font-lock-comment-face) 189 191 (fontified t face font-lock-comment-delimiter-face) 191 206 (fontified t face font-lock-comment-face) 206 208 (fontified t face font-lock-comment-delimiter-face) 208 284 (fontified t face font-lock-comment-face) 284 286 (fontified t face font-lock-doc-face) 286 287 (fontified t syntax-table (15) face font-lock-doc-face) 287 376 (fontified t face font-lock-doc-face) 376 410 (fontified t face font-lock-doc-face) 410 411 (fontified t face font-lock-doc-face) 411 485 (fontified t face font-lock-doc-face) 485 562 (fontified t face font-lock-doc-face) 562 572 (fontified t face font-lock-doc-face) 572 600 (fontified t face font-lock-doc-face) 600 601 (rear-nonsticky t fontified t face font-lock-doc-face) 601 602 (fontified t face font-lock-doc-face) 602 603 (syntax-table (15) fontified t face font-lock-doc-face) 603 605 (fontified t face font-lock-doc-face) 605 606 (fontified t) 606 608 (fontified t face font-lock-comment-delimiter-face) 608 684 (fontified t face font-lock-comment-face) 684 686 (fontified t face font-lock-comment-delimiter-face) 686 693 (fontified t face font-lock-comment-face) 693 695 (fontified t face font-lock-comment-delimiter-face) 695 771 (fontified t face font-lock-comment-face) 771 773 (fontified t face font-lock-comment-delimiter-face) 773 794 (fontified t face font-lock-comment-face) 794 796 (fontified t face font-lock-comment-delimiter-face) 796 808 (fontified t face font-lock-comment-face)) "Solicitar do usuário um texto qualquer e depois um caracter c qualquer. O
programa então deve mostrar o ı́ndice no texto da primeira ocorrência de c no texto, ou
-1, se c não ocorre no texto." #("#!/usr/bin/env python3
# coding=utf8
# ----------------------------------------------------------------------------
# Created By  : Anderson José de Souza Inácio
# Created Date: 2024-03-13
# version ='1.0'
# ---------------------------------------------------------------------------
\"\"\" Curso Estatística 2024 UFPR
Disciplina CI182 Fundamentos de Programacao de Computadores
Aula 4 Exercício 5.4 - 3 juntaStr

Solicitar do usuario dois textos separados e mostra-los na tela concatenados,
 isto e, os dois textos como um so, sem espaco entre eles.
\"\"\"
# ---------------------------------------------------------------------------
# Import
# ---------------------------------------------------------------------------
# from string import *
# import math
" 0 1 (fontified t face font-lock-comment-delimiter-face) 1 23 (fontified t face font-lock-comment-face) 23 25 (fontified t face font-lock-comment-delimiter-face) 25 37 (fontified t face font-lock-comment-face) 37 39 (fontified t face font-lock-comment-delimiter-face) 39 116 (fontified t face font-lock-comment-face) 116 118 (fontified t face font-lock-comment-delimiter-face) 118 162 (fontified t face font-lock-comment-face) 162 164 (fontified t face font-lock-comment-delimiter-face) 164 189 (fontified t face font-lock-comment-face) 189 191 (fontified t face font-lock-comment-delimiter-face) 191 206 (fontified t face font-lock-comment-face) 206 208 (fontified t face font-lock-comment-delimiter-face) 208 284 (fontified t face font-lock-comment-face) 284 286 (fontified t face font-lock-doc-face) 286 287 (fontified t syntax-table (15) face font-lock-doc-face) 287 376 (fontified t face font-lock-doc-face) 376 410 (fontified t face font-lock-doc-face) 410 411 (fontified t face font-lock-doc-face) 411 489 (fontified t face font-lock-doc-face) 489 495 (fontified t face font-lock-doc-face) 495 546 (fontified t face font-lock-doc-face) 546 547 (rear-nonsticky t fontified t face font-lock-doc-face) 547 548 (fontified t face font-lock-doc-face) 548 549 (syntax-table (15) fontified t face font-lock-doc-face) 549 551 (fontified t face font-lock-doc-face) 551 552 (fontified t) 552 554 (fontified t face font-lock-comment-delimiter-face) 554 630 (fontified t face font-lock-comment-face) 630 632 (fontified t face font-lock-comment-delimiter-face) 632 639 (fontified t face font-lock-comment-face) 639 641 (fontified t face font-lock-comment-delimiter-face) 641 717 (fontified t face font-lock-comment-face) 717 719 (fontified t face font-lock-comment-delimiter-face) 719 740 (fontified t face font-lock-comment-face) 740 742 (fontified t face font-lock-comment-delimiter-face) 742 754 (fontified t face font-lock-comment-face)) "Solicitar do usuário dois textos separados e mostrá-los na tela concatenados, isto
é, os dois textos como um só, sem espaço entre eles." #("#!/usr/bin/env python3
# coding=utf8
# ----------------------------------------------------------------------------
# Created By  : Anderson José de Souza Inácio
# Created Date: 2024-03-13
# version ='1.0'
# ---------------------------------------------------------------------------
\"\"\" Curso Estatística 2024 UFPR
Disciplina CI182 Fundamentos de Programacao de Computadores
Aula 4 Exercício 5.4 - 2 compStr

Solicitar do usuario dois textos separados e indicar na tela se os textos sao
 iguais, ou se o primeiro texto digitado esta antes do outro considerando
ordem alfabetica.
\"\"\"
# ---------------------------------------------------------------------------
# Import
# ---------------------------------------------------------------------------
# from string import *
# import math
" 0 1 (fontified t face font-lock-comment-delimiter-face) 1 23 (fontified t face font-lock-comment-face) 23 25 (fontified t face font-lock-comment-delimiter-face) 25 37 (fontified t face font-lock-comment-face) 37 39 (fontified t face font-lock-comment-delimiter-face) 39 116 (fontified t face font-lock-comment-face) 116 118 (fontified t face font-lock-comment-delimiter-face) 118 162 (fontified t face font-lock-comment-face) 162 164 (fontified t face font-lock-comment-delimiter-face) 164 189 (fontified t face font-lock-comment-face) 189 191 (fontified t face font-lock-comment-delimiter-face) 191 206 (fontified t face font-lock-comment-face) 206 208 (fontified t face font-lock-comment-delimiter-face) 208 284 (fontified t face font-lock-comment-face) 284 286 (fontified t face font-lock-doc-face) 286 287 (fontified t syntax-table (15) face font-lock-doc-face) 287 376 (fontified t face font-lock-doc-face) 376 409 (fontified t face font-lock-doc-face) 409 410 (fontified t face font-lock-doc-face) 410 488 (fontified t face font-lock-doc-face) 488 562 (fontified t face font-lock-doc-face) 562 578 (fontified t face font-lock-doc-face) 578 579 (rear-nonsticky t fontified t face font-lock-doc-face) 579 580 (fontified t face font-lock-doc-face) 580 581 (syntax-table (15) fontified t face font-lock-doc-face) 581 583 (fontified t face font-lock-doc-face) 583 584 (fontified t) 584 586 (fontified t face font-lock-comment-delimiter-face) 586 662 (fontified t face font-lock-comment-face) 662 664 (fontified t face font-lock-comment-delimiter-face) 664 671 (fontified t face font-lock-comment-face) 671 673 (fontified t face font-lock-comment-delimiter-face) 673 749 (fontified t face font-lock-comment-face) 749 751 (fontified t face font-lock-comment-delimiter-face) 751 772 (fontified t face font-lock-comment-face) 772 774 (fontified t face font-lock-comment-delimiter-face) 774 785 (fontified t face font-lock-comment-face) 785 786 (rear-nonsticky t fontified t face font-lock-comment-face)) #("        print('O primeiro texto informado está em primeiro, considerando a '
              'ordem alfabética')" 0 8 (fontified t) 8 13 (fontified t face font-lock-builtin-face) 13 14 (fontified t) 14 76 (fontified t face font-lock-string-face) 76 77 (fontified t) 77 91 (fontified t) 91 92 (fontified t face font-lock-string-face) 92 97 (fontified t face font-lock-string-face) 97 98 (fontified t face font-lock-string-face) 98 108 (fontified t face font-lock-string-face) 108 109 (fontified t face font-lock-string-face) 109 110 (fontified t))))
(setq search-ring 'nil)
(setq regexp-search-ring '("indent" "scheme\\[SchemeNorm]\\[ColB" "updatesys" "mai"))
