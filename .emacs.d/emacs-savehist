;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by ‘savehist’.

(setq savehist-minibuffer-history-variables '(coding-system-history string-rectangle-history read-expression-history command-history ess--completing-hist counsel-locate-history sql-product-history sql-server-history sql-database-history sql-user-history read-char-history counsel-git-history transient--history read-number-history compile-history shell-command-history magit-git-command-history magit-revision-history extended-command-history ido-file-history minibuffer-history empty-history read-from-kill-ring-history ivy-history counsel-M-x-history swiper-history ido-buffer-history file-name-history))
(setq coding-system-history '(#("utf-8" 0 5 (ivy-index 16 idx 1033)) #("raw-text-unix" 0 13 (ivy-index 263 idx 1057)) #("iso-8859-6-unix" 0 15 (ivy-index 3 idx 19)) #("latin-1-unix" 0 12 (ivy-index 260 idx 1044)) #("unix" 0 4 (ivy-index 265 idx 1064)) #("iso-8859-6" 0 10 (ivy-index 17 idx 16)) #("prefer-utf-8" 0 12 (ivy-index 20 idx 1058)) #("utf-8-dos" 0 9 (ivy-index 18 idx 1035)) #("utf-8-unix" 0 10 (ivy-index 19 idx 1036)) #("georgian-academy" 0 16 (ivy-index 1 idx 0)) #("nil" 0 3 (ivy-index 0)) #("utf-8-auto" 0 10 (ivy-index 7 idx 1025))))
(setq command-history '((term "/usr/bin/zsh") (package-delete #s(package-desc edwina (20221206 1610) "Dynamic window manager" ((emacs (25))) nil nil "/home/anderson/.emacs.d/elpa/edwina-20221206.1610" ((:url . "https://gitlab.com/ajgrf/edwina") (:keywords "convenience") (:maintainer "Alex Griffin" . "a@ajgrf.com") (:maintainers ("Alex Griffin" . "a@ajgrf.com")) (:authors ("Alex Griffin" . "a@ajgrf.com")) (:commit . "f95c31b1de95df7e83338a5d4daf3363df325862")) nil) nil nil) (find-file "~/.emacs.d/emacs.org" t) (find-file "/home/anderson/.dotfiles/.emacs.d/emacs.org") (find-file "/home/anderson/.emacs.d/init.el") (recover-session) (execute-extended-command nil "recover-session" "recover-sess") (set-clipboard-coding-system 'utf-8) (set-clipboard-coding-system 'raw-text-unix) (set-clipboard-coding-system 'iso-8859-6-unix) (set-clipboard-coding-system 'latin-1-unix) (set-clipboard-coding-system 'unix) (set-clipboard-coding-system 'iso-8859-6) (set-clipboard-coding-system 'prefer-utf-8) (set-clipboard-coding-system 'utf-8-dos) (set-clipboard-coding-system 'utf-8-unix) (set-clipboard-coding-system 'georgian-academy) (set-clipboard-coding-system nil) (set-clipboard-coding-system 'utf-8-auto) (electric-indent-mode 'toggle) (neotree-create-node "/home/anderson/.dotfiles/.local/bin/dmenu/dmenu-corrige") (neotree-create-node "/home/anderson/git/Educacional/UFPR_Estatistica/CI182_Fundamentos_Programacao_Computadores/exercicios/Aula_07/poluicao.py") (neotree-create-node "/home/anderson/git/Educacional/UFPR_Estatistica/CI182_Fundamentos_Programacao_Computadores/exercicios/Aula_07/abnt.py") (neotree-create-node "/home/anderson/git/Educacional/UFPR_Estatistica/CI182_Fundamentos_Programacao_Computadores/exercicios/Aula_07/percdna.py") (neotree-create-node "/home/anderson/git/Educacional/UFPR_Estatistica/CI182_Fundamentos_Programacao_Computadores/exercicios/Aula_07/copel.py") (neotree-create-node "/home/anderson/git/Educacional/UFPR_Estatistica/CI182_Fundamentos_Programacao_Computadores/exercicios/Aula_07/003_loja.py") (xclip-mode 'toggle) (package-install 'xclip nil) (simpleclip-mode 'toggle) (simpleclip-paste) (package-install 'simpleclip nil) (set-language-environment "Brazilian Portuguese") (kill-buffer "NotasAula.pdf") (kill-buffer "config.def.h") (kill-buffer "*terminal*") (shell nil) (string-rectangle 2806 5317 "") (neotree-create-node "/home/anderson/git/Educacional/UFPR_Estatistica/CE301_Estatistica_Basica/Scripts_R/Analise_Exploratoria_com_R.r") (neotree-create-node "/home/anderson/.dotfiles/.local/bin/brilho_tela_diminui") (neotree-create-node "/home/anderson/.dotfiles/.local/bin/brilho_tela_aumenta") (kill-buffer "config.h") (jupyter-org-kill-block-and-results) (jupyter-org-hydra/body) (jupyter-run-repl "python3" nil t nil t) (jupyter-repl-mode) (jupyter-load-file "/home/anderson/git/Educacional/Programa_Desenvolve_Boticario/014_Python_Data_science/Projeto+inicial+-+Python+para+DS.ipynb") (ein:stop t "http://127.0.0.1:8888") (ein:run "/usr/bin/jupyter" "/home/anderson/git/Educacional/Programa_Desenvolve_Boticario/014_Python_Data_science/" nil #[514 "\300!\207" [pop-to-buffer] 4 "

(fn BUFFER URL-OR-PORT)"] nil) (ein:stop t nil) (ein:notebook-open "http://127.0.0.1:8888" "Projeto_Python_Data_Science.ipynb") (ein:ipynb-mode) (ein:run "/usr/bin/jupyter" "/home/anderson/git/Educacional/Programa_Desenvolve_Boticario/013_Python_Ciencia_Dados/" nil #[514 "\300!\207" [pop-to-buffer] 4 "

(fn BUFFER URL-OR-PORT)"] nil) (ein:run "/usr/bin/jupyter-execute" "/home/anderson/git/Educacional/Programa_Desenvolve_Boticario/013_Python_Ciencia_Dados/" nil #[514 "\300!\207" [pop-to-buffer] 4 "

(fn BUFFER URL-OR-PORT)"] nil) (ein:login "http://127.0.0.1:8888" #[514 "\300!\207" [pop-to-buffer] 4 "

(fn BUFFER URL-OR-PORT)"] nil nil nil) (ein:jupyter-server-stop t nil) (ein:login "http://127.0.0.1:0" #[514 "\300!\207" [pop-to-buffer] 4 "

(fn BUFFER URL-OR-PORT)"] nil nil nil) (ein:login "http://127.0.0.1" #[514 "\300!\207" [pop-to-buffer] 4 "

(fn BUFFER URL-OR-PORT)"] nil nil nil) (package-install 'eink-theme nil) (package-install 'ein nil) (kill-buffer "100-graficos-tabelas-uni.R") (neotree-create-node "/home/anderson/git/Educacional/UFPR_Estatistica/CE301_Estatistica_Basica/Scripts_R/exercicio_medidas_posicao_dispersao.r") (projectile-switch-project nil) (project-switch-project "~/git/Educacional/Programa_Desenvolve_Boticario/") (project-switch-project "~/git/Educacional/UFPR_Estatistica/")))
(setq sql-product-history '(#("ansi" 0 4 (ivy-index 0))))
(setq sql-server-history '("172.17.0.2" "172.17.0.4" "172.17.0.3" "172.17.0.1"))
(setq sql-database-history '(#("alura" 0 5 (ivy-index 0)) #("postgres" 0 8 (ivy-index 0)) #("anderson" 0 8 (ivy-index 0))))
(setq sql-user-history '("postgres" "root"))
(setq read-number-history '("5432" "1"))
(setq compile-history '("make -k "))
(setq shell-command-history '("/usr/bin/zsh" "/usr/bin/bash"))
(setq magit-revision-history '(#("5ad9048" 0 7 (ivy-index 0)) #("9e4e37a8e58c4c2695feeb6ce1223b8849c5f7f7" 0 40 (ivy-index 0)) #("e5b577f5f6a6135f1566bf97f4a4c1a2ea06af15" 0 40 (ivy-index 0)) #("HEAD" 0 4 (ivy-index 3)) #("main" 0 4 (ivy-index 0)) #("origin/main" 0 11 (ivy-index 0)) #("1a51c1d" 0 7 (ivy-index 0)) #("ola mundo" 0 9 (ivy-index 0))))
(setq extended-command-history '("recover-session" "package-install"))
(setq ido-file-history '("." nil "emacs.org" "init.el" "dmenu-corrige" "poluicao.py" "abnt.py" "percdna.py" "copel.py" "003_loja.py" "Analise_Exploratoria_com_R.r" "brilho_tela_diminui" "brilho_tela_aumenta" "Projeto+inicial+-+Python+para+DS.ipynb" "exercicio_medidas_posicao_dispersao.r" "query_mariadb.sql" "somaMultiplos.py" "calculadora.py" "teste.sql" "onibus.py" "credito.py" "pesoideal.py" "achemaior.py" "medias.py" "multiplos.py" "notas.py" "calcnota.py" "py" "ultimoStr.py" "primaStr.py" "juntaStr.py" "compStr.py" "tamStr.py" "sl-wttr.sh" "sl-wttr.sh~" "degraus.py" "distpontos.py" "eq2graus.py" "volesFera.py" "calculos.py" "escada.py" "capitulo_02_resumo_dados.r" "sxhkdrc" "dmenu-bitwarden" "teste.ini" "config.ini" "teste" "eqSistCramer.py" "eqSist.py" "eqGrau1.py" "convKm.py" "mediaPond.py" "convFarenheit.py" "segundo2horas.py" "idadeDias2anos.py" "idadeAnos2dias.py" "media.py" "calcula_sistemas.py" "equacao_segundo_grau.py" "media_aritimetica.py" "media_aritimetica_3_valores.py" "soma_dois_numeros.py" "calcula_raiz_de_3_numeros.py" "aula004_usando_funcoes.sql" "aula003_sub_consultas.sql" "dmenu-teclados" "aula001.sql" "myinit.org" "tabela_funcionarios.sql" "tabela_aluno.sql" "README.md" "dunstrc" "cpu_status.sh" "music_status_bar.sh" "volume_icon.sh" "battery_status.sh" "advinha_mais.html" "estrelas.html" "media_idades_familiares.html" "media_idades_familiares.hml" "tabuada.html" "ano_copa.html" "jogo_advinha.html" "futebol.html" "imc.html" "programa.html" "texto_puro.html" "primeiro_teste.html"))
(setq minibuffer-history '(".local/bin/dmenu/dmenu-monitor" ".dwm/autostart.sh" ".dwm/config.h" "jupyter-execute" "jupyter notebook" "/home/anderson/.local/bin/jupyter lab" "~/.local/bin/jupyter lab" "jupyter lab" "python3 -m jupyter lab" "jupyter" ".Xresources" "~/.dotfiles/" "djklsklsdsdnj" "dashboard" "/usr/bin/zsh" "select * from curso;" "select * from cursos;" "/usr/bin/bash"))
(setq ivy-history '(#("edwina-20221206.1610" 0 20 (ivy-index 1)) #("xclip" 0 5 (ivy-index 0)) #("simpleclip" 0 10 (ivy-index 1)) #("Brazilian Portuguese" 0 20 (idx 22 ivy-index 22)) #("con" 0 3 (ivy-index 0)) "config.h" #("config." 0 7 (ivy-index 0)) "config.def.h" #("CE301_Estatistica_Basica/" 0 25 (ivy-index 3)) #("/home/anderson/git/Educacional/UFPR_Estatistica/" 0 48 (ivy-index 2)) #("Python 3 (ipykernel)" 0 20 (ivy-index 0)) #("python3" 0 7 (idx 0 ivy-index 0)) #("http://127.0.0.1:8888/Projeto_Python_Data_Science.ipynb" 0 55 (ivy-index 0)) #("8888" 0 4 (ivy-index 0)) #("0" 0 1 (ivy-index 0)) #("eink-theme" 0 10 (ivy-index 4)) #("ein" 0 3 (ivy-index 5)) #("CE301_Estatistica_Basica/Scripts_R/" 0 35 (ivy-index 8)) #("005_Logica_Programacao_Javascript/Logica/jogo_advinha.html" 0 58 (ivy-index 34)) #("~/git/Educacional/Programa_Desenvolve_Boticario/" 0 48 (ivy-index 1)) #("CE300_Estatistica_e_Sociedade/Seminario_001/Impacto_Vacina_Tdap_em_gravidas.pdf" 0 79 (ivy-index 1)) #("~/git/Educacional/UFPR_Estatistica/" 0 35 (ivy-index 2)) #("... (choose a dir)" 0 18 (ivy-index 3)) #("~/.dotfiles/" 0 12 (ivy-index 1)) #("./" 0 2 (ivy-index 0)) #("compilation-disable-input" 0 25 (ivy-index 4)) #("tree-sitter-ispell" 0 18 (ivy-index 1)) #("tree-sitter-langs" 0 17 (ivy-index 0)) #("tree-sitter" 0 11 (ivy-index 4)) #("rainbow-mode" 0 12 (ivy-index 0)) #("101-medidas-uni.R" 0 17 (ivy-index 4)) #("origin" 0 6 (ivy-index 0)) #("master" 0 6 (ivy-index 0)) #("pdf-tools" 0 9 (ivy-index 0)) #("~/git/Educacional/Programa_Desenvolve_Boticario/006_Git_Github/projeto_inicial/" 0 79 (ivy-index 0)) #("dape" 0 4 (ivy-index 0)) #("elpy" 0 4 (ivy-index 1)) #("nyan-mode" 0 9 (ivy-index 0)) #("flycheck" 0 8 (ivy-index 64)) #("emacsql-psql" 0 12 (ivy-index 13)) #("index.html" 0 10 (ivy-index 0)) #("myterminal-controls" 0 19 (ivy-index 10)) #("electric-indent-mode" 0 20 (ivy-index 14)) #("indent-guide" 0 12 (ivy-index 0)) #("web-mode-indent-style" 0 21 (ivy-index 0))))
(setq counsel-M-x-history '(#("^term" 0 5 (ivy-index 0)) "term" #("^package" 0 8 (ivy-index 0)) "package-delete" #("^pack" 0 5 (ivy-index 1)) #("^" 0 1 (ivy-index 0)) "set-clipboard-coding-system" #("^set-cli" 0 8 (ivy-index 0)) #("^ele" 0 4 (ivy-index 3)) "electric-indent-mode" #("^xcl" 0 4 (ivy-index 0)) "xclip-mode" #("^xc" 0 3 (ivy-index 0)) #("^package-ins" 0 12 (ivy-index 0)) "package-install" #("^simpl" 0 6 (ivy-index 0)) "simpleclip-mode" "simpleclip-paste" "set-language-environment" #("^set-la" 0 7 (ivy-index 0)) #("^ter" 0 4 (ivy-index 0)) #("^shell" 0 6 (ivy-index 0)) "shell" #("^jupyter-" 0 9 (ivy-index 57)) "jupyter-org-kill-block-and-results" #("^jupyter" 0 8 (ivy-index 11)) "jupyter-org-hydra/body" "jupyter-run-repl" "jupyter-repl-mode" #("^jupyter-re" 0 11 (ivy-index 0)) "jupyter-load-file" #("^jupyter-run" 0 12 (ivy-index 0)) "ein:stop" "ein:run" #("^ein" 0 4 (ivy-index 4)) "ein:ipynb-mode" "ein:login" "ein:jupyter-server-stop" #("^ein:l" 0 6 (ivy-index 0)) #("^package-install" 0 16 (ivy-index 0)) #("^projectile" 0 11 (ivy-index 0)) "projectile-switch-project" #("^projectile-s" 0 13 (ivy-index 1)) #("^packa" 0 6 (ivy-index 0)) #("^projectile-mo" 0 14 (ivy-index 1)) "projectile-mode-menu" #("^projectile-co" 0 14 (ivy-index 2)) "projectile-configure-project" #("^projectile-" 0 12 (ivy-index 0)) "projectile-skel-dir-locals" #("^sql-maria" 0 10 (ivy-index 0)) "sql-mariadb" "sql-postgres" #("^sql-pos" 0 8 (ivy-index 0)) #("^sql-mari" 0 9 (ivy-index 0)) #("^rainbo" 0 7 (ivy-index 0)) "rainbow-mode" #("^python-mode" 0 12 (ivy-index 0)) "python-mode" #("^python" 0 7 (ivy-index 0)) #("^eglo" 0 5 (ivy-index 0)) "eglot" #("packa" 0 5 (ivy-index 0)) #("^rain" 0 5 (ivy-index 0)) #("^magit-" 0 7 (ivy-index 24)) "magit-status" #("^pdf-view" 0 9 (ivy-index 0)) "pdf-view-mode" #("^pdf-vi" 0 7 (ivy-index 0)) #("^pdf-t" 0 6 (ivy-index 6)) "pdf-tools-enable-minor-modes" #("^try" 0 4 (ivy-index 0)) "try" #("^r" 0 2 (ivy-index 1)) "R" #("^R" 0 2 (ivy-index 1)) "R-mode" #("^dape" 0 5 (ivy-index 0)) "dape-continue" #("^elpy-mo" 0 8 (ivy-index 1)) "elpy-mode" #("^elpy-ena" 0 9 (ivy-index 0)) "elpy-enable" #("^elpy-dis" 0 9 (ivy-index 0)) "elpy-disable" #("^elpy" 0 5 (ivy-index 0)) #("^elpy-shell-send" 0 16 (ivy-index 2)) "elpy-shell-send-file" "elpy-shell-send-buffer" "elpy-shell-send-statement-and-step" #("^elpy-con" 0 9 (ivy-index 0)) "elpy-config" #("^elpy-s" 0 7 (ivy-index 11)) "elpy-shell-send-defun-and-go" #("^run-p" 0 6 (ivy-index 1)) "run-python" #("^sql-post" 0 9 (ivy-index 0)) #("^unta" 0 5 (ivy-index 0)) "untabify" #("^package-inst" 0 13 (ivy-index 0)) #("^elpy-mode" 0 10 (ivy-index 0)) #("^elpy-mod" 0 9 (ivy-index 1)) #("^auto-com" 0 9 (ivy-index 2)) "auto-complete-mode" #("^auto" 0 5 (ivy-index 3)) "auto-complete" #("^elpy-c" 0 7 (ivy-index 1)) #("^elpy-conf" 0 10 (ivy-index 0)) #("^elpy-confi" 0 11 (ivy-index 0)) #("^nyan" 0 5 (ivy-index 4)) "nyan-start-animation" "nyan-start-music" "nyan-mode" "nyan-scroll-buffer" #("^nya" 0 4 (ivy-index 1)) "nyan-toggle-wavy-trail" #("nyan-" 0 5 (ivy-index 7)) #("^spaceline-toggle-n" 0 19 (ivy-index 1)) "spaceline-toggle-nyan-cat-on" "spaceline-toggle-nyan-cat" "elpy-autopep8-fix-code" #("^elpy-menu" 0 10 (ivy-index 0)) "elpy-menu" #("^elpy-" 0 6 (ivy-index 16)) "elpy-check" #("^elpy-config" 0 12 (ivy-index 0)) #("^elpy-en" 0 8 (ivy-index 0)) #("^pyve" 0 5 (ivy-index 5)) "pyvenv-workon" #("^pyvenv" 0 7 (ivy-index 6)) "pyvenv-activate" #("^elpy-rpc" 0 9 (ivy-index 1)) "elpy-rpc-restart" #("^elpy-rp" 0 8 (ivy-index 1)) #("^ansi" 0 5 (ivy-index 1)) "ansi-term" #("^python-mo" 0 10 (ivy-index 0)) #("^sql" 0 4 (ivy-index 1)) #("^conf-mo" 0 8 (ivy-index 0)) "conf-mode" #("linu" 0 4 (ivy-index 0)) "linum-mode" #("^sql-hel" 0 8 (ivy-index 0)) "sql-help" #("^sql-set" 0 8 (ivy-index 1)) "sql-set-sqli-buffer" "sql-set-product" #("^sql-mode" 0 9 (ivy-index 0)) "sql-mode" #("^markdown-pre" 0 13 (ivy-index 0)) "markdown-preview-cleanup" #("^markdown-previ" 0 15 (ivy-index 1)) "markdown-preview" "markdown-preview-mode" "markdown-preview-open-browser" #("^markdown-vi" 0 12 (ivy-index 0)) "markdown-view-mode" #("^markdown-v" 0 11 (ivy-index 0)) #("^markdown-p" 0 11 (ivy-index 0)) #("^markdown-mode" 0 14 (ivy-index 2)) "markdown-mode" #("^markdo" 0 7 (ivy-index 2)) #("^ra" 0 3 (ivy-index 1)) #("^conf-mod" 0 9 (ivy-index 0)) #("^myter" 0 6 (ivy-index 1)) "myterminal-controls-open-controls" #("^magit-rebase" 0 13 (ivy-index 2)) "magit-rebase" #("^magit-log-current" 0 18 (ivy-index 0)) "magit-log-current" #("^magit-log --g" 0 14 (ivy-index 0)) "magit-log:--grep" #("^magit-lo" 0 9 (ivy-index 1)) "magit-log:-G" #("^magit-log" 0 10 (ivy-index 8)) "magit-log" #("^centaur-tabs-mode" 0 18 (ivy-index 0)) "centaur-tabs-mode" #("^centaur-tabs-g" 0 15 (ivy-index 0)) "centaur-tabs-group-buffer-groups" #("^magit-merge" 0 12 (ivy-index 3)) "magit-merge" #("^magit-status" 0 13 (ivy-index 2)) #("^rainb" 0 6 (ivy-index 0)) #("^ansi-" 0 6 (ivy-index 1)) #("^conf-mode" 0 10 (ivy-index 0)) #("^magit-stat" 0 11 (ivy-index 2)) #("^ansi-te" 0 8 (ivy-index 0)) #("^java" 0 5 (ivy-index 1)) "javascript-mode" #("^customize-va" 0 13 (ivy-index 0)) "customize-variable" #("^indent-gui" 0 11 (ivy-index 0)) "indent-guide-mode" #("^package-lis" 0 12 (ivy-index 0)) "package-list-packages" #("^web-mode" 0 9 (ivy-index 82)) "web-mode" #("ansi" 0 4 (ivy-index 2)) #("^cua" 0 4 (ivy-index 5)) "cua-toggle-rectangle-mark" "cua-paste" "cua-paste-pop" "cua-cut-region" #("^cua-sc" 0 7 (ivy-index 1)) "cua-scroll-down" #("^cua-s" 0 6 (ivy-index 2)) "cua-selection-mode"))
(setq swiper-history '("indent" #("indent" 0 6 (ivy-index 16)) #("   indent-guide                   20160630       available    melpa-stable show vertical lines to guide indentation" 0 1 (swiper-line-number 1665 display "1665 ") 1 3 (tabulated-list-id #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) tabulated-list-entry [("indent-guide" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) action package-menu-describe-package) #("20160630" 0 8 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa-stable" 0 12 (font-lock-face package-status-available)) #("show vertical lines to guide indentation" 0 40 (font-lock-face package-description))]) 3 15 (button (t) category default-button face package-name font-lock-face package-name follow-link t package-desc #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) action package-menu-describe-package tabulated-list-column-name "Package" tabulated-list-id #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) tabulated-list-entry [("indent-guide" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) action package-menu-describe-package) #("20160630" 0 8 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa-stable" 0 12 (font-lock-face package-status-available)) #("show vertical lines to guide indentation" 0 40 (font-lock-face package-description))]) 15 16 (tabulated-list-column-name "Package" tabulated-list-id #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) tabulated-list-entry [("indent-guide" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) action package-menu-describe-package) #("20160630" 0 8 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa-stable" 0 12 (font-lock-face package-status-available)) #("show vertical lines to guide indentation" 0 40 (font-lock-face package-description))]) 16 34 (display (space :align-to 33) tabulated-list-column-name "Package" tabulated-list-id #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) tabulated-list-entry [("indent-guide" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) action package-menu-describe-package) #("20160630" 0 8 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa-stable" 0 12 (font-lock-face package-status-available)) #("show vertical lines to guide indentation" 0 40 (font-lock-face package-description))]) 34 42 (font-lock-face package-status-available help-echo #("Version: 20160630" 9 17 (font-lock-face package-status-available)) tabulated-list-column-name "Version" tabulated-list-id #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) tabulated-list-entry [("indent-guide" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) action package-menu-describe-package) #("20160630" 0 8 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa-stable" 0 12 (font-lock-face package-status-available)) #("show vertical lines to guide indentation" 0 40 (font-lock-face package-description))]) 42 43 (tabulated-list-column-name "Version" tabulated-list-id #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) tabulated-list-entry [("indent-guide" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) action package-menu-describe-package) #("20160630" 0 8 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa-stable" 0 12 (font-lock-face package-status-available)) #("show vertical lines to guide indentation" 0 40 (font-lock-face package-description))]) 43 49 (display (space :align-to 48) tabulated-list-column-name "Version" tabulated-list-id #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) tabulated-list-entry [("indent-guide" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) action package-menu-describe-package) #("20160630" 0 8 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa-stable" 0 12 (font-lock-face package-status-available)) #("show vertical lines to guide indentation" 0 40 (font-lock-face package-description))]) 49 58 (font-lock-face package-status-available help-echo #("Status: available" 8 17 (font-lock-face package-status-available)) tabulated-list-column-name "Status" tabulated-list-id #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) tabulated-list-entry [("indent-guide" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) action package-menu-describe-package) #("20160630" 0 8 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa-stable" 0 12 (font-lock-face package-status-available)) #("show vertical lines to guide indentation" 0 40 (font-lock-face package-description))]) 58 59 (tabulated-list-column-name "Status" tabulated-list-id #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) tabulated-list-entry [("indent-guide" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) action package-menu-describe-package) #("20160630" 0 8 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa-stable" 0 12 (font-lock-face package-status-available)) #("show vertical lines to guide indentation" 0 40 (font-lock-face package-description))]) 59 62 (display (space :align-to 61) tabulated-list-column-name "Status" tabulated-list-id #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) tabulated-list-entry [("indent-guide" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) action package-menu-describe-package) #("20160630" 0 8 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa-stable" 0 12 (font-lock-face package-status-available)) #("show vertical lines to guide indentation" 0 40 (font-lock-face package-description))]) 62 69 (font-lock-face package-status-available help-echo #("Archive: melpa-stable" 9 21 (font-lock-face package-status-available)) tabulated-list-column-name "Archive" tabulated-list-id #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) tabulated-list-entry [("indent-guide" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) action package-menu-describe-package) #("20160630" 0 8 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa-stable" 0 12 (font-lock-face package-status-available)) #("show vertical lines to guide indentation" 0 40 (font-lock-face package-description))]) 69 74 (font-lock-face package-status-available display "…" help-echo #("Archive: melpa-stable" 9 21 (font-lock-face package-status-available)) tabulated-list-column-name "Archive" tabulated-list-id #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) tabulated-list-entry [("indent-guide" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) action package-menu-describe-package) #("20160630" 0 8 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa-stable" 0 12 (font-lock-face package-status-available)) #("show vertical lines to guide indentation" 0 40 (font-lock-face package-description))]) 74 75 (tabulated-list-column-name "Archive" tabulated-list-id #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) tabulated-list-entry [("indent-guide" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) action package-menu-describe-package) #("20160630" 0 8 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa-stable" 0 12 (font-lock-face package-status-available)) #("show vertical lines to guide indentation" 0 40 (font-lock-face package-description))]) 75 115 (font-lock-face package-description help-echo #("Description: show vertical lines to guide indentation" 13 53 (font-lock-face package-description)) tabulated-list-column-name "Description" tabulated-list-id #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) tabulated-list-entry [("indent-guide" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) action package-menu-describe-package) #("20160630" 0 8 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa-stable" 0 12 (font-lock-face package-status-available)) #("show vertical lines to guide indentation" 0 40 (font-lock-face package-description))])) "scheme[SchemeNorm][ColBg" #("scheme[SchemeNorm][ColB" 0 23 (ivy-index 8)) #(" 	XSetForeground(dpy, drw->gc, scheme[SchemeNorm][ColBg].pixel);" 0 1 (swiper-line-number 2761 display "2761 ") 1 2 (fontified t c-is-sws t) 2 3 (c-is-sws t fontified t) 3 49 (fontified t) 49 50 (fontified t) 50 51 (fontified t) 51 52 (fontified t) 52 53 (fontified t) 53 54 (fontified t) 54 55 (fontified t) 55 56 (fontified t) 56 57 (fontified t) 57 58 (fontified t) 58 59 (fontified t) 59 60 (fontified t) 60 61 (fontified t) 61 62 (fontified t) 62 63 (fontified t) 63 64 (fontified t rear-nonsticky t)) #("updatesys" 0 9 (ivy-index 18)) #(" updatesystray(void)" 0 1 (swiper-line-number 2700 display "2700 ") 1 14 (fontified t face font-lock-function-name-face) 14 15 (fontified t c-type c-decl-arg-start) 15 19 (fontified t face font-lock-type-face) 19 20 (fontified t)) #("mai" 0 3 (ivy-index 0)) #(" main(int argc, char *argv[])" 0 1 (swiper-line-number 814 display "814 ") 1 5 (fontified t face font-lock-function-name-face) 5 6 (fontified t c-type c-decl-arg-start) 6 9 (fontified t face font-lock-type-face) 9 10 (fontified t) 10 14 (fontified t face font-lock-variable-name-face) 14 15 (fontified t c-type c-decl-arg-start) 15 16 (fontified t) 16 20 (fontified t face font-lock-type-face) 20 22 (fontified t) 22 26 (fontified t face font-lock-variable-name-face) 26 29 (fontified t))))
(setq ido-buffer-history '("NotasAula.pdf" "config.def.h" "*terminal*" "config.h" "100-graficos-tabelas-uni.R" "*SQL: MariaDB*" "achemaior.py" "sl-wttr.sh" "*Python*" "dmenu-docker-images" "dmenu-power" "dmenu-atalhos-programas" "equacao_segundo_grau.py" "media_aritimetica_3_valores.py" "calcula_raiz_de_3_numeros.py" "teste.py" "*Elpy Config*" "*Customize Option: Python Flymake Command*" "if_monitor.sh" "*ansi-term*" "dmenu-teclados" "config.def.h<slstatus>" "tabela_funcionarios.sql" "aula001.sql" "banco-inicial.sql" "*SQL: Postgres*" "dmenu-docker-compose.sh" "HELLO" "index.theme" "icon-theme.cache" "]" "action-unavailable-symbolic.svg" "autostart.sh" "dmenu-window" "battery_status.sh" "emacs.org" "init.el" "dunstrc" "*Compile-Log*" "picom.conf" "index.html" "config.mk" "Untitled<2>" "Untitled<3>" "Untitled" "myinit.org" "config" "muta_microfone" "config.def.h<.dwm>" "block-battery" "dwmbar-powerline" "diminui_volume" "muta_volume" "*scratch*" "*Messages*" "*Async-native-compile-log*" "*Warnings*" "magit-process: .dotfiles" "magit: .dotfiles" "volume_icon.sh" "app.js" "x.c" "x.c.rej" "config.def.h.rej" "config.def.h<st>"))
(setq file-name-history '("~/.emacs.d/emacs.org" "/home/anderson/.dotfiles/.emacs.d/emacs.org" "/home/anderson/.emacs.d/init.el" #("/home/anderson/.dotfiles/" 0 25 (ivy-index 0)) #("/home/anderson/.xinitrc" 0 23 (ivy-index 0)) #("/home/anderson/git/Educacional/UFPR_Estatistica/CI182_Fundamentos_Programacao_Computadores/" 0 91 (ivy-index 0)) #("/home/anderson/git/Educacional/UFPR_Estatistica/CI182_Fundamentos_Programacao_Computadores/exercicios/teste_while.py" 0 116 (ivy-index 0)) #("/home/anderson/.emacs.d/emacs.org" 0 33 (ivy-index 3)) #("/home/anderson/.emacs.d/projects" 0 32 (ivy-index 19)) #("/home/anderson/git/Educacional/Programa_Desenvolve_Boticario/013_Python_Ciencia_Dados/Projeto_Python_Data_Science.ipynb" 0 119 (ivy-index 2)) #("/home/anderson/git/Educacional/UFPR_Estatistica/SobreviventesTitanic.r" 0 70 (ivy-index 0)) #("/home/anderson/git/Educacional/Programa_Desenvolve_Boticario/007_PostgreSQL/" 0 76 (ivy-index 9)) #("/home/anderson/git;Edu" 0 22 (ivy-index 0)) #("/home/anderson/git/Educacional/UFPR_Estatistica/CE301_Estatistica_Basica/histograma_em_r.r" 0 90 (ivy-index 0)) "~/git/Educacional/Programa_Desenvolve_Boticario/012_PowerBI_Tratamento_Dados/power_query_dump.sql" "~/git/win10vm/win10.xml" #("/home/anderson/.dwm/autostart.sh" 0 32 (ivy-index 0)) #("/home/anderson/.config/slstatus/" 0 32 (ivy-index 0)) #("/home/anderson/git/Educacional/UFPR_Estatistica/CE301_Estatistica_Basica/100-graficos-tabelas-uni.R" 0 99 (ivy-index 14)) #("/home/anderson/git/Educacional/UFPR_Estatistica/CE301_Estatistica_Basica/Livro_Estatitica_Basica/testes.r" 0 105 (ivy-index 0)) #("/home/anderson/git/Educacional/UFPR_Estatistica/CE301_Estatistica_Basica/" 0 73 (ivy-index 4)) #("/var/spool/cron/crontabs/anderson" 0 33 (ivy-index 0)) #("/var/spool/cron/crontabs/" 0 25 (ivy-index 2)) "/tmp/crontab.uSJaXd/crontab" "/tmp/crontab.vtEVge/crontab" "/home/anderson/.dotfiles/.local/bin/sl-wttr.sh~" #("/home/anderson/.dotfiles/.config/slstatus/" 0 42 (ivy-index 1)) #("/home/anderson/git/Educacional/UFPR_Estatistica/CE301_Estatistica_Basica/101-medidas-uni.R" 0 90 (ivy-index 0)) #("/home/anderson/.dwm/config.def.h" 0 32 (ivy-index 0)) #("/home/anderson/git/Educacional/Programa_Desenvolve_Boticario/008_Postgres_views_funcoes_consultas/dados-aula-2.sql" 0 114 (ivy-index 5)) #("/home/anderson/git/Educacional/UFPR_Estatistica/CI182_Fundamentos_Programacao_Computadores/calcula_raiz_de_3_numeros.py" 0 119 (ivy-index 0)) #("/home/anderson/.dotfiles/.config/slstatus/config.def.h" 0 54 (ivy-index 0)) #("/home/anderson/.local/bin/battery_status.sh" 0 43 (ivy-index 1)) #("/home/anderson/teste.py" 0 23 (ivy-index 0)) #("/home/anderson/.dotfiles/.local/bin/dmenu/" 0 42 (ivy-index 2)) #("/home/anderson/.dotfiles/.local/bin/dmenu/dmenu-docker-lista-funcionando" 0 72 (ivy-index 0)) #("/home/anderson/.dotfiles/.local/bin/dmenu/dmenu-atalhos-programas" 0 65 (ivy-index 0)) #("/home/anderson/.dotfiles/.local/bin/dmenu/dmenu-docker-images" 0 61 (ivy-index 4)) #("/home/anderson/dmenu-docker-compose.sh" 0 38 (ivy-index 2)) #("/home/anderson/.dotfiles/.dwm/config.def.h" 0 42 (ivy-index 0)) "/home/anderson/.emacs.d/myinit.org" #("/home/anderson/git/Educacional/Programa_Desenvolve_Boticario/007_PostgreSQL/tabela_funcionarios.sql" 0 99 (ivy-index 9)) "/home/anderson/.dotfiles/.config/dunst/dunstrc" #("/home/anderson/.local/bin/volume_icon.sh" 0 40 (ivy-index 6)) #("/home/anderson/git/Educacional/Programa_Desenvolve_Boticario/006_Git_Github/projeto_inicial/index.html" 0 102 (ivy-index 7)) #("/home/anderson/git/Educacional/Programa_Desenvolve_Boticario/006_Git_Github/projeto_inicial/app.js" 0 98 (ivy-index 3)) #("/home/anderson/.config/picom.conf" 0 33 (ivy-index 3)) #("/home/anderson/.dotfiles/.dwm/" 0 30 (ivy-index 0)) #("/home/anderson/.dotfiles/.Xresources" 0 36 (ivy-index 0)) #("/home/anderson/.config/st/config.def.h" 0 38 (ivy-index 0)) "~/.dotfiles/.emacs.d/init.el"))
(setq projectile-project-command-history '#s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data ()))
(setq kill-ring '("\"emacs\"" "\"Emacs\"
" #("{ \"R_x11\",			NULL,		NULL,		1 << 2,		0,		-1 }," 0 2 (fontified t) 2 9 (fontified t face font-lock-string-face) 9 13 (fontified t) 13 17 (fontified t face font-lock-constant-face) 17 20 (fontified t) 20 24 (fontified t face font-lock-constant-face) 24 27 (fontified t) 27 28 (fontified t) 28 29 (fontified t) 29 30 (fontified t) 30 31 (fontified t) 31 32 (fontified t) 32 33 (fontified t) 33 36 (fontified t) 36 37 (fontified t) 37 45 (fontified t)) "R Data Editor\"" #("	{ \"R_x11\",			NULL,		NULL,		0,		1,		-1 }," 0 3 (fontified t) 3 10 (fontified t face font-lock-string-face) 10 14 (fontified t) 14 18 (fontified t face font-lock-constant-face) 18 21 (fontified t) 21 25 (fontified t face font-lock-constant-face) 25 41 (fontified t)) "(use-package edwina
  :ensure t
  :config
  (setq display-buffer-base-action '(display-buffer-below-selected))
  (edwina-setup-dwm-keys)
  (edwina-mode 1))" "
(defvar rutils-show_plot_next_to_r_process t)

(defun add-pdf-to-rcode(rcomm fname)
  \"add pdf(tmpfile) and dev.off() to R command\"
  (let*  (
	  (newc (concat \"pdf('\" fname \"')\\n\" rcomm  \"\\n dev.off()\"))
	  )
    (eval newc)
      )
  )


(defun rutils-plot-region-or-paragraph()
  \"execute region or paragraph and save tmp plot to pdf. Then open windows to show pdf\"
  (interactive)
    (let*  (
	  (fname (concat (make-temp-file \"plot_\") \".pdf\"))
	  )
      (progn
	(if (use-region-p)
	    (ess-eval-linewise (add-pdf-to-rcode (buffer-substring (region-beginning) (region-end)) fname))
	  (progn (ess-eval-linewise (add-pdf-to-rcode (thing-at-point 'paragraph) fname)))
	  )
 	;; (with-help-window \"*plots*\"
	;;   (find-ssfile-at-point)
	;;   )
	(if rutils-show_plot_next_to_r_process
	    (ess-switch-to-end-of-ESS)
	    )
	(if (window-in-direction 'right)
	    (progn
	      (select-window (window-in-direction 'right))
	      (find-file fname)
	      )
	  (progn
	    (split-window-right)
	    (select-window (window-in-direction 'right))
	    (find-file fname)
	    )
	    )
	;;(split-window-right)
	;;(windmove-right)
	)
    )
    )
(define-key ess-mode-map (kbd \"C-c g\") 'rutils-plot-region-or-paragraph)
" "(defvar rutils-show_plot_next_to_r_process t)

(defun add-pdf-to-rcode(rcomm fname)
  \"add pdf(tmpfile) and dev.off() to R command\"
  (let*  (
      (newc (concat \"pdf('\" fname \"')\\n\" rcomm  \"\\n dev.off()\"))
      )
    (eval newc)
      )
  )


(defun rutils-plot-region-or-paragraph()
  \"execute region or paragraph and save tmp plot to pdf. Then open windows to show pdf\"
  (interactive)
    (let*  (
      (fname (concat (make-temp-file \"plot_\") \".pdf\"))
      )
      (progn
    (if (use-region-p)
        (ess-eval-linewise (add-pdf-to-rcode (buffer-substring (region-beginning) (region-end)) fname))
      (progn (ess-eval-linewise (add-pdf-to-rcode (thing-at-point 'paragraph) fname)))
      )
        (ess-switch-to-end-of-ESS)
        )
    (if (window-in-direction 'right)
        (progn
          (select-window (window-in-direction 'right))
          (find-file fname)
          )
      (progn
        (split-window-right)
        (select-window (window-in-direction 'right))
        (find-file fname)
        )
        )
    )
    )
    )
(define-key ess-mode-map (kbd \"C-c g\") 'rutils-plot-region-or-paragraph)" #("    $casa)
	xrandr --output HDMI-0 --auto --rotate normal --dpi 96 --output eDP-1-1 --primary --auto --rotate normal --dpi 96 --left-of HDMI-0
	notify-send -t 3000 \"󰡁 HDMI Inserido\" \"Adicionado tela via HDMI\" --icon=\"/usr/share/icons/ePapirus/16x16/devices/computer.svg\"
	;;" 0 5 (syntax-multiline t fontified t) 5 9 (face font-lock-variable-name-face syntax-multiline t fontified t) 9 10 (syntax-table (1) syntax-multiline t fontified t) 10 164 (fontified t) 164 181 (face font-lock-string-face fontified t) 181 182 (fontified t) 182 208 (face font-lock-string-face fontified t) 208 216 (fontified t) 216 270 (face font-lock-string-face fontified t) 270 272 (fontified t) 272 274 (syntax-multiline t fontified t)) "Fundamentos de Programação" "2.2 Programas em Python Essencialmente, um programa Python consiste de uma ou mais linhas chamadas sentenças. Além disso, um programa em Python pode definir pelo menos uma função em qualquer local do texto do programa. O ponto de inı́cio de execução do programa é a primeira sentença do programa que está fora do corpo de definição das funções. Programas Python tem a seguinte estrutura mı́nima inicial:" "O departamento que controla o ı́ndice de poluição do meio ambiente mantém 3
grupos de indústrias que são altamente poluentes do meio ambiente. O ı́ndice de poluição
aceitável varia de 0,05 até 0,25. Se o ı́ndice sobe para 0,3 as indústrias do 1o grupo são
intimadas a suspenderem suas atividades, se o ı́ndice cresce para 0,4 as do 1o e 2o grupo
são intimadas a suspenderem suas atividades e se o ı́ndice atingir 0,5 todos os 3 grupos
devem ser notificados a paralisarem suas atividades. Escrever um programa que lê o ı́ndice
de poluição medido e emite a notificação adequada aos diferentes grupos de empresas." "Oficina de Pré-Cálculo" "Oficina de Pr\303\251-C\303\241lculo" "O departamento que controla o \304\261\314\201ndice de poluic\314\247a\314\203o do meio ambiente mante\314\201m 3
grupos de indu\314\201strias que sa\314\203o altamente poluentes do meio ambiente. O \304\261\314\201ndice de poluic\314\247a\314\203o
aceita\314\201vel varia de 0,05 ate\314\201 0,25. Se o \304\261\314\201ndice sobe para 0,3 as indu\314\201strias do 1o grupo sa\314\203o
intimadas a suspenderem suas atividades, se o \304\261\314\201ndice cresce para 0,4 as do 1o e 2o grupo
sa\314\203o intimadas a suspenderem suas atividades e se o \304\261\314\201ndice atingir 0,5 todos os 3 grupos
devem ser notificados a paralisarem suas atividades. Escrever um programa que le\314\202 o \304\261\314\201ndice
de poluic\314\247a\314\203o medido e emite a notificac\314\247a\314\203o adequada aos diferentes grupos de empresas." #("O departamento que controla o ؤ\261جndice de poluicج\247aجo do meio ambiente manteجm 3
grupos de induجstrias que saجo altamente poluentes do meio ambiente. O ؤ\261جndice de poluicج\247aجo
aceitaجvel varia de 0,05 ateج 0,25. Se o ؤ\261جndice sobe para 0,3 as induجstrias do 1o grupo saجo
intimadas a suspenderem suas atividades, se o ؤ\261جndice cresce para 0,4 as do 1o e 2o grupo
saجo intimadas a suspenderem suas atividades e se o ؤ\261جndice atingir 0,5 todos os 3 grupos
devem ser notificados a paralisarem suas atividades. Escrever um programa que leج o ؤ\261جndice
de poluicج\247aجo medido e emite a notificacج\247aجo adequada aos diferentes grupos de empresas." 0 656 (charset iso-8859-6)) "O departamento que controla o Ä±Ìndice de poluicÌ§aÌo do meio ambiente manteÌm 3
grupos de induÌstrias que saÌo altamente poluentes do meio ambiente. O Ä±Ìndice de poluicÌ§aÌo
aceitaÌvel varia de 0,05 ateÌ 0,25. Se o Ä±Ìndice sobe para 0,3 as induÌstrias do 1o grupo saÌo
intimadas a suspenderem suas atividades, se o Ä±Ìndice cresce para 0,4 as do 1o e 2o grupo
saÌo intimadas a suspenderem suas atividades e se o Ä±Ìndice atingir 0,5 todos os 3 grupos
devem ser notificados a paralisarem suas atividades. Escrever um programa que leÌ o Ä±Ìndice
de poluicÌ§aÌo medido e emite a notificacÌ§aÌo adequada aos diferentes grupos de empresas." "O departamento que controla o ı́ndice de poluição do meio ambiente mantém 3
grupos de indústrias que são altamente poluentes do meio ambiente. O ı́ndice de poluição
aceitável varia de 0,05 até 0,25. Se o ı́ndice sobe para 0,3 as indústrias do 1o grupo são
intimadas a suspenderem suas atividades, se o ı́ndice cresce para 0,4 as do 1o e 2o grupo
são intimadas a suspenderem suas atividades e se o ı́ndice atingir 0,5 todos os 3 grupos
devem ser notificados a paralisarem suas atividades. Escrever um programa que lê o ı́ndice
de poluição medido e emite a notificação adequada aos diferentes grupos de empresas." #("O departamento que controla o ؤ\261جndice de poluicج\247aجo do meio ambiente manteجm 3
grupos de induجstrias que saجo altamente poluentes do meio ambiente. O ؤ\261جndice de poluicج\247aجo
aceitaجvel varia de 0,05 ateج 0,25. Se o ؤ\261جndice sobe para 0,3 as induجstrias do 1o grupo saجo
intimadas a suspenderem suas atividades, se o ؤ\261جndice cresce para 0,4 as do 1o e 2o grupo
saجo intimadas a suspenderem suas atividades e se o ؤ\261جndice atingir 0,5 todos os 3 grupos
devem ser notificados a paralisarem suas atividades. Escrever um programa que leج o ؤ\261جndice
de poluicج\247aجo medido e emite a notificacج\247aجo adequada aos diferentes grupos de empresas." 0 656 (charset iso-8859-6)) "O departamento que controla o ı́ndice de poluição do meio ambiente mantém 3
grupos de indústrias que são altamente poluentes do meio ambiente. O ı́ndice de poluição
aceitável varia de 0,05 até 0,25. Se o ı́ndice sobe para 0,3 as indústrias do 1o grupo são
intimadas a suspenderem suas atividades, se o ı́ndice cresce para 0,4 as do 1o e 2o grupo
são intimadas a suspenderem suas atividades e se o ı́ndice atingir 0,5 todos os 3 grupos
devem ser notificados a paralisarem suas atividades. Escrever um programa que lê o ı́ndice
de poluição medido e emite a notificação adequada aos diferentes grupos de empresas." #("O departamento que controla o ე±ნndice de poluicნ§aნƒo do meio ambiente manteნm 3
grupos de induნstrias que saნƒo altamente poluentes do meio ambiente. O ე±ნndice de poluicნ§aნƒo
aceitaნvel varia de 0,05 ateნ 0,25. Se o ე±ნndice sobe para 0,3 as induნstrias do 1o grupo saნƒo
intimadas a suspenderem suas atividades, se o ე±ნndice cresce para 0,4 as do 1o e 2o grupo
saნƒo intimadas a suspenderem suas atividades e se o ე±ნndice atingir 0,5 todos os 3 grupos
devem ser notificados a paralisarem suas atividades. Escrever um programa que leნ‚ o ე±ნndice
de poluicნ§aნƒo medido e emite a notificacნ§aნƒo adequada aos diferentes grupos de empresas." 0 656 (charset georgian-academy)) "O departamento que controla o ı́ndice de poluição do meio ambiente mantém 3
grupos de indústrias que são altamente poluentes do meio ambiente. O ı́ndice de poluição
aceitável varia de 0,05 até 0,25. Se o ı́ndice sobe para 0,3 as indústrias do 1o grupo são
intimadas a suspenderem suas atividades, se o ı́ndice cresce para 0,4 as do 1o e 2o grupo
são intimadas a suspenderem suas atividades e se o ı́ndice atingir 0,5 todos os 3 grupos
devem ser notificados a paralisarem suas atividades. Escrever um programa que lê o ı́ndice
de poluição medido e emite a notificação adequada aos diferentes grupos de empresas." "➜  ~ sudo  rmmod btusb
➜  ~ sudo rmmod btintel
➜  ~ sudo modprobe btintel
➜  ~ sudo modprobe btusb" #("#!/bin/bash

shutdown=\" Shutdown\"
reboot=\" Reboot\"
logout=\" Logout\"
suspend=\"Suspend\"
hibernate=\"Hibernate\"

# Variable passed to rofi
options=\"$shutdown\\n$reboot\\n$logout\\n$suspend\\n$hibernate\"

chosen=\"$(echo -e \"$options\" | dmenu -p \"Power-Menu \" )\"
case $chosen in
    $shutdown)
	SUDO_ASKPASS=/usr/bin/ssh-askpass sudo -A systemctl poweroff
	;;
    $reboot)
	SUDO_ASKPASS=/usr/bin/ssh-askpass sudo -A systemctl reboot
	;;
    $logout)
	SUDO_ASKPASS=/usr/bin/ssh-askpass sudo -A pkill -KILL -u $USER
	;;
    $suspend)
	SUDO_ASKPASS=/usr/bin/ssh-askpass sudo -A systemctl suspend
	;;
    $hibernate)
	SUDO_ASKPASS=/usr/bin/ssh-askpass sudo -A systemctl hibernate
	;;
esac
" 0 1 (fontified t face font-lock-comment-delimiter-face) 1 7 (fontified t face font-lock-comment-face) 7 11 (fontified t face font-lock-keyword-face) 11 12 (fontified t face font-lock-comment-face) 12 13 (fontified t) 13 21 (fontified t face font-lock-variable-name-face) 21 22 (fontified t) 22 34 (fontified t face font-lock-string-face) 34 35 (fontified t) 35 41 (fontified t face font-lock-variable-name-face) 41 42 (fontified t) 42 52 (fontified t face font-lock-string-face) 52 53 (fontified t) 53 59 (fontified t face font-lock-variable-name-face) 59 60 (fontified t) 60 70 (fontified t face font-lock-string-face) 70 71 (fontified t) 71 78 (fontified t face font-lock-variable-name-face) 78 79 (fontified t) 79 88 (fontified t face font-lock-string-face) 88 89 (fontified t) 89 98 (fontified t face font-lock-variable-name-face) 98 99 (fontified t) 99 110 (fontified t face font-lock-string-face) 110 112 (fontified t) 112 114 (fontified t face font-lock-comment-delimiter-face) 114 138 (fontified t face font-lock-comment-face) 138 145 (fontified t face font-lock-variable-name-face) 145 146 (fontified t) 146 197 (fontified t face font-lock-string-face) 197 199 (fontified t) 199 205 (fontified t face font-lock-variable-name-face) 205 206 (fontified t) 206 209 (fontified t face font-lock-string-face) 209 217 (fontified t face sh-quoted-exec) 217 218 (fontified t syntax-table (1) face sh-quoted-exec) 218 226 (fontified t face sh-quoted-exec) 226 227 (fontified t syntax-table (1) face sh-quoted-exec) 227 239 (fontified t face sh-quoted-exec) 239 240 (fontified t syntax-table (1) face sh-quoted-exec) 240 251 (fontified t face sh-quoted-exec) 251 252 (fontified t syntax-table (1) face sh-quoted-exec) 252 253 (fontified t face sh-quoted-exec) 253 255 (fontified t face font-lock-string-face) 255 256 (fontified t) 256 260 (fontified t face font-lock-keyword-face) 260 262 (fontified t) 262 268 (fontified t face font-lock-variable-name-face) 268 269 (fontified t face font-lock-keyword-face) 269 271 (fontified t syntax-multiline t face font-lock-keyword-face) 271 277 (fontified t syntax-multiline t) 277 285 (fontified t syntax-multiline t face font-lock-variable-name-face) 285 286 (fontified t syntax-multiline t syntax-table (1)) 286 288 (fontified t) 288 300 (fontified t face font-lock-variable-name-face) 300 350 (fontified t) 350 358 (fontified t syntax-multiline t) 358 364 (fontified t syntax-multiline t face font-lock-variable-name-face) 364 365 (fontified t syntax-multiline t syntax-table (1)) 365 367 (fontified t) 367 379 (fontified t face font-lock-variable-name-face) 379 427 (fontified t) 427 435 (fontified t syntax-multiline t) 435 441 (fontified t syntax-multiline t face font-lock-variable-name-face) 441 442 (fontified t syntax-multiline t syntax-table (1)) 442 444 (fontified t) 444 456 (fontified t face font-lock-variable-name-face) 456 502 (fontified t) 502 506 (fontified t face font-lock-variable-name-face) 506 508 (fontified t) 508 516 (fontified t syntax-multiline t) 516 523 (fontified t syntax-multiline t face font-lock-variable-name-face) 523 524 (fontified t syntax-multiline t syntax-table (1)) 524 526 (fontified t) 526 538 (fontified t face font-lock-variable-name-face) 538 587 (fontified t) 587 595 (fontified t syntax-multiline t) 595 604 (fontified t syntax-multiline t face font-lock-variable-name-face) 604 605 (fontified t syntax-multiline t syntax-table (1)) 605 607 (fontified t) 607 619 (fontified t face font-lock-variable-name-face) 619 673 (fontified t) 673 677 (fontified t face font-lock-keyword-face) 677 678 (fontified t)) "O departamento que controla o ı́ndice de poluição do meio ambiente mantém 3
grupos de indústrias que são altamente poluentes do meio ambiente. O ı́ndice de poluição
aceitável varia de 0,05 até 0,25. Se o ı́ndice sobe para 0,3 as indústrias do 1o grupo são
intimadas a suspenderem suas atividades, se o ı́ndice cresce para 0,4 as do 1o e 2o grupo
são intimadas a suspenderem suas atividades e se o ı́ndice atingir 0,5 todos os 3 grupos
devem ser notificados a paralisarem suas atividades. Escrever um programa que lê o ı́ndice
de poluição medido e emite a notificação adequada aos diferentes grupos de empresas." "O departamento que controla o ı́ndice de poluição do meio ambiente mantém 3
grupos de indústrias que são altamente poluentes do meio ambiente. O ı́ndice de poluição
aceitável varia de 0,05 até 0,25. Se o ı́ndice sobe para 0,3 as indústrias do 1o grupo são
intimadas a suspenderem suas atividades, se o ı́ndice cresce para 0,4 as do 1o e 2o grupo
são intimadas a suspenderem suas atividades e se o ı́ndice atingir 0,5 todos os 3 grupos
devem ser notificados a paralisarem suas atividades. Escrever um programa que lê o ı́ndice
de poluição medido e emite a notificação adequada aos diferentes grupos de empresas." "O departamento que controla o ı́ndice de poluição do meio ambiente mantém 3
grupos de indústrias que são altamente poluentes do meio ambiente. O ı́ndice de poluição
aceitável varia de 0,05 até 0,25. Se o ı́ndice sobe para 0,3 as indústrias do 1o grupo são
intimadas a suspenderem suas atividades, se o ı́ndice cresce para 0,4 as do 1o e 2o grupo
são intimadas a suspenderem suas atividades e se o ı́ndice atingir 0,5 todos os 3 grupos
devem ser notificados a paralisarem suas atividades. Escrever um programa que lê o ı́ndice
de poluição medido e emite a notificação adequada aos diferentes grupos de empresas." "O departamento que controla o ı́ndice de poluição do meio ambiente mantém 3
grupos de indústrias que são altamente poluentes do meio ambiente. O ı́ndice de poluição
aceitável varia de 0,05 até 0,25. Se o ı́ndice sobe para 0,3 as indústrias do 1o grupo são
intimadas a suspenderem suas atividades, se o ı́ndice cresce para 0,4 as do 1o e 2o grupo
são intimadas a suspenderem suas atividades e se o ı́ndice atingir 0,5 todos os 3 grupos
devem ser notificados a paralisarem suas atividades. Escrever um programa que lê o ı́ndice
de poluição medido e emite a notificação adequada aos diferentes grupos de empresas." #("#!/usr/bin/env python3
# coding=utf8
# ----------------------------------------------------------------------------
# Created By  : Anderson José de Souza Inácio
# Created Date: 2024-04-05
# version ='1.0'
# ---------------------------------------------------------------------------
\"\"\" Curso Estatística 2024 UFPR
Disciplina CI182 Fundamentos de Programacao de Computadores
Aula 4 Exercício 7.6 - 2 percdna

Escreva programa que leia um nome completo de uma pessoa e imprima na tela
o último sobrenome com todas as letras maiúsculas, seguido de vı́rgula,
seguido do restante do nome. Ex.: se entrada for ’Armando Luiz Nicolini
Delgado’ a saı́da deve se ’DELGADO, Armando Luiz Nicolini’
\"\"\"
# ---------------------------------------------------------------------------
# Import
# ---------------------------------------------------------------------------
# from string import *
# import math

" 0 1 (face font-lock-comment-delimiter-face fontified t) 1 23 (face font-lock-comment-face fontified t) 23 25 (face font-lock-comment-delimiter-face fontified t) 25 37 (face font-lock-comment-face fontified t) 37 39 (face font-lock-comment-delimiter-face fontified t) 39 116 (face font-lock-comment-face fontified t) 116 118 (face font-lock-comment-delimiter-face fontified t) 118 162 (face font-lock-comment-face fontified t) 162 164 (face font-lock-comment-delimiter-face fontified t) 164 189 (face font-lock-comment-face fontified t) 189 191 (face font-lock-comment-delimiter-face fontified t) 191 206 (face font-lock-comment-face fontified t) 206 208 (face font-lock-comment-delimiter-face fontified t) 208 284 (face font-lock-comment-face fontified t) 284 286 (face font-lock-doc-face fontified t) 286 287 (face font-lock-doc-face syntax-table (15) fontified t) 287 376 (face font-lock-doc-face fontified t) 376 409 (face font-lock-doc-face fontified t) 409 410 (face font-lock-doc-face fontified t) 410 485 (face font-lock-doc-face fontified t) 485 559 (face font-lock-doc-face fontified t) 559 573 (face font-lock-doc-face fontified t) 573 631 (face font-lock-doc-face fontified t) 631 657 (face font-lock-doc-face fontified t) 657 688 (face font-lock-doc-face fontified t) 688 689 (face font-lock-doc-face fontified t rear-nonsticky t) 689 690 (face font-lock-doc-face fontified t) 690 691 (face font-lock-doc-face fontified t syntax-table (15)) 691 693 (face font-lock-doc-face fontified t) 693 694 (fontified t) 694 696 (face font-lock-comment-delimiter-face fontified t) 696 772 (face font-lock-comment-face fontified t) 772 774 (face font-lock-comment-delimiter-face fontified t) 774 781 (face font-lock-comment-face fontified t) 781 783 (face font-lock-comment-delimiter-face fontified t) 783 859 (face font-lock-comment-face fontified t) 859 861 (face font-lock-comment-delimiter-face fontified t) 861 882 (face font-lock-comment-face fontified t) 882 884 (face font-lock-comment-delimiter-face fontified t) 884 895 (face font-lock-comment-face fontified t) 895 896 (face font-lock-comment-face fontified t rear-nonsticky t) 896 897 (fontified t)) "Escreva programa que leia um nome completo de uma pessoa e imprima na tela
o último sobrenome com todas as letras maiúsculas, seguido de vı́rgula, seguido do res-
tante do nome. Ex.: se entrada for ’Armando Luiz Nicolini Delgado’ a saı́da deve ser
’DELGADO, Armando Luiz Nicolini’" #("#!/usr/bin/env python3
# coding=utf8
# ----------------------------------------------------------------------------
# Created By  : Anderson José de Souza Inácio
# Created Date: 2024-04-05
# version ='1.0'
# ---------------------------------------------------------------------------
\"\"\" Curso Estatística 2024 UFPR
Disciplina CI182 Fundamentos de Programacao de Computadores
Aula 4 Exercício 7.6 - 2 percdna

Calcular a porcentagem de 2 (dois) nucleotı́deos informados pelo usuário em
uma cadeia de DNA também informada pelo usuário. O programa deve validar
todas as entradas do usuário, isto é, se for informado um nucleotı́deo
inválido em qualquer uma das entradas do usuário, o programa deve avisar
o usuário e encerrar sem fazer cálculo algum.
\"\"\"
# ---------------------------------------------------------------------------
# Import
# ---------------------------------------------------------------------------
# from string import *
# import math

" 0 1 (face font-lock-comment-delimiter-face fontified t) 1 23 (face font-lock-comment-face fontified t) 23 25 (face font-lock-comment-delimiter-face fontified t) 25 37 (face font-lock-comment-face fontified t) 37 39 (face font-lock-comment-delimiter-face fontified t) 39 116 (face font-lock-comment-face fontified t) 116 118 (face font-lock-comment-delimiter-face fontified t) 118 162 (face font-lock-comment-face fontified t) 162 164 (face font-lock-comment-delimiter-face fontified t) 164 189 (face font-lock-comment-face fontified t) 189 191 (face font-lock-comment-delimiter-face fontified t) 191 206 (face font-lock-comment-face fontified t) 206 208 (face font-lock-comment-delimiter-face fontified t) 208 284 (face font-lock-comment-face fontified t) 284 286 (face font-lock-doc-face fontified t) 286 287 (face font-lock-doc-face syntax-table (15) fontified t) 287 376 (face font-lock-doc-face fontified t) 376 409 (face font-lock-doc-face fontified t) 409 410 (face font-lock-doc-face fontified t) 410 487 (face font-lock-doc-face fontified t) 487 562 (face font-lock-doc-face fontified t) 562 571 (face font-lock-doc-face fontified t) 571 635 (face font-lock-doc-face fontified t) 635 661 (face font-lock-doc-face fontified t) 661 751 (face font-lock-doc-face fontified t) 751 756 (face font-lock-doc-face fontified t) 756 757 (face font-lock-doc-face fontified t rear-nonsticky t) 757 758 (face font-lock-doc-face fontified t) 758 759 (face font-lock-doc-face fontified t syntax-table (15)) 759 761 (face font-lock-doc-face fontified t) 761 762 (fontified t) 762 764 (face font-lock-comment-delimiter-face fontified t) 764 840 (face font-lock-comment-face fontified t) 840 842 (face font-lock-comment-delimiter-face fontified t) 842 849 (face font-lock-comment-face fontified t) 849 851 (face font-lock-comment-delimiter-face fontified t) 851 927 (face font-lock-comment-face fontified t) 927 929 (face font-lock-comment-delimiter-face fontified t) 929 950 (face font-lock-comment-face fontified t) 950 952 (face font-lock-comment-delimiter-face fontified t) 952 963 (face font-lock-comment-face fontified t) 963 964 (face font-lock-comment-face fontified t rear-nonsticky t) 964 965 (fontified t)) #("      '\\tO nucleotideo ,' nucleotideo1,' representa ', resultado1)" 0 6 (fontified t) 6 24 (face font-lock-string-face fontified t) 24 25 (face font-lock-string-face fontified t) 25 26 (fontified t) 26 39 (fontified t) 39 53 (face font-lock-string-face fontified t) 53 55 (fontified t) 55 66 (fontified t)) "" #(" nucleotideo1.upper() not in sequenciaDna.upper()" 0 1 (fontified t) 1 22 (fontified t) 22 25 (face font-lock-keyword-face fontified t) 25 26 (fontified t) 26 28 (face font-lock-keyword-face fontified t) 28 29 (fontified t) 29 49 (fontified t)) #("resultado1 = sequenciaDna.count(nucleotideo1) / len(sequenciaDna) * 100" 0 10 (face font-lock-variable-name-face fontified t) 10 13 (fontified t) 13 26 (fontified t) 26 32 (fontified t) 32 44 (fontified t) 44 48 (fontified t) 48 51 (face font-lock-builtin-face fontified t) 51 52 (fontified t) 52 71 (fontified t)) #("sequenciaDna.count(nucleotideo1) len(sequenciaDna))" 0 13 (fontified t) 13 19 (fontified t) 19 31 (fontified t) 31 33 (fontified t) 33 36 (face font-lock-builtin-face fontified t) 36 37 (fontified t) 37 50 (fontified t) 50 51 (fontified t)) #("nucleotideo1 = str(input('Informe o primeiro nucleotideo'))" 0 12 (face font-lock-variable-name-face fontified t) 12 15 (fontified t) 15 18 (face font-lock-builtin-face fontified t) 18 19 (fontified t) 19 24 (face font-lock-builtin-face fontified t) 24 25 (fontified t) 25 57 (face font-lock-string-face fontified t) 57 58 (fontified t) 58 59 (fontified t)) "Calcular a porcentagem de 2 (dois) nucleotı́deos informados pelo usuário em
uma cadeia de DNA também informada pelo usuário. O programa deve validar todas as
entradas do usuário, isto é, se for informado um nucleotı́deo inválido em qualquer uma
das entradas do usuário, o programa deve avisar o usuário e encerrar sem fazer cálculo
algum." #("#!/usr/bin/env python3
# coding=utf8
# ----------------------------------------------------------------------------
# Created By  : Anderson José de Souza Inácio
# Created Date: 2024-04-05
# version ='1.0'
# ---------------------------------------------------------------------------
\"\"\" Curso Estatística 2024 UFPR
Disciplina CI182 Fundamentos de Programacao de Computadores
Aula 4 Exercício 7.6 - 1 copel

Escreva programa que calcule preço a pagar pelo fornecimento de energia
eletrica. Solicite o consumo em kWh consumidas e o tipo de instalação:
R para residencial, I para industrial e C para comercial. Calcule o valor
da conta a pagar de acordo com a tabela:

Tipo     | Faixa kWh     |   Preço
-------------------------------------
R        | Até 500       |   0,40
         | Acima de 500  |   0,65
-------------------------------------
C        | Ate 1000      |   0,60
         | Acima de 1000 |   0,70
-------------------------------------
I        | Ate 5000      |   0,50
         | Acima de 5000 |   0,60
-------------------------------------
\"\"\"
# ---------------------------------------------------------------------------
# Import
# ---------------------------------------------------------------------------
# from string import *
# import math
" 0 1 (face font-lock-comment-delimiter-face fontified t) 1 23 (face font-lock-comment-face fontified t) 23 25 (face font-lock-comment-delimiter-face fontified t) 25 37 (face font-lock-comment-face fontified t) 37 39 (face font-lock-comment-delimiter-face fontified t) 39 116 (face font-lock-comment-face fontified t) 116 118 (face font-lock-comment-delimiter-face fontified t) 118 162 (face font-lock-comment-face fontified t) 162 164 (face font-lock-comment-delimiter-face fontified t) 164 189 (face font-lock-comment-face fontified t) 189 191 (face font-lock-comment-delimiter-face fontified t) 191 206 (face font-lock-comment-face fontified t) 206 208 (face font-lock-comment-delimiter-face fontified t) 208 284 (face font-lock-comment-face fontified t) 284 286 (face font-lock-doc-face fontified t) 286 287 (face font-lock-doc-face syntax-table (15) fontified t) 287 376 (face font-lock-doc-face fontified t) 376 407 (face font-lock-doc-face fontified t) 407 408 (face font-lock-doc-face fontified t) 408 481 (face font-lock-doc-face fontified t) 481 491 (face font-lock-doc-face fontified t) 491 554 (face font-lock-doc-face fontified t) 554 581 (face font-lock-doc-face fontified t) 581 667 (face font-lock-doc-face fontified t) 667 668 (face font-lock-doc-face fontified t rear-nonsticky t) 668 669 (face font-lock-doc-face fontified t) 669 670 (face font-lock-doc-face fontified t) 670 674 (face font-lock-doc-face fontified t) 674 704 (face font-lock-doc-face fontified t) 704 705 (face font-lock-doc-face fontified t) 705 742 (face font-lock-doc-face fontified t) 742 743 (face font-lock-doc-face fontified t) 743 744 (face font-lock-doc-face fontified t) 744 754 (face font-lock-doc-face fontified t) 754 755 (face font-lock-doc-face fontified t) 755 756 (face font-lock-doc-face fontified t) 756 757 (face font-lock-doc-face fontified t) 757 758 (face font-lock-doc-face fontified t) 758 759 (face font-lock-doc-face fontified t) 759 760 (face font-lock-doc-face fontified t) 760 761 (face font-lock-doc-face fontified t) 761 776 (face font-lock-doc-face fontified t) 776 777 (face font-lock-doc-face fontified t) 777 811 (face font-lock-doc-face fontified t) 811 848 (face font-lock-doc-face fontified t) 848 849 (face font-lock-doc-face fontified t) 849 850 (face font-lock-doc-face fontified t) 850 868 (face font-lock-doc-face fontified t) 868 882 (face font-lock-doc-face fontified t) 882 883 (face font-lock-doc-face fontified t) 883 917 (face font-lock-doc-face fontified t) 917 954 (face font-lock-doc-face fontified t) 954 955 (face font-lock-doc-face fontified t) 955 956 (face font-lock-doc-face fontified t) 956 989 (face font-lock-doc-face fontified t) 989 1023 (face font-lock-doc-face fontified t) 1023 1060 (face font-lock-doc-face fontified t) 1060 1061 (face font-lock-doc-face fontified t) 1061 1062 (face font-lock-doc-face fontified t syntax-table (15)) 1062 1064 (face font-lock-doc-face fontified t) 1064 1065 (fontified t) 1065 1067 (face font-lock-comment-delimiter-face fontified t) 1067 1143 (face font-lock-comment-face fontified t) 1143 1145 (face font-lock-comment-delimiter-face fontified t) 1145 1152 (face font-lock-comment-face fontified t) 1152 1154 (face font-lock-comment-delimiter-face fontified t) 1154 1230 (face font-lock-comment-face fontified t) 1230 1232 (face font-lock-comment-delimiter-face fontified t) 1232 1253 (face font-lock-comment-face fontified t) 1253 1255 (face font-lock-comment-delimiter-face fontified t) 1255 1266 (face font-lock-comment-face fontified t) 1266 1267 (face font-lock-comment-face fontified t rear-nonsticky t)) #("menor, maior = tarifas.get('R')" 0 5 (help-echo "mouse-2: insert after prompt as new input" mouse-face highlight fontified t font-lock-face font-lock-variable-name-face) 5 7 (help-echo "mouse-2: insert after prompt as new input" mouse-face highlight fontified t) 7 12 (help-echo "mouse-2: insert after prompt as new input" mouse-face highlight fontified t font-lock-face font-lock-variable-name-face) 12 27 (help-echo "mouse-2: insert after prompt as new input" mouse-face highlight fontified t) 27 30 (help-echo "mouse-2: insert after prompt as new input" mouse-face highlight fontified t font-lock-face font-lock-string-face) 30 31 (help-echo "mouse-2: insert after prompt as new input" mouse-face highlight fontified t)) #("tarifas.get('R')" 0 12 (help-echo "mouse-2: insert after prompt as new input" mouse-face highlight fontified t) 12 15 (help-echo "mouse-2: insert after prompt as new input" mouse-face highlight fontified t font-lock-face font-lock-string-face) 15 16 (help-echo "mouse-2: insert after prompt as new input" mouse-face highlight fontified t)) #("tarifas = {
    'R': {
        500: 0.4,
        501: 0.65,
    },
    'C': {
        1000: 0.6,
        1001: 0.7
    },
    'I': {
        5000: 0.5,
        5001: 0.6
    }
}
" 0 7 (face font-lock-variable-name-face fontified t) 7 12 (fontified t) 12 16 (fontified t) 16 19 (face font-lock-string-face fontified t) 19 23 (fontified t) 23 31 (fontified t) 31 34 (fontified t) 34 41 (fontified t) 41 49 (fontified t) 49 52 (fontified t) 52 59 (fontified t) 59 60 (fontified t) 60 67 (fontified t) 67 71 (fontified t) 71 74 (face font-lock-string-face fontified t) 74 78 (fontified t) 78 90 (fontified t) 90 97 (fontified t) 97 114 (fontified t) 114 115 (fontified t) 115 122 (fontified t) 122 126 (fontified t) 126 129 (face font-lock-string-face fontified t) 129 133 (fontified t) 133 152 (fontified t) 152 169 (fontified t) 169 170 (fontified t) 170 174 (fontified t) 174 175 (fontified t) 175 176 (fontified t) 176 177 (fontified t) 177 178 (fontified t)) #("tarifas.get(tipoInstalacao.upper())." 0 12 (fontified t) 12 34 (fontified t) 34 36 (fontified t)) "Escreva programa que calcule preço a pagar pelo fornecimento de energia elétrica.
Solicite o consumo em kWh consumidas e o tipo de instalação: R para residencial, I para
industrial e C para comercial. Calcule o valor da conta a pagar de acordo com a tabela:" #("#!/usr/bin/env python3
# coding=utf8
# ----------------------------------------------------------------------------
# Created By  : Anderson José de Souza Inácio
# Created Date: 2024-04-05
# version ='1.0'
# ---------------------------------------------------------------------------
\"\"\" Curso Estatística 2024 UFPR
Disciplina CI182 Fundamentos de Programacao de Computadores
Aula 4 Exercício 7.3 - 3 loja

Um vendedor precisa de um programa que calcule o preco total devido por um
cliente. O programa deve receber o codigo de um produto e a quantidade
comprada. O programa deve calcular e imprimir o preço total usando a tabela
abaixo. Alem disso, em caso de codigo invalido uma mensagem deve ser impressa.

codigo   | preco unitario
--------------------
ABCD     | R$ 5,33
XYPK     | R$ 6,02
KLMP     | R$ 3,27
QRST     | R$ 2,59
XXKP     | R$ 15,497
\"\"\"
# ---------------------------------------------------------------------------
# Import
# ---------------------------------------------------------------------------
# from string import *
# import math
" 0 1 (face font-lock-comment-delimiter-face fontified t) 1 23 (face font-lock-comment-face fontified t) 23 25 (face font-lock-comment-delimiter-face fontified t) 25 37 (face font-lock-comment-face fontified t) 37 39 (face font-lock-comment-delimiter-face fontified t) 39 116 (face font-lock-comment-face fontified t) 116 118 (face font-lock-comment-delimiter-face fontified t) 118 162 (face font-lock-comment-face fontified t) 162 164 (face font-lock-comment-delimiter-face fontified t) 164 189 (face font-lock-comment-face fontified t) 189 191 (face font-lock-comment-delimiter-face fontified t) 191 206 (face font-lock-comment-face fontified t) 206 208 (face font-lock-comment-delimiter-face fontified t) 208 284 (face font-lock-comment-face fontified t) 284 286 (face font-lock-doc-face fontified t) 286 287 (face font-lock-doc-face syntax-table (15) fontified t) 287 376 (face font-lock-doc-face fontified t) 376 406 (face font-lock-doc-face fontified t) 406 407 (face font-lock-doc-face fontified t) 407 482 (face font-lock-doc-face fontified t) 482 491 (face font-lock-doc-face fontified t) 491 553 (face font-lock-doc-face fontified t) 553 574 (face font-lock-doc-face fontified t) 574 630 (face font-lock-doc-face fontified t) 630 661 (face font-lock-doc-face fontified t) 661 707 (face font-lock-doc-face fontified t) 707 708 (face font-lock-doc-face fontified t rear-nonsticky t) 708 709 (face font-lock-doc-face fontified t) 709 710 (face font-lock-doc-face fontified t) 710 721 (face font-lock-doc-face fontified t) 721 734 (face font-lock-doc-face fontified t) 734 735 (face font-lock-doc-face rear-nonsticky t fontified t) 735 736 (face font-lock-doc-face fontified t) 736 756 (face font-lock-doc-face fontified t) 756 757 (face font-lock-doc-face fontified t) 757 768 (face font-lock-doc-face fontified t) 768 774 (face font-lock-doc-face fontified t) 774 775 (face font-lock-doc-face rear-nonsticky t fontified t) 775 776 (face font-lock-doc-face fontified t) 776 787 (face font-lock-doc-face fontified t) 787 793 (face font-lock-doc-face fontified t) 793 794 (face font-lock-doc-face rear-nonsticky t fontified t) 794 795 (face font-lock-doc-face fontified t) 795 806 (face font-lock-doc-face fontified t) 806 812 (face font-lock-doc-face fontified t) 812 813 (face font-lock-doc-face rear-nonsticky t fontified t) 813 814 (face font-lock-doc-face fontified t) 814 825 (face font-lock-doc-face fontified t) 825 831 (face font-lock-doc-face fontified t) 831 832 (face font-lock-doc-face rear-nonsticky t fontified t) 832 833 (face font-lock-doc-face fontified t) 833 844 (face font-lock-doc-face fontified t) 844 852 (face font-lock-doc-face fontified t) 852 853 (face font-lock-doc-face fontified t rear-nonsticky t) 853 854 (face font-lock-doc-face fontified t) 854 855 (face font-lock-doc-face fontified t syntax-table (15)) 855 857 (face font-lock-doc-face fontified t) 857 858 (fontified t) 858 860 (face font-lock-comment-delimiter-face fontified t) 860 936 (face font-lock-comment-face fontified t) 936 938 (face font-lock-comment-delimiter-face fontified t) 938 945 (face font-lock-comment-face fontified t) 945 947 (face font-lock-comment-delimiter-face fontified t) 947 1023 (face font-lock-comment-face fontified t) 1023 1025 (face font-lock-comment-delimiter-face fontified t) 1025 1046 (face font-lock-comment-face fontified t) 1046 1048 (face font-lock-comment-delimiter-face fontified t) 1048 1060 (face font-lock-comment-face fontified t)) #("R$ 15,497" 0 8 (face font-lock-doc-face fontified t) 8 9 (face font-lock-doc-face fontified t rear-nonsticky t)) #("R$ 2,59" 0 7 (face font-lock-doc-face fontified t)) #("R$ 3,27" 0 7 (face font-lock-doc-face fontified t)) #("R$ 6,02" 0 7 (face font-lock-doc-face fontified t)) #("R$ 5,33" 0 7 (face font-lock-doc-face fontified t)) #("preco unitario" 0 14 (face font-lock-doc-face fontified t)) "código
ABCD
XYPK
KLMP
QRST
XXKP
7.4
preço unitário
R$ 5,33
R$ 6,02
R$ 3,27
R$ 2,59
R$ 15,497" "Um vendedor precisa de um programa que calcule o preço total devido por um cliente.
O programa deve receber o código de um produto e a quantidade comprada. O programa
deve calcular e imprimir o preço total usando a tabela abaixo. Além disso, em caso de
código inválido uma mensagem deve ser impressa." #("#!/usr/bin/env python3
# coding=utf8
# ----------------------------------------------------------------------------
# Created By  : Anderson José de Souza Inácio
# Created Date: 2024-04-05
# version ='1.0'
# ---------------------------------------------------------------------------
\"\"\" Curso Estatística 2024 UFPR
Disciplina CI182 Fundamentos de Programacao de Computadores
Aula 4 Exercício 7.3 - 2 calculadora

Faça programa que leia 2 valores e pergunte qual operação aritmética (+, -,
x, /) você deseja efetuar. O programa deve exibir o resultado na tela. Se o
usuário indicar operação inexistente, exibir mensagem indicando o erro.
\"\"\"
# ---------------------------------------------------------------------------
# Import
# ---------------------------------------------------------------------------
# from string import *
# import math


valor1 = float(input('Informe o primeiro valor: '))
valor2 = float(input('Informe o segundo valor: '))
operacao = str(input('Informe a operação aritimética\\n + - * /: '))
operacoesValidas = '+ - * //'

if (operacoesValidas.count(operacao) == 1):
    print('Operacao Inválida!!!')
elif (operacao == '+'):
    print(valor1+valor2)
elif (operacao == '-'):
    print(valor1-valor2)
elif (operacao == '*'):
    print(valor1*valor2)
elif (operacao == '/'):
    print(valor1/valor2)
" 0 1 (face font-lock-comment-delimiter-face fontified t) 1 23 (face font-lock-comment-face fontified t) 23 25 (face font-lock-comment-delimiter-face fontified t) 25 37 (face font-lock-comment-face fontified t) 37 39 (face font-lock-comment-delimiter-face fontified t) 39 116 (face font-lock-comment-face fontified t) 116 118 (face font-lock-comment-delimiter-face fontified t) 118 162 (face font-lock-comment-face fontified t) 162 164 (face font-lock-comment-delimiter-face fontified t) 164 189 (face font-lock-comment-face fontified t) 189 191 (face font-lock-comment-delimiter-face fontified t) 191 206 (face font-lock-comment-face fontified t) 206 208 (face font-lock-comment-delimiter-face fontified t) 208 284 (face font-lock-comment-face fontified t) 284 286 (face font-lock-doc-face fontified t) 286 287 (face font-lock-doc-face fontified t syntax-table (15)) 287 376 (face font-lock-doc-face fontified t) 376 413 (face font-lock-doc-face fontified t) 413 414 (face font-lock-doc-face fontified t) 414 494 (face font-lock-doc-face fontified t) 494 571 (face font-lock-doc-face fontified t) 571 588 (face font-lock-doc-face fontified t) 588 644 (face font-lock-doc-face fontified t) 644 645 (face font-lock-doc-face fontified t rear-nonsticky t) 645 646 (face font-lock-doc-face fontified t) 646 647 (face font-lock-doc-face fontified t syntax-table (15)) 647 649 (face font-lock-doc-face fontified t) 649 650 (fontified t) 650 652 (face font-lock-comment-delimiter-face fontified t) 652 728 (face font-lock-comment-face fontified t) 728 730 (face font-lock-comment-delimiter-face fontified t) 730 737 (face font-lock-comment-face fontified t) 737 739 (face font-lock-comment-delimiter-face fontified t) 739 815 (face font-lock-comment-face fontified t) 815 817 (face font-lock-comment-delimiter-face fontified t) 817 838 (face font-lock-comment-face fontified t) 838 840 (face font-lock-comment-delimiter-face fontified t) 840 852 (face font-lock-comment-face fontified t) 852 854 (fontified t) 854 860 (face font-lock-variable-name-face fontified t) 860 863 (fontified t) 863 868 (face font-lock-builtin-face fontified t) 868 869 (fontified t) 869 874 (face font-lock-builtin-face fontified t) 874 875 (fontified t) 875 903 (face font-lock-string-face fontified t) 903 906 (fontified t) 906 912 (fontified t) 912 915 (fontified t) 915 920 (face font-lock-builtin-face fontified t) 920 921 (fontified t) 921 926 (face font-lock-builtin-face fontified t) 926 927 (fontified t) 927 954 (face font-lock-string-face fontified t) 954 957 (fontified t) 957 965 (fontified t) 965 968 (fontified t) 968 971 (face font-lock-builtin-face fontified t) 971 972 (fontified t) 972 977 (face font-lock-builtin-face fontified t) 977 978 (fontified t) 978 1021 (face font-lock-string-face fontified t) 1021 1022 (face font-lock-string-face fontified t) 1022 1024 (fontified t) 1024 1025 (fontified t) 1025 1041 (face font-lock-variable-name-face fontified t) 1041 1044 (fontified t) 1044 1054 (face font-lock-string-face fontified t) 1054 1055 (fontified t) 1055 1056 (fontified t) 1056 1058 (face font-lock-keyword-face fontified t) 1058 1060 (fontified t) 1060 1097 (fontified t) 1097 1100 (fontified t) 1100 1104 (fontified t) 1104 1109 (face font-lock-builtin-face fontified t) 1109 1110 (fontified t) 1110 1132 (face font-lock-string-face fontified t) 1132 1134 (fontified t) 1134 1138 (face font-lock-keyword-face fontified t) 1138 1140 (fontified t) 1140 1152 (fontified t) 1152 1155 (face font-lock-string-face fontified t) 1155 1158 (fontified t) 1158 1162 (fontified t) 1162 1167 (face font-lock-builtin-face fontified t) 1167 1168 (fontified t) 1168 1175 (fontified t) 1175 1182 (fontified t) 1182 1183 (fontified t) 1183 1187 (face font-lock-keyword-face fontified t) 1187 1189 (fontified t) 1189 1201 (fontified t) 1201 1204 (face font-lock-string-face fontified t) 1204 1207 (fontified t) 1207 1211 (fontified t) 1211 1216 (face font-lock-builtin-face fontified t) 1216 1217 (fontified t) 1217 1224 (fontified t) 1224 1231 (fontified t) 1231 1232 (fontified t rear-nonsticky t) 1232 1236 (face font-lock-keyword-face fontified t) 1236 1238 (fontified t) 1238 1250 (fontified t) 1250 1253 (face font-lock-string-face fontified t) 1253 1256 (fontified t) 1256 1260 (fontified t) 1260 1265 (face font-lock-builtin-face fontified t) 1265 1266 (fontified t) 1266 1273 (fontified t) 1273 1280 (fontified t) 1280 1281 (fontified t rear-nonsticky t) 1281 1285 (face font-lock-keyword-face fontified t) 1285 1287 (fontified t) 1287 1299 (fontified t) 1299 1302 (face font-lock-string-face fontified t) 1302 1305 (fontified t) 1305 1309 (fontified t) 1309 1314 (face font-lock-builtin-face fontified t) 1314 1315 (fontified t) 1315 1322 (fontified t) 1322 1330 (fontified t)) #("elif (operacao == '+'):
    print(valor1+valor2)
" 0 4 (face font-lock-keyword-face fontified t) 4 6 (fontified t) 6 18 (fontified t) 18 21 (face font-lock-string-face fontified t) 21 24 (fontified t) 24 28 (fontified t) 28 33 (face font-lock-builtin-face fontified t) 33 34 (fontified t) 34 41 (fontified t) 41 49 (fontified t)) "Faça programa que leia 2 valores e pergunte qual operação aritmética (+, -,
x, /) você deseja efetuar. O programa deve exibir o resultado na tela. Se o usuário indicar
operação inexistente, exibir mensagem indicando o erro." "(xclip-mode 1)" "Faça programa que leia 2 valores e pergunte qual operação aritmética (+, -,
x, /) você deseja efetuar. O programa deve exibir o resultado na tela. Se o usuário indicar
operação inexistente, exibir mensagem indicando o erro." "Faça programa que leia 2 valores e pergunte qual operação aritmética (+, -,
x, /) você deseja efetuar. O programa deve exibir o resultado na tela. Se o usuário indicar
operação inexistente, exibir mensagem indicando o erro." "(require 'simpleclip)
(simpleclip-mode 1)"))
(setq search-ring '(#("/" 0 1 (isearch-regexp-function nil isearch-case-fold-search t))))
(setq regexp-search-ring '("indent" "scheme\\[SchemeNorm]\\[ColB" "updatesys" "mai"))
