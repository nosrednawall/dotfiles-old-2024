;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by ‘savehist’.

(setq savehist-minibuffer-history-variables '(counsel-locate-history sql-product-history sql-server-history sql-database-history sql-user-history read-char-history counsel-git-history transient--history read-number-history compile-history shell-command-history magit-git-command-history magit-revision-history extended-command-history ido-file-history minibuffer-history empty-history read-from-kill-ring-history ivy-history counsel-M-x-history swiper-history ido-buffer-history file-name-history))
(setq sql-product-history '(#("ansi" 0 4 (ivy-index 0))))
(setq sql-server-history '("172.17.0.2" "172.17.0.1"))
(setq sql-database-history '(#("alura" 0 5 (ivy-index 0)) #("postgres" 0 8 (ivy-index 0)) #("anderson" 0 8 (ivy-index 0))))
(setq sql-user-history '("postgres"))
(setq read-number-history '("5432" "1"))
(setq compile-history '("make -k "))
(setq shell-command-history '("/usr/bin/zsh" "/usr/bin/bash"))
(setq magit-revision-history '(#("5ad9048" 0 7 (ivy-index 0)) #("9e4e37a8e58c4c2695feeb6ce1223b8849c5f7f7" 0 40 (ivy-index 0)) #("e5b577f5f6a6135f1566bf97f4a4c1a2ea06af15" 0 40 (ivy-index 0)) #("HEAD" 0 4 (ivy-index 3)) #("main" 0 4 (ivy-index 0)) #("origin/main" 0 11 (ivy-index 0)) #("1a51c1d" 0 7 (ivy-index 0)) #("ola mundo" 0 9 (ivy-index 0))))
(setq extended-command-history '("package-install"))
(setq ido-file-history '("." "teste.sql" "onibus.py" "credito.py" "pesoideal.py" "achemaior.py" "medias.py" "multiplos.py" "notas.py" "calcnota.py" "py" "ultimoStr.py" "primaStr.py" "juntaStr.py" "compStr.py" "tamStr.py" "sl-wttr.sh" "sl-wttr.sh~" "degraus.py" "distpontos.py" "eq2graus.py" "volesFera.py" "calculos.py" "escada.py" "capitulo_02_resumo_dados.r" "sxhkdrc" "dmenu-bitwarden" "teste.ini" "config.ini" "teste" "eqSistCramer.py" "eqSist.py" "eqGrau1.py" "convKm.py" "mediaPond.py" "convFarenheit.py" "segundo2horas.py" "idadeDias2anos.py" "idadeAnos2dias.py" "media.py" "calcula_sistemas.py" "equacao_segundo_grau.py" "media_aritimetica.py" "media_aritimetica_3_valores.py" "soma_dois_numeros.py" "init.el" "calcula_raiz_de_3_numeros.py" "aula004_usando_funcoes.sql" "aula003_sub_consultas.sql" "dmenu-teclados" "aula001.sql" "emacs.org" "myinit.org" nil "tabela_funcionarios.sql" "tabela_aluno.sql" "README.md" "dunstrc" "cpu_status.sh" "music_status_bar.sh" "volume_icon.sh" "battery_status.sh" "advinha_mais.html" "estrelas.html" "media_idades_familiares.html" "media_idades_familiares.hml" "tabuada.html" "ano_copa.html" "jogo_advinha.html" "futebol.html" "imc.html" "programa.html" "texto_puro.html" "primeiro_teste.html"))
(setq minibuffer-history '("dashboard" "/usr/bin/zsh" "select * from curso;" "select * from cursos;" "/usr/bin/bash"))
(setq ivy-history '(#("tree-sitter-ispell" 0 18 (ivy-index 1)) #("tree-sitter-langs" 0 17 (ivy-index 0)) #("tree-sitter" 0 11 (ivy-index 4)) #("rainbow-mode" 0 12 (ivy-index 0)) #("101-medidas-uni.R" 0 17 (ivy-index 4)) #("con" 0 3 (ivy-index 0)) "config.h" #("config." 0 7 (ivy-index 0)) #("origin" 0 6 (ivy-index 0)) #("master" 0 6 (ivy-index 0)) #("pdf-tools" 0 9 (ivy-index 0)) #("~/git/Educacional/Programa_Desenvolve_Boticario/006_Git_Github/projeto_inicial/" 0 79 (ivy-index 0)) #("dape" 0 4 (ivy-index 0)) #("elpy" 0 4 (ivy-index 1)) #("~/.dotfiles/" 0 12 (ivy-index 0)) #("nyan-mode" 0 9 (ivy-index 0)) #("flycheck" 0 8 (ivy-index 64)) #("emacsql-psql" 0 12 (ivy-index 13)) #("index.html" 0 10 (ivy-index 0)) #("myterminal-controls" 0 19 (ivy-index 10)) #("./" 0 2 (ivy-index 0)) #("... (choose a dir)" 0 18 (ivy-index 1)) #("electric-indent-mode" 0 20 (ivy-index 14)) #("indent-guide" 0 12 (ivy-index 0)) #("web-mode-indent-style" 0 21 (ivy-index 0))))
(setq counsel-M-x-history '(#("^rainbo" 0 7 (ivy-index 0)) "rainbow-mode" #("^sql-pos" 0 8 (ivy-index 0)) "sql-postgres" #("^python-mode" 0 12 (ivy-index 0)) "python-mode" #("^python" 0 7 (ivy-index 0)) #("^eglo" 0 5 (ivy-index 0)) "eglot" #("package-install" 0 15 (ivy-index 0)) #("^package-ins" 0 12 (ivy-index 0)) #("packa" 0 5 (ivy-index 0)) #("^package-install" 0 16 (ivy-index 0)) #("^packa" 0 6 (ivy-index 0)) #("^term" 0 5 (ivy-index 0)) "term" #("^rain" 0 5 (ivy-index 0)) #("^shell" 0 6 (ivy-index 0)) "shell" #("^magit-" 0 7 (ivy-index 24)) "magit-status" #("^pdf-view" 0 9 (ivy-index 0)) "pdf-view-mode" #("^pdf-vi" 0 7 (ivy-index 0)) #("^pdf-t" 0 6 (ivy-index 6)) "pdf-tools-enable-minor-modes" #("^try" 0 4 (ivy-index 0)) "try" #("^r" 0 2 (ivy-index 1)) "R" #("^R" 0 2 (ivy-index 1)) "R-mode" #("^dape" 0 5 (ivy-index 0)) "dape-continue" #("^elpy-mo" 0 8 (ivy-index 1)) "elpy-mode" #("^elpy-ena" 0 9 (ivy-index 0)) "elpy-enable" #("^elpy-dis" 0 9 (ivy-index 0)) "elpy-disable" #("^elpy" 0 5 (ivy-index 0)) #("^elpy-shell-send" 0 16 (ivy-index 2)) "elpy-shell-send-file" "elpy-shell-send-buffer" "elpy-shell-send-statement-and-step" #("^elpy-con" 0 9 (ivy-index 0)) "elpy-config" #("^elpy-s" 0 7 (ivy-index 11)) "elpy-shell-send-defun-and-go" #("^run-p" 0 6 (ivy-index 1)) "run-python" #("^sql-post" 0 9 (ivy-index 0)) #("^unta" 0 5 (ivy-index 0)) "untabify" #("^package-inst" 0 13 (ivy-index 0)) #("^elpy-mode" 0 10 (ivy-index 0)) #("^elpy-mod" 0 9 (ivy-index 1)) #("^auto-com" 0 9 (ivy-index 2)) "auto-complete-mode" #("^auto" 0 5 (ivy-index 3)) "auto-complete" #("^elpy-c" 0 7 (ivy-index 1)) #("^elpy-conf" 0 10 (ivy-index 0)) #("^elpy-confi" 0 11 (ivy-index 0)) #("^nyan" 0 5 (ivy-index 4)) "nyan-start-animation" "nyan-start-music" "nyan-mode" "nyan-scroll-buffer" #("^nya" 0 4 (ivy-index 1)) "nyan-toggle-wavy-trail" #("nyan-" 0 5 (ivy-index 7)) #("^spaceline-toggle-n" 0 19 (ivy-index 1)) "spaceline-toggle-nyan-cat-on" "spaceline-toggle-nyan-cat" "elpy-autopep8-fix-code" #("^elpy-menu" 0 10 (ivy-index 0)) "elpy-menu" #("^elpy-" 0 6 (ivy-index 16)) "elpy-check" #("^elpy-config" 0 12 (ivy-index 0)) #("^elpy-en" 0 8 (ivy-index 0)) #("^pyve" 0 5 (ivy-index 5)) "pyvenv-workon" #("^pyvenv" 0 7 (ivy-index 6)) "pyvenv-activate" #("^elpy-rpc" 0 9 (ivy-index 1)) "elpy-rpc-restart" #("^elpy-rp" 0 8 (ivy-index 1)) #("^ansi" 0 5 (ivy-index 1)) "ansi-term" #("^python-mo" 0 10 (ivy-index 0)) #("^sql" 0 4 (ivy-index 1)) #("^conf-mo" 0 8 (ivy-index 0)) "conf-mode" #("linu" 0 4 (ivy-index 0)) "linum-mode" #("^sql-hel" 0 8 (ivy-index 0)) "sql-help" #("^sql-set" 0 8 (ivy-index 1)) "sql-set-sqli-buffer" "sql-set-product" #("^sql-mode" 0 9 (ivy-index 0)) "sql-mode" #("^ter" 0 4 (ivy-index 0)) #("^markdown-pre" 0 13 (ivy-index 0)) "markdown-preview-cleanup" #("^markdown-previ" 0 15 (ivy-index 1)) "markdown-preview" "markdown-preview-mode" "markdown-preview-open-browser" #("^markdown-vi" 0 12 (ivy-index 0)) "markdown-view-mode" #("^markdown-v" 0 11 (ivy-index 0)) #("^markdown-p" 0 11 (ivy-index 0)) #("^markdown-mode" 0 14 (ivy-index 2)) "markdown-mode" #("^markdo" 0 7 (ivy-index 2)) #("^ra" 0 3 (ivy-index 1)) #("^conf-mod" 0 9 (ivy-index 0)) #("^myter" 0 6 (ivy-index 1)) "myterminal-controls-open-controls" #("^magit-rebase" 0 13 (ivy-index 2)) "magit-rebase" #("^magit-log-current" 0 18 (ivy-index 0)) "magit-log-current" #("^magit-log --g" 0 14 (ivy-index 0)) "magit-log:--grep" #("^magit-lo" 0 9 (ivy-index 1)) "magit-log:-G" #("^magit-log" 0 10 (ivy-index 8)) "magit-log" #("^centaur-tabs-mode" 0 18 (ivy-index 0)) "centaur-tabs-mode" #("^centaur-tabs-g" 0 15 (ivy-index 0)) "centaur-tabs-group-buffer-groups" #("^magit-merge" 0 12 (ivy-index 3)) "magit-merge" #("^magit-status" 0 13 (ivy-index 2)) #("^rainb" 0 6 (ivy-index 0)) #("^ansi-" 0 6 (ivy-index 1)) #("^conf-mode" 0 10 (ivy-index 0)) #("^magit-stat" 0 11 (ivy-index 2)) #("^ansi-te" 0 8 (ivy-index 0)) #("^java" 0 5 (ivy-index 1)) "javascript-mode" #("^customize-va" 0 13 (ivy-index 0)) "customize-variable" #("^indent-gui" 0 11 (ivy-index 0)) "indent-guide-mode" #("^package-lis" 0 12 (ivy-index 0)) "package-list-packages" #("^web-mode" 0 9 (ivy-index 82)) "web-mode" #("ansi" 0 4 (ivy-index 2)) #("^cua" 0 4 (ivy-index 5)) "cua-toggle-rectangle-mark" "cua-paste" "cua-paste-pop" "cua-cut-region" #("^cua-sc" 0 7 (ivy-index 1)) "cua-scroll-down" #("^cua-s" 0 6 (ivy-index 2)) "cua-selection-mode"))
(setq swiper-history '(#("indent" 0 6 (ivy-index 16)) #("   indent-guide                   20160630       available    melpa-stable show vertical lines to guide indentation" 0 1 (swiper-line-number 1665 display "1665 ") 1 3 (tabulated-list-id #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) tabulated-list-entry [("indent-guide" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) action package-menu-describe-package) #("20160630" 0 8 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa-stable" 0 12 (font-lock-face package-status-available)) #("show vertical lines to guide indentation" 0 40 (font-lock-face package-description))]) 3 15 (button (t) category default-button face package-name font-lock-face package-name follow-link t package-desc #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) action package-menu-describe-package tabulated-list-column-name "Package" tabulated-list-id #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) tabulated-list-entry [("indent-guide" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) action package-menu-describe-package) #("20160630" 0 8 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa-stable" 0 12 (font-lock-face package-status-available)) #("show vertical lines to guide indentation" 0 40 (font-lock-face package-description))]) 15 16 (tabulated-list-column-name "Package" tabulated-list-id #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) tabulated-list-entry [("indent-guide" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) action package-menu-describe-package) #("20160630" 0 8 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa-stable" 0 12 (font-lock-face package-status-available)) #("show vertical lines to guide indentation" 0 40 (font-lock-face package-description))]) 16 34 (display (space :align-to 33) tabulated-list-column-name "Package" tabulated-list-id #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) tabulated-list-entry [("indent-guide" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) action package-menu-describe-package) #("20160630" 0 8 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa-stable" 0 12 (font-lock-face package-status-available)) #("show vertical lines to guide indentation" 0 40 (font-lock-face package-description))]) 34 42 (font-lock-face package-status-available help-echo #("Version: 20160630" 9 17 (font-lock-face package-status-available)) tabulated-list-column-name "Version" tabulated-list-id #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) tabulated-list-entry [("indent-guide" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) action package-menu-describe-package) #("20160630" 0 8 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa-stable" 0 12 (font-lock-face package-status-available)) #("show vertical lines to guide indentation" 0 40 (font-lock-face package-description))]) 42 43 (tabulated-list-column-name "Version" tabulated-list-id #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) tabulated-list-entry [("indent-guide" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) action package-menu-describe-package) #("20160630" 0 8 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa-stable" 0 12 (font-lock-face package-status-available)) #("show vertical lines to guide indentation" 0 40 (font-lock-face package-description))]) 43 49 (display (space :align-to 48) tabulated-list-column-name "Version" tabulated-list-id #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) tabulated-list-entry [("indent-guide" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) action package-menu-describe-package) #("20160630" 0 8 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa-stable" 0 12 (font-lock-face package-status-available)) #("show vertical lines to guide indentation" 0 40 (font-lock-face package-description))]) 49 58 (font-lock-face package-status-available help-echo #("Status: available" 8 17 (font-lock-face package-status-available)) tabulated-list-column-name "Status" tabulated-list-id #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) tabulated-list-entry [("indent-guide" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) action package-menu-describe-package) #("20160630" 0 8 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa-stable" 0 12 (font-lock-face package-status-available)) #("show vertical lines to guide indentation" 0 40 (font-lock-face package-description))]) 58 59 (tabulated-list-column-name "Status" tabulated-list-id #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) tabulated-list-entry [("indent-guide" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) action package-menu-describe-package) #("20160630" 0 8 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa-stable" 0 12 (font-lock-face package-status-available)) #("show vertical lines to guide indentation" 0 40 (font-lock-face package-description))]) 59 62 (display (space :align-to 61) tabulated-list-column-name "Status" tabulated-list-id #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) tabulated-list-entry [("indent-guide" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) action package-menu-describe-package) #("20160630" 0 8 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa-stable" 0 12 (font-lock-face package-status-available)) #("show vertical lines to guide indentation" 0 40 (font-lock-face package-description))]) 62 69 (font-lock-face package-status-available help-echo #("Archive: melpa-stable" 9 21 (font-lock-face package-status-available)) tabulated-list-column-name "Archive" tabulated-list-id #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) tabulated-list-entry [("indent-guide" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) action package-menu-describe-package) #("20160630" 0 8 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa-stable" 0 12 (font-lock-face package-status-available)) #("show vertical lines to guide indentation" 0 40 (font-lock-face package-description))]) 69 74 (font-lock-face package-status-available display "…" help-echo #("Archive: melpa-stable" 9 21 (font-lock-face package-status-available)) tabulated-list-column-name "Archive" tabulated-list-id #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) tabulated-list-entry [("indent-guide" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) action package-menu-describe-package) #("20160630" 0 8 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa-stable" 0 12 (font-lock-face package-status-available)) #("show vertical lines to guide indentation" 0 40 (font-lock-face package-description))]) 74 75 (tabulated-list-column-name "Archive" tabulated-list-id #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) tabulated-list-entry [("indent-guide" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) action package-menu-describe-package) #("20160630" 0 8 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa-stable" 0 12 (font-lock-face package-status-available)) #("show vertical lines to guide indentation" 0 40 (font-lock-face package-description))]) 75 115 (font-lock-face package-description help-echo #("Description: show vertical lines to guide indentation" 13 53 (font-lock-face package-description)) tabulated-list-column-name "Description" tabulated-list-id #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) tabulated-list-entry [("indent-guide" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) action package-menu-describe-package) #("20160630" 0 8 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa-stable" 0 12 (font-lock-face package-status-available)) #("show vertical lines to guide indentation" 0 40 (font-lock-face package-description))])) "scheme[SchemeNorm][ColBg" #("scheme[SchemeNorm][ColB" 0 23 (ivy-index 8)) #(" 	XSetForeground(dpy, drw->gc, scheme[SchemeNorm][ColBg].pixel);" 0 1 (swiper-line-number 2761 display "2761 ") 1 2 (fontified t c-is-sws t) 2 3 (c-is-sws t fontified t) 3 49 (fontified t) 49 50 (fontified t) 50 51 (fontified t) 51 52 (fontified t) 52 53 (fontified t) 53 54 (fontified t) 54 55 (fontified t) 55 56 (fontified t) 56 57 (fontified t) 57 58 (fontified t) 58 59 (fontified t) 59 60 (fontified t) 60 61 (fontified t) 61 62 (fontified t) 62 63 (fontified t) 63 64 (fontified t rear-nonsticky t)) #("updatesys" 0 9 (ivy-index 18)) #(" updatesystray(void)" 0 1 (swiper-line-number 2700 display "2700 ") 1 14 (fontified t face font-lock-function-name-face) 14 15 (fontified t c-type c-decl-arg-start) 15 19 (fontified t face font-lock-type-face) 19 20 (fontified t)) #("mai" 0 3 (ivy-index 0)) #(" main(int argc, char *argv[])" 0 1 (swiper-line-number 814 display "814 ") 1 5 (fontified t face font-lock-function-name-face) 5 6 (fontified t c-type c-decl-arg-start) 6 9 (fontified t face font-lock-type-face) 9 10 (fontified t) 10 14 (fontified t face font-lock-variable-name-face) 14 15 (fontified t c-type c-decl-arg-start) 15 16 (fontified t) 16 20 (fontified t face font-lock-type-face) 20 22 (fontified t) 22 26 (fontified t face font-lock-variable-name-face) 26 29 (fontified t))))
(setq ido-buffer-history '("sl-wttr.sh" "*Python*" "config.def.h" "*terminal*" "dmenu-docker-images" "dmenu-power" "dmenu-atalhos-programas" "equacao_segundo_grau.py" "media_aritimetica_3_valores.py" "calcula_raiz_de_3_numeros.py" "teste.py" "*Elpy Config*" "*Customize Option: Python Flymake Command*" "if_monitor.sh" "*ansi-term*" "dmenu-teclados" "config.def.h<slstatus>" "tabela_funcionarios.sql" "aula001.sql" "banco-inicial.sql" "*SQL: Postgres*" "dmenu-docker-compose.sh" "HELLO" "index.theme" "icon-theme.cache" "]" "action-unavailable-symbolic.svg" "autostart.sh" "dmenu-window" "battery_status.sh" "emacs.org" "init.el" "dunstrc" "*Compile-Log*" "picom.conf" "index.html" "config.mk" "Untitled<2>" "Untitled<3>" "Untitled" "myinit.org" "config" "muta_microfone" "config.def.h<.dwm>" "block-battery" "dwmbar-powerline" "diminui_volume" "muta_volume" "*scratch*" "*Messages*" "*Async-native-compile-log*" "*Warnings*" "magit-process: .dotfiles" "magit: .dotfiles" "volume_icon.sh" "app.js" "x.c" "x.c.rej" "config.def.h.rej" "config.def.h<st>"))
(setq file-name-history '(#("/home/anderson/.dwm/autostart.sh" 0 32 (ivy-index 0)) #("/home/anderson/.config/slstatus/" 0 32 (ivy-index 0)) #("/home/anderson/git/Educacional/UFPR_Estatistica/CE301_Estatistica_Basica/100-graficos-tabelas-uni.R" 0 99 (ivy-index 14)) #("/home/anderson/git/Educacional/UFPR_Estatistica/CE301_Estatistica_Basica/Livro_Estatitica_Basica/testes.r" 0 105 (ivy-index 0)) #("/home/anderson/git/Educacional/UFPR_Estatistica/CE301_Estatistica_Basica/" 0 73 (ivy-index 4)) #("/var/spool/cron/crontabs/anderson" 0 33 (ivy-index 0)) #("/var/spool/cron/crontabs/" 0 25 (ivy-index 2)) "/tmp/crontab.uSJaXd/crontab" "/tmp/crontab.vtEVge/crontab" "/home/anderson/.dotfiles/.local/bin/sl-wttr.sh~" #("/home/anderson/.dotfiles/.config/slstatus/" 0 42 (ivy-index 1)) #("/home/anderson/git/Educacional/UFPR_Estatistica/CE301_Estatistica_Basica/101-medidas-uni.R" 0 90 (ivy-index 0)) #("/home/anderson/.dwm/config.def.h" 0 32 (ivy-index 0)) #("/home/anderson/.emacs.d/emacs.org" 0 33 (ivy-index 12)) "/home/anderson/.emacs.d/init.el" #("/home/anderson/git/Educacional/Programa_Desenvolve_Boticario/008_Postgres_views_funcoes_consultas/dados-aula-2.sql" 0 114 (ivy-index 5)) #("/home/anderson/git/Educacional/UFPR_Estatistica/CI182_Fundamentos_Programacao_Computadores/calcula_raiz_de_3_numeros.py" 0 119 (ivy-index 0)) "~/.emacs.d/emacs.org" #("/home/anderson/.dotfiles/.config/slstatus/config.def.h" 0 54 (ivy-index 0)) #("/home/anderson/.local/bin/battery_status.sh" 0 43 (ivy-index 1)) #("/home/anderson/teste.py" 0 23 (ivy-index 0)) #("/home/anderson/.dotfiles/.local/bin/dmenu/" 0 42 (ivy-index 2)) #("/home/anderson/.dotfiles/.local/bin/dmenu/dmenu-docker-lista-funcionando" 0 72 (ivy-index 0)) #("/home/anderson/.dotfiles/.local/bin/dmenu/dmenu-atalhos-programas" 0 65 (ivy-index 0)) #("/home/anderson/.dotfiles/.local/bin/dmenu/dmenu-docker-images" 0 61 (ivy-index 4)) #("/home/anderson/dmenu-docker-compose.sh" 0 38 (ivy-index 2)) #("/home/anderson/.dotfiles/.dwm/config.def.h" 0 42 (ivy-index 0)) "/home/anderson/.emacs.d/myinit.org" #("/home/anderson/git/Educacional/Programa_Desenvolve_Boticario/007_PostgreSQL/tabela_funcionarios.sql" 0 99 (ivy-index 9)) "/home/anderson/.dotfiles/.config/dunst/dunstrc" #("/home/anderson/.local/bin/volume_icon.sh" 0 40 (ivy-index 6)) #("/home/anderson/git/Educacional/Programa_Desenvolve_Boticario/006_Git_Github/projeto_inicial/index.html" 0 102 (ivy-index 7)) #("/home/anderson/git/Educacional/Programa_Desenvolve_Boticario/006_Git_Github/projeto_inicial/app.js" 0 98 (ivy-index 3)) #("/home/anderson/.config/picom.conf" 0 33 (ivy-index 3)) #("/home/anderson/.dotfiles/.dwm/" 0 30 (ivy-index 0)) #("/home/anderson/.dotfiles/.Xresources" 0 36 (ivy-index 0)) #("/home/anderson/.config/st/config.def.h" 0 38 (ivy-index 0)) "~/.dotfiles/.emacs.d/init.el"))
(setq projectile-project-command-history '#s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data ()))
(setq kill-ring '(#("$iconCam " 0 9 (fontified t face font-lock-string-face)) #("b#282828^^c#fb4934^" 0 1 (fontified t face font-lock-string-face) 1 8 (fontified t face ((:foreground "white") (:background "#282828"))) 8 11 (fontified t face font-lock-string-face) 11 18 (fontified t face ((:foreground "white") (:background "#fb4934"))) 18 19 (fontified t face font-lock-string-face)) #("if [ -z \"$camera\" ]; then
    iconCam=\"\"
else
    iconCam=\"\"" 0 2 (fontified t face font-lock-keyword-face) 2 8 (fontified t) 8 17 (fontified t face font-lock-string-face) 17 18 (fontified t) 18 21 (fontified t) 21 25 (fontified t face font-lock-keyword-face) 25 26 (fontified t) 26 30 (fontified t) 30 37 (fontified t face font-lock-variable-name-face) 37 38 (fontified t) 38 40 (fontified t face font-lock-string-face) 40 41 (fontified t) 41 45 (fontified t face font-lock-keyword-face) 45 46 (fontified t) 46 50 (fontified t) 50 57 (fontified t face font-lock-variable-name-face) 57 58 (fontified t) 58 59 (fontified t face font-lock-string-face) 59 60 (rear-nonsticky t fontified t face font-lock-string-face) 60 61 (fontified t face font-lock-string-face)) #("camera=$(fuser /dev/video0)" 0 6 (fontified t face font-lock-variable-name-face) 6 9 (fontified t) 9 12 (fontified t face sh-quoted-exec) 12 26 (fontified t face sh-quoted-exec) 26 27 (fontified t)) "" "fuser /dev/video0
" "A9w@arM4AY3u*%" #("    print('As médias calculadas foram:\\n\\t'
          '- Média Aritimética {0}\\n\\t'
          '- Média Ponderada {1}\\n\\t'
          '- Média Harmônica {2}'.format(
              round(mediaAritimetica, 2),
              round(mediaPonderada, 2),
              round(mediaHarmonica, 2)))" 0 4 (fontified t) 4 9 (face font-lock-builtin-face fontified t) 9 10 (fontified t) 10 11 (face font-lock-string-face fontified t) 11 42 (face font-lock-string-face fontified t) 42 43 (face font-lock-string-face fontified t) 43 44 (fontified t) 44 54 (fontified t) 54 55 (face font-lock-string-face fontified t) 55 82 (face font-lock-string-face fontified t) 82 83 (face font-lock-string-face fontified t) 83 84 (fontified t) 84 94 (fontified t) 94 95 (face font-lock-string-face fontified t) 95 120 (face font-lock-string-face fontified t) 120 121 (face font-lock-string-face fontified t) 121 122 (fontified t) 122 132 (fontified t) 132 133 (face font-lock-string-face fontified t) 133 139 (face font-lock-string-face fontified t) 139 154 (face font-lock-string-face fontified t) 154 155 (face font-lock-string-face fontified t) 155 156 (fontified t) 156 162 (face font-lock-builtin-face fontified t) 162 164 (fontified t) 164 178 (fontified t) 178 183 (face font-lock-builtin-face fontified t) 183 206 (fontified t) 206 220 (fontified t) 220 225 (face font-lock-builtin-face fontified t) 225 246 (fontified t) 246 260 (fontified t) 260 265 (face font-lock-builtin-face fontified t) 265 286 (fontified t)) #("print('O texto informado possui {0} caracteres'.format(tamanhoTexto))" 0 5 (fontified t face font-lock-builtin-face) 5 6 (fontified t) 6 47 (fontified t face font-lock-string-face) 47 48 (fontified t) 48 54 (fontified t face font-lock-builtin-face) 54 69 (fontified t)) #("print('O texto informado possui {0} caracteres'.format(tamanhoTexto))" 0 5 (fontified t face font-lock-builtin-face) 5 6 (fontified t) 6 47 (fontified t face font-lock-string-face) 47 48 (fontified t) 48 54 (fontified t face font-lock-builtin-face) 54 69 (fontified t)) "(setq python-indent-guess-indent-offset t)  
(setq python-indent-guess-indent-offset-verbose nil)" #("title=$(mpc -f %title% current)" 0 1 (fontified t face font-lock-variable-name-face) 1 2 (fontified t face font-lock-variable-name-face) 2 3 (fontified t face font-lock-variable-name-face) 3 4 (fontified t face font-lock-variable-name-face) 4 5 (fontified t face font-lock-variable-name-face) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t face sh-quoted-exec) 9 10 (fontified t face sh-quoted-exec) 10 11 (fontified t face sh-quoted-exec) 11 12 (fontified t face sh-quoted-exec) 12 13 (fontified t face sh-quoted-exec) 13 14 (fontified t face sh-quoted-exec) 14 15 (fontified t face sh-quoted-exec) 15 16 (fontified t face sh-quoted-exec) 16 17 (fontified t face sh-quoted-exec) 17 18 (fontified t face sh-quoted-exec) 18 19 (fontified t face sh-quoted-exec) 19 20 (fontified t face sh-quoted-exec) 20 21 (fontified t face sh-quoted-exec) 21 22 (fontified t face sh-quoted-exec) 22 23 (fontified t face sh-quoted-exec) 23 24 (fontified t face sh-quoted-exec) 24 25 (fontified t face sh-quoted-exec) 25 26 (fontified t face sh-quoted-exec) 26 27 (fontified t face sh-quoted-exec) 27 28 (fontified t face sh-quoted-exec) 28 29 (fontified t face sh-quoted-exec) 29 30 (fontified t face sh-quoted-exec) 30 31 (fontified t)) "playing" "mpc status %state%
" "Escreva programa que pergunte a distância em km que um passageiro deseja per-
correr e calcule o preço da passagem, cobrando R$ 0,53 por km para viagens de até 200
km e R$ 0,47/km para viagens mais longas." #("#!/usr/bin/env python3
# coding=utf8
# ----------------------------------------------------------------------------
# Created By  : Anderson José de Souza Inácio
# Created Date: 2024-03-13
# version ='1.0'
# ---------------------------------------------------------------------------
\"\"\" Curso Estatística 2024 UFPR
Disciplina CI182 Fundamentos de Programacao de Computadores
Aula 4 Exercício 6.7 - 5 credito

Um banco concedera um credito especial aos seus clientes, variavel com o saldo
medio no ultimo ano. Faca um programa que leia o saldo medio de um cliente e
calcule o valor do credito de acordo com a tabela abaixo. Mostre uma mensagem
informando o saldo medio e o valor do credito.

Saldo medio         Percentual
-------------------------------------------------------
de 0 a 200          nenhum credito
de 201 a 400        20% do valor do saldo medio
de 401 a 600        30% do valor do saldo medio
acima de 601        40% do valor do saldo medio
\"\"\"
# ---------------------------------------------------------------------------
# Import
# ---------------------------------------------------------------------------
# from string import *
# import math
" 0 1 (face font-lock-comment-delimiter-face fontified t) 1 23 (face font-lock-comment-face fontified t) 23 25 (face font-lock-comment-delimiter-face fontified t) 25 37 (face font-lock-comment-face fontified t) 37 39 (face font-lock-comment-delimiter-face fontified t) 39 116 (face font-lock-comment-face fontified t) 116 118 (face font-lock-comment-delimiter-face fontified t) 118 162 (face font-lock-comment-face fontified t) 162 164 (face font-lock-comment-delimiter-face fontified t) 164 189 (face font-lock-comment-face fontified t) 189 191 (face font-lock-comment-delimiter-face fontified t) 191 206 (face font-lock-comment-face fontified t) 206 208 (face font-lock-comment-delimiter-face fontified t) 208 284 (face font-lock-comment-face fontified t) 284 286 (face font-lock-doc-face fontified t) 286 287 (face font-lock-doc-face syntax-table (15) fontified t) 287 376 (face font-lock-doc-face fontified t) 376 409 (face font-lock-doc-face fontified t) 409 410 (face font-lock-doc-face fontified t) 410 489 (face font-lock-doc-face fontified t) 489 566 (face font-lock-doc-face fontified t) 566 574 (face font-lock-doc-face fontified t) 574 644 (face font-lock-doc-face fontified t) 644 657 (face font-lock-doc-face fontified t) 657 689 (face font-lock-doc-face fontified t) 689 690 (face font-lock-doc-face fontified t rear-nonsticky t) 690 691 (face font-lock-doc-face fontified t) 691 692 (face font-lock-doc-face fontified t) 692 712 (face font-lock-doc-face fontified t) 712 723 (face font-lock-doc-face fontified t) 723 778 (face font-lock-doc-face fontified t) 778 779 (face font-lock-doc-face fontified t) 779 799 (face font-lock-doc-face fontified t) 799 812 (face font-lock-doc-face fontified t) 812 813 (face font-lock-doc-face fontified t rear-nonsticky t) 813 814 (face font-lock-doc-face fontified t) 814 834 (face font-lock-doc-face fontified t) 834 860 (face font-lock-doc-face fontified t) 860 861 (face font-lock-doc-face fontified t rear-nonsticky t) 861 862 (face font-lock-doc-face fontified t) 862 882 (face font-lock-doc-face fontified t) 882 908 (face font-lock-doc-face fontified t) 908 909 (face font-lock-doc-face fontified t rear-nonsticky t) 909 910 (face font-lock-doc-face fontified t) 910 930 (face font-lock-doc-face fontified t) 930 956 (face font-lock-doc-face fontified t) 956 957 (face font-lock-doc-face fontified t rear-nonsticky t) 957 958 (face font-lock-doc-face fontified t) 958 959 (face font-lock-doc-face fontified t syntax-table (15)) 959 961 (face font-lock-doc-face fontified t) 961 962 (fontified t) 962 964 (face font-lock-comment-delimiter-face fontified t) 964 1040 (face font-lock-comment-face fontified t) 1040 1042 (face font-lock-comment-delimiter-face fontified t) 1042 1049 (face font-lock-comment-face fontified t) 1049 1051 (face font-lock-comment-delimiter-face fontified t) 1051 1127 (face font-lock-comment-face fontified t) 1127 1129 (face font-lock-comment-delimiter-face fontified t) 1129 1150 (face font-lock-comment-face fontified t) 1150 1152 (face font-lock-comment-delimiter-face fontified t) 1152 1158 (face font-lock-comment-face fontified t) 1158 1163 (face font-lock-comment-face fontified t) 1163 1164 (face font-lock-comment-face fontified t rear-nonsticky t)) #("
print('Com seu saldo médio de R${0}, você pode conseguir crédito de até R${1}'.
      format(round(saldoMedio, 2), round(credito, 2)))" 0 1 (fontified t) 1 6 (face font-lock-builtin-face fontified t) 6 7 (fontified t) 7 79 (face font-lock-string-face fontified t) 79 81 (fontified t) 81 87 (fontified t) 87 93 (face font-lock-builtin-face fontified t) 93 94 (fontified t) 94 99 (face font-lock-builtin-face fontified t) 99 100 (fontified t) 100 115 (fontified t) 115 116 (fontified t) 116 121 (face font-lock-builtin-face fontified t) 121 133 (fontified t) 133 134 (fontified t) 134 135 (fontified t)) #("if (saldoMedio > 200 and saldoMedio <= 400):
    credito = 20
" 0 2 (face font-lock-keyword-face fontified t) 2 4 (fontified t) 4 21 (fontified t) 21 24 (face font-lock-keyword-face fontified t) 24 25 (fontified t) 25 42 (fontified t) 42 45 (fontified t) 45 49 (fontified t) 49 56 (face font-lock-variable-name-face fontified t) 56 62 (fontified t)) #("40% do valor do saldo médio" 0 27 (face font-lock-doc-face fontified t) 27 28 (face font-lock-doc-face fontified t rear-nonsticky t)) #("30% do valor do saldo médio" 0 28 (face font-lock-doc-face fontified t)) #("20% do valor do saldo médio" 0 28 (face font-lock-doc-face fontified t)) #("nenhum crédito" 0 14 (face font-lock-doc-face fontified t) 14 15 (face font-lock-doc-face fontified t rear-nonsticky t)) #("Percentual
nenhum crédito" 0 26 (face font-lock-doc-face fontified t)) "Saldo médio
de 0 a 200
de 201 a 400
de 401 a 600
acima de 601
Percentual
nenhum crédito
20% do valor do saldo médio
30% do valor do saldo médio
40% do valor do saldo médio" "Um banco concederá um crédito especial aos seus clientes, variável com o saldo
médio no último ano. Faça um programa que leia o saldo médio de um cliente e calcule
o valor do crédito de acordo com a tabela abaixo. Mostre uma mensagem informando o
saldo médio e o valor do crédito." #("#!/usr/bin/env python3
# coding=utf8
# ----------------------------------------------------------------------------
# Created By  : Anderson José de Souza Inácio
# Created Date: 2024-03-13
# version ='1.0'
# ---------------------------------------------------------------------------
\"\"\" Curso Estatística 2024 UFPR
Disciplina CI182 Fundamentos de Programacao de Computadores
Aula 4 Exercício 6.7 - 4 pesoideal

Tendo como dados de entrada a altura e o sexo de uma pessoa (M masculino
e F feminino), construa um programa que calcule seu peso ideal, utilizando
as seguintes formulas:
• para homens: (72.7 ∗ h) − 58
• para mulheres: (62.1 ∗ h) − 44.7
\"\"\"
# ---------------------------------------------------------------------------
# Import
# ---------------------------------------------------------------------------
# from string import *
# import math

" 0 1 (face font-lock-comment-delimiter-face fontified t) 1 23 (face font-lock-comment-face fontified t) 23 25 (face font-lock-comment-delimiter-face fontified t) 25 37 (face font-lock-comment-face fontified t) 37 39 (face font-lock-comment-delimiter-face fontified t) 39 116 (face font-lock-comment-face fontified t) 116 118 (face font-lock-comment-delimiter-face fontified t) 118 162 (face font-lock-comment-face fontified t) 162 164 (face font-lock-comment-delimiter-face fontified t) 164 189 (face font-lock-comment-face fontified t) 189 191 (face font-lock-comment-delimiter-face fontified t) 191 206 (face font-lock-comment-face fontified t) 206 208 (face font-lock-comment-delimiter-face fontified t) 208 284 (face font-lock-comment-face fontified t) 284 286 (face font-lock-doc-face fontified t) 286 287 (face font-lock-doc-face syntax-table (15) fontified t) 287 376 (face font-lock-doc-face fontified t) 376 411 (face font-lock-doc-face fontified t) 411 412 (face font-lock-doc-face fontified t) 412 485 (face font-lock-doc-face fontified t) 485 560 (face font-lock-doc-face fontified t) 560 573 (face font-lock-doc-face fontified t) 573 583 (face font-lock-doc-face fontified t) 583 647 (face font-lock-doc-face fontified t) 647 648 (face font-lock-doc-face fontified t rear-nonsticky t) 648 649 (face font-lock-doc-face fontified t) 649 650 (face font-lock-doc-face fontified t syntax-table (15)) 650 652 (face font-lock-doc-face fontified t) 652 653 (fontified t) 653 655 (face font-lock-comment-delimiter-face fontified t) 655 731 (face font-lock-comment-face fontified t) 731 733 (face font-lock-comment-delimiter-face fontified t) 733 740 (face font-lock-comment-face fontified t) 740 742 (face font-lock-comment-delimiter-face fontified t) 742 818 (face font-lock-comment-face fontified t) 818 820 (face font-lock-comment-delimiter-face fontified t) 820 841 (face font-lock-comment-face fontified t) 841 843 (face font-lock-comment-delimiter-face fontified t) 843 849 (face font-lock-comment-face fontified t) 849 854 (face font-lock-comment-face fontified t) 854 855 (face font-lock-comment-face fontified t rear-nonsticky t) 855 856 (fontified t)) #("(sexo.upper == 'F'" 0 1 (fontified t) 1 15 (fontified t) 15 18 (face font-lock-string-face fontified t)) "Tendo como dados de entrada a altura e o sexo de uma pessoa (M masculino
e F feminino), construa um programa que calcule seu peso ideal, utilizando as seguintes
fórmulas:
• para homens: (72.7 ∗ h) − 58
• para mulheres: (62.1 ∗ h) − 44.7" #("#!/usr/bin/env python3
# coding=utf8
# ----------------------------------------------------------------------------
# Created By  : Anderson José de Souza Inácio
# Created Date: 2024-03-13
# version ='1.0'
# ---------------------------------------------------------------------------
\"\"\" Curso Estatística 2024 UFPR
Disciplina CI182 Fundamentos de Programacao de Computadores
Aula 4 Exercício 6.7 - 3 achamaior

Escreva um programa que leia 3 números inteiros e mostre o maior deles.
\"\"\"
# ---------------------------------------------------------------------------
# Import
# ---------------------------------------------------------------------------
# from string import *
# import math
" 0 1 (face font-lock-comment-delimiter-face fontified t) 1 23 (face font-lock-comment-face fontified t) 23 25 (face font-lock-comment-delimiter-face fontified t) 25 37 (face font-lock-comment-face fontified t) 37 39 (face font-lock-comment-delimiter-face fontified t) 39 116 (face font-lock-comment-face fontified t) 116 118 (face font-lock-comment-delimiter-face fontified t) 118 162 (face font-lock-comment-face fontified t) 162 164 (face font-lock-comment-delimiter-face fontified t) 164 189 (face font-lock-comment-face fontified t) 189 191 (face font-lock-comment-delimiter-face fontified t) 191 206 (face font-lock-comment-face fontified t) 206 208 (face font-lock-comment-delimiter-face fontified t) 208 284 (face font-lock-comment-face fontified t) 284 286 (face font-lock-doc-face fontified t) 286 287 (face font-lock-doc-face syntax-table (15) fontified t) 287 376 (face font-lock-doc-face fontified t) 376 411 (face font-lock-doc-face fontified t) 411 412 (face font-lock-doc-face fontified t) 412 483 (face font-lock-doc-face fontified t) 483 484 (face font-lock-doc-face fontified t rear-nonsticky t) 484 485 (face font-lock-doc-face fontified t) 485 486 (face font-lock-doc-face fontified t syntax-table (15)) 486 488 (face font-lock-doc-face fontified t) 488 489 (fontified t) 489 491 (face font-lock-comment-delimiter-face fontified t) 491 567 (face font-lock-comment-face fontified t) 567 569 (face font-lock-comment-delimiter-face fontified t) 569 576 (face font-lock-comment-face fontified t) 576 578 (face font-lock-comment-delimiter-face fontified t) 578 654 (face font-lock-comment-face fontified t) 654 656 (face font-lock-comment-delimiter-face fontified t) 656 677 (face font-lock-comment-face fontified t) 677 679 (face font-lock-comment-delimiter-face fontified t) 679 685 (face font-lock-comment-face fontified t) 685 691 (face font-lock-comment-face fontified t)) #("maior = num1 if num1 > num2 and num1 > num3 else 0" 0 5 (face font-lock-variable-name-face fontified t) 5 13 (fontified t) 13 15 (face font-lock-keyword-face fontified t) 15 28 (fontified t) 28 31 (face font-lock-keyword-face fontified t) 31 44 (fontified t) 44 48 (face font-lock-keyword-face fontified t) 48 50 (fontified t)) #("nota1 = int(input('Informe o valor da nota 1: '))
nota2 = int(input('Informe o valor da nota 2: '))
nota3 = int(input('Informe o valor da nota 3: '))
" 0 5 (face font-lock-variable-name-face fontified t) 5 8 (fontified t) 8 11 (face font-lock-builtin-face fontified t) 11 12 (fontified t) 12 17 (face font-lock-builtin-face fontified t) 17 18 (fontified t) 18 47 (face font-lock-string-face fontified t) 47 48 (fontified t) 48 50 (fontified t) 50 55 (face font-lock-variable-name-face fontified t) 55 56 (fontified t) 56 58 (fontified t) 58 61 (face font-lock-builtin-face fontified t) 61 62 (fontified t) 62 67 (face font-lock-builtin-face fontified t) 67 68 (fontified t) 68 97 (face font-lock-string-face fontified t) 97 98 (fontified t) 98 99 (fontified t rear-nonsticky t) 99 100 (fontified t) 100 105 (face font-lock-variable-name-face fontified t) 105 108 (fontified t) 108 111 (face font-lock-builtin-face fontified t) 111 112 (fontified t) 112 117 (face font-lock-builtin-face fontified t) 117 118 (fontified t) 118 147 (face font-lock-string-face fontified t) 147 148 (fontified t) 148 149 (fontified t rear-nonsticky t) 149 150 (fontified t)) "Escreva um programa que leia 3 números inteiros e mostre o maior deles." #("#!/usr/bin/env python3
# coding=utf8
# ----------------------------------------------------------------------------
# Created By  : Anderson José de Souza Inácio
# Created Date: 2024-03-13
# version ='1.0'
# ---------------------------------------------------------------------------
\"\"\" Curso Estatística 2024 UFPR
Disciplina CI182 Fundamentos de Programacao de Computadores
Aula 4 Exercício 6.7 - 2 medias

Um usuario deseja um programa onde possa escolher que tipo de media deseja
calcular a partir de 3 notas. Faca um programa que leia as notas, a opcao
escolhida pelo usuario e calcule as medias:
• aritmetica
• ponderada (pesos 3, 3 e 4)
• harmonica (definida como sendo o numero de termos dividido pela soma dos
inversos de cada termo)
\"\"\"
# ---------------------------------------------------------------------------
# Import
# ---------------------------------------------------------------------------
# from string import *
import math
" 0 1 (face font-lock-comment-delimiter-face fontified t) 1 23 (face font-lock-comment-face fontified t) 23 25 (face font-lock-comment-delimiter-face fontified t) 25 37 (face font-lock-comment-face fontified t) 37 39 (face font-lock-comment-delimiter-face fontified t) 39 116 (face font-lock-comment-face fontified t) 116 118 (face font-lock-comment-delimiter-face fontified t) 118 162 (face font-lock-comment-face fontified t) 162 164 (face font-lock-comment-delimiter-face fontified t) 164 189 (face font-lock-comment-face fontified t) 189 191 (face font-lock-comment-delimiter-face fontified t) 191 206 (face font-lock-comment-face fontified t) 206 208 (face font-lock-comment-delimiter-face fontified t) 208 284 (face font-lock-comment-face fontified t) 284 286 (face font-lock-doc-face fontified t) 286 287 (face font-lock-doc-face syntax-table (15) fontified t) 287 376 (face font-lock-doc-face fontified t) 376 408 (face font-lock-doc-face fontified t) 408 409 (face font-lock-doc-face fontified t) 409 484 (face font-lock-doc-face fontified t) 484 558 (face font-lock-doc-face fontified t) 558 573 (face font-lock-doc-face fontified t) 573 602 (face font-lock-doc-face fontified t) 602 615 (face font-lock-doc-face fontified t) 615 644 (face font-lock-doc-face fontified t) 644 719 (face font-lock-doc-face fontified t) 719 728 (face font-lock-doc-face fontified t) 728 741 (face font-lock-doc-face fontified t) 741 742 (face font-lock-doc-face fontified t rear-nonsticky t) 742 743 (face font-lock-doc-face fontified t) 743 744 (face font-lock-doc-face fontified t syntax-table (15)) 744 746 (face font-lock-doc-face fontified t) 746 747 (fontified t) 747 749 (face font-lock-comment-delimiter-face fontified t) 749 825 (face font-lock-comment-face fontified t) 825 827 (face font-lock-comment-delimiter-face fontified t) 827 834 (face font-lock-comment-face fontified t) 834 836 (face font-lock-comment-delimiter-face fontified t) 836 912 (face font-lock-comment-face fontified t) 912 914 (face font-lock-comment-delimiter-face fontified t) 914 935 (face font-lock-comment-face fontified t) 935 941 (face font-lock-keyword-face fontified t) 941 946 (fontified t) 946 947 (fontified t rear-nonsticky t)) #("(((mmc/nota1)+(mmc/nota2)+(mmc/nota3))/mmc)" 0 3 (fontified t) 3 7 (fontified t) 7 12 (fontified t) 12 15 (fontified t) 15 19 (fontified t) 19 24 (fontified t) 24 27 (fontified t) 27 31 (fontified t) 31 36 (fontified t) 36 43 (fontified t)) #("nota1 = float(input('Informe o valor da nota 1: '))" 0 5 (face font-lock-variable-name-face fontified t) 5 8 (fontified t) 8 13 (face font-lock-builtin-face fontified t) 13 14 (fontified t) 14 19 (face font-lock-builtin-face fontified t) 19 20 (fontified t) 20 49 (face font-lock-string-face fontified t) 49 50 (fontified t) 50 51 (fontified t)) "Um usuário deseja um programa onde possa escolher que tipo de média deseja
calcular a partir de 3 notas. Faça um programa que leia as notas, a opção escolhida pelo
usuário e calcule as médias:
• aritmética
• ponderada (pesos 3, 3 e 4)
• harmônica (definida como sendo o número de termos dividido pela soma dos inversos
de cada termo)" #("#!/usr/bin/env python3
# coding=utf8
# ----------------------------------------------------------------------------
# Created By  : Anderson José de Souza Inácio
# Created Date: 2024-03-13
# version ='1.0'
# ---------------------------------------------------------------------------
\"\"\" Curso Estatística 2024 UFPR
Disciplina CI182 Fundamentos de Programacao de Computadores
Aula 4 Exercício 6.6 - 2 multiplos

Elaborar um programa que le 2 valores a e b e os escreve com a mensagem:
“Sao multiplos” ou “Nao sao multiplos”.
\"\"\"
# ---------------------------------------------------------------------------
# Import
# ---------------------------------------------------------------------------
# from string import *
# import math
" 0 1 (face font-lock-comment-delimiter-face fontified t) 1 23 (face font-lock-comment-face fontified t) 23 25 (face font-lock-comment-delimiter-face fontified t) 25 37 (face font-lock-comment-face fontified t) 37 39 (face font-lock-comment-delimiter-face fontified t) 39 116 (face font-lock-comment-face fontified t) 116 118 (face font-lock-comment-delimiter-face fontified t) 118 162 (face font-lock-comment-face fontified t) 162 164 (face font-lock-comment-delimiter-face fontified t) 164 189 (face font-lock-comment-face fontified t) 189 191 (face font-lock-comment-delimiter-face fontified t) 191 206 (face font-lock-comment-face fontified t) 206 208 (face font-lock-comment-delimiter-face fontified t) 208 284 (face font-lock-comment-face fontified t) 284 286 (face font-lock-doc-face fontified t) 286 287 (face font-lock-doc-face syntax-table (15) fontified t) 287 376 (face font-lock-doc-face fontified t) 376 411 (face font-lock-doc-face fontified t) 411 412 (face font-lock-doc-face fontified t) 412 485 (face font-lock-doc-face fontified t) 485 523 (face font-lock-doc-face fontified t) 523 524 (face font-lock-doc-face fontified t rear-nonsticky t) 524 525 (face font-lock-doc-face fontified t) 525 526 (face font-lock-doc-face fontified t syntax-table (15)) 526 528 (face font-lock-doc-face fontified t) 528 529 (fontified t) 529 531 (face font-lock-comment-delimiter-face fontified t) 531 607 (face font-lock-comment-face fontified t) 607 609 (face font-lock-comment-delimiter-face fontified t) 609 616 (face font-lock-comment-face fontified t) 616 618 (face font-lock-comment-delimiter-face fontified t) 618 694 (face font-lock-comment-face fontified t) 694 696 (face font-lock-comment-delimiter-face fontified t) 696 717 (face font-lock-comment-face fontified t) 717 719 (face font-lock-comment-delimiter-face fontified t) 719 725 (face font-lock-comment-face fontified t) 725 731 (face font-lock-comment-face fontified t)) #("    multiplo = valorA * i
    if (multiplo == valorB):
        isMultiplos = True
        break" 0 4 (fontified t) 4 12 (face font-lock-variable-name-face fontified t) 12 26 (fontified t) 26 30 (fontified t) 30 32 (face font-lock-keyword-face fontified t) 32 33 (fontified t) 33 34 (fontified t) 34 42 (fontified t) 42 55 (fontified t) 55 63 (fontified t) 63 74 (face font-lock-variable-name-face fontified t) 74 77 (fontified t) 77 81 (face font-lock-constant-face fontified t) 81 82 (fontified t) 82 90 (fontified t) 90 95 (face font-lock-keyword-face fontified t)) #("for i in range(1, 100):
    multiplo = valorA * i
    if (multiplo == valorB):
        isMultiplos = True
        break
" 0 3 (face font-lock-keyword-face fontified t) 3 4 (fontified t) 4 6 (fontified t) 6 8 (face font-lock-keyword-face fontified t) 8 9 (fontified t) 9 14 (face font-lock-builtin-face fontified t) 14 21 (fontified t) 21 24 (fontified t) 24 28 (fontified t) 28 36 (face font-lock-variable-name-face fontified t) 36 50 (fontified t) 50 54 (fontified t) 54 56 (face font-lock-keyword-face fontified t) 56 57 (fontified t) 57 58 (fontified t) 58 66 (fontified t) 66 79 (fontified t) 79 87 (fontified t) 87 98 (face font-lock-variable-name-face fontified t) 98 101 (fontified t) 101 105 (face font-lock-constant-face fontified t) 105 106 (fontified t) 106 114 (fontified t) 114 119 (face font-lock-keyword-face fontified t) 119 120 (fontified t)) "Elaborar um programa que lê 2 valores a e b e os escreve com a mensagem:
“São múltiplos” ou “Não são múltiplos”." #("#!/usr/bin/env python3
# coding=utf8
# ----------------------------------------------------------------------------
# Created By  : Anderson José de Souza Inácio
# Created Date: 2024-03-13
# version ='1.0'
# ---------------------------------------------------------------------------
\"\"\" Curso Estatística 2024 UFPR
Disciplina CI182 Fundamentos de Programacao de Computadores
Aula 4 Exercício 6.6 - 1 notas

Escreva um programa que leia o codigo de um aluno e suas tres notas. Calcule a
media ponderada do aluno, considerando que o peso para a maior nota seja 4 e
para as duas restantes, 3. Mostre o codigo do aluno, suas tres notas,
a media calculada e uma mensagem ”APROVADO” se a media for maior ou igual a
5 e ”REPROVADO” se a media for menor que 5.
\"\"\"
# ---------------------------------------------------------------------------
# Import
# ---------------------------------------------------------------------------
# from string import *
# import math
" 0 1 (face font-lock-comment-delimiter-face fontified t) 1 23 (face font-lock-comment-face fontified t) 23 25 (face font-lock-comment-delimiter-face fontified t) 25 37 (face font-lock-comment-face fontified t) 37 39 (face font-lock-comment-delimiter-face fontified t) 39 116 (face font-lock-comment-face fontified t) 116 118 (face font-lock-comment-delimiter-face fontified t) 118 162 (face font-lock-comment-face fontified t) 162 164 (face font-lock-comment-delimiter-face fontified t) 164 189 (face font-lock-comment-face fontified t) 189 191 (face font-lock-comment-delimiter-face fontified t) 191 206 (face font-lock-comment-face fontified t) 206 208 (face font-lock-comment-delimiter-face fontified t) 208 284 (face font-lock-comment-face fontified t) 284 286 (face font-lock-doc-face fontified t) 286 287 (face font-lock-doc-face syntax-table (15) fontified t) 287 376 (face font-lock-doc-face fontified t) 376 407 (face font-lock-doc-face fontified t) 407 408 (face font-lock-doc-face fontified t) 408 487 (face font-lock-doc-face fontified t) 487 564 (face font-lock-doc-face fontified t) 564 572 (face font-lock-doc-face fontified t) 572 634 (face font-lock-doc-face fontified t) 634 658 (face font-lock-doc-face fontified t) 658 710 (face font-lock-doc-face fontified t) 710 737 (face font-lock-doc-face fontified t) 737 752 (face font-lock-doc-face fontified t) 752 753 (face font-lock-doc-face fontified t rear-nonsticky t) 753 754 (face font-lock-doc-face fontified t) 754 755 (face font-lock-doc-face fontified t syntax-table (15)) 755 757 (face font-lock-doc-face fontified t) 757 758 (fontified t) 758 760 (face font-lock-comment-delimiter-face fontified t) 760 836 (face font-lock-comment-face fontified t) 836 838 (face font-lock-comment-delimiter-face fontified t) 838 845 (face font-lock-comment-face fontified t) 845 847 (face font-lock-comment-delimiter-face fontified t) 847 923 (face font-lock-comment-face fontified t) 923 925 (face font-lock-comment-delimiter-face fontified t) 925 946 (face font-lock-comment-face fontified t) 946 948 (face font-lock-comment-delimiter-face fontified t) 948 959 (face font-lock-comment-face fontified t) 959 960 (face font-lock-comment-face fontified t rear-nonsticky t)) #("nota1 = nota1*4 if nota1 > nota2 and nota1 > nota3 else nota1*3" 0 5 (face font-lock-variable-name-face fontified t) 5 8 (fontified t) 8 16 (fontified t) 16 18 (face font-lock-keyword-face fontified t) 18 19 (fontified t) 19 27 (fontified t) 27 33 (fontified t) 33 36 (face font-lock-keyword-face fontified t) 36 37 (fontified t) 37 45 (fontified t) 45 51 (fontified t) 51 55 (face font-lock-keyword-face fontified t) 55 56 (fontified t) 56 63 (fontified t)) #("print('Bem vindo ao programa calcnota')
identificacao = int(input('Informe o seu número de indentificação: '))
nota1 = int(input('Informe o valor da nota 1: '))
nota2 = int(input('Informe o valor da nota 2: '))
nota3 = int(input('Informe o valor da nota 3: '))
mediaExercicios = float(input('Informe a sua média de exercícios: '))

mediaAproveitamento = float(
    (nota1 + (nota2 * 2) + (nota3 * 3) + mediaExercicios)/7
)
" 0 5 (face font-lock-builtin-face fontified t) 5 6 (fontified t) 6 38 (face font-lock-string-face fontified t) 38 40 (fontified t) 40 53 (face font-lock-variable-name-face fontified t) 53 56 (fontified t) 56 59 (face font-lock-builtin-face fontified t) 59 60 (fontified t) 60 65 (face font-lock-builtin-face fontified t) 65 66 (fontified t) 66 107 (face font-lock-string-face fontified t) 107 108 (face font-lock-string-face fontified t) 108 110 (fontified t) 110 111 (fontified t) 111 116 (fontified t) 116 119 (fontified t) 119 122 (face font-lock-builtin-face fontified t) 122 123 (fontified t) 123 128 (face font-lock-builtin-face fontified t) 128 129 (fontified t) 129 158 (face font-lock-string-face fontified t) 158 161 (fontified t) 161 166 (face font-lock-variable-name-face fontified t) 166 169 (fontified t) 169 172 (face font-lock-builtin-face fontified t) 172 173 (fontified t) 173 178 (face font-lock-builtin-face fontified t) 178 179 (fontified t) 179 208 (face font-lock-string-face fontified t) 208 209 (fontified t rear-nonsticky t) 209 210 (fontified t) 210 211 (fontified t) 211 212 (face font-lock-variable-name-face fontified t) 212 216 (face font-lock-variable-name-face fontified t) 216 219 (fontified t) 219 222 (face font-lock-builtin-face fontified t) 222 223 (fontified t) 223 228 (face font-lock-builtin-face fontified t) 228 229 (fontified t) 229 258 (face font-lock-string-face fontified t) 258 259 (fontified t rear-nonsticky t) 259 261 (fontified t) 261 276 (face font-lock-variable-name-face fontified t) 276 279 (fontified t) 279 284 (face font-lock-builtin-face fontified t) 284 285 (fontified t) 285 290 (face font-lock-builtin-face fontified t) 290 291 (fontified t) 291 328 (face font-lock-string-face fontified t) 328 329 (fontified t) 329 331 (fontified t) 331 332 (fontified t) 332 351 (fontified t) 351 354 (fontified t) 354 359 (face font-lock-builtin-face fontified t) 359 361 (fontified t) 361 365 (fontified t) 365 366 (fontified t) 366 375 (fontified t) 375 389 (fontified t) 389 402 (fontified t) 402 417 (fontified t) 417 418 (fontified t) 418 423 (fontified t)) "Escreva um programa que leia o código de um aluno e suas três notas. Calcule a
média ponderada do aluno, considerando que o peso para a maior nota seja 4 e para as
duas restantes, 3. Mostre o código do aluno, suas três notas, a média calculada e uma
mensagem ”APROVADO” se a média for maior ou igual a 5 e ”REPROVADO” se a média
for menor que 5." #("#!/usr/bin/env python3
# coding=utf8
# ----------------------------------------------------------------------------
# Created By  : Anderson José de Souza Inácio
# Created Date: 2024-03-13
# version ='1.0'
# ---------------------------------------------------------------------------
\"\"\" Curso Estatística 2024 UFPR
Disciplina CI182 Fundamentos de Programacao de Computadores
Aula 4 Exercício 6.7 - 1 calcnota

Escrever um programa que le o numero de identificacao, as 3 notas obtidas por
um aluno em 3 provas e a media dos exercıcios (ME) que fazem parte da
avaliacao. Calcular a media de aproveitamento, usando a formula:

   MA = (Nota1 + Nota2 × 2 + Nota3 × 3 + ME)/7

A atribuicao de conceitos obedece a tabela abaixo:

Media de Aproveitamento     Conceito
   media > 90                  A
      75 < media ⩽ 90          B
      60 < media ⩽ 75          C
      40 < media ⩽ 60          D
   media ⩽ 40                  E

O programa deve escrever o numero do aluno, suas notas, a media dos exercıcios,
a media de aproveitamento, o conceito correspondente e a mensagem: APROVADO
se o conceito for A,B ou C e REPROVADO se o conceito for D ou E.
\"\"\"
# ---------------------------------------------------------------------------
# Import
# ---------------------------------------------------------------------------
# from string import *
# import math
" 0 1 (face font-lock-comment-delimiter-face fontified t) 1 23 (face font-lock-comment-face fontified t) 23 25 (face font-lock-comment-delimiter-face fontified t) 25 37 (face font-lock-comment-face fontified t) 37 39 (face font-lock-comment-delimiter-face fontified t) 39 116 (face font-lock-comment-face fontified t) 116 118 (face font-lock-comment-delimiter-face fontified t) 118 162 (face font-lock-comment-face fontified t) 162 164 (face font-lock-comment-delimiter-face fontified t) 164 189 (face font-lock-comment-face fontified t) 189 191 (face font-lock-comment-delimiter-face fontified t) 191 206 (face font-lock-comment-face fontified t) 206 208 (face font-lock-comment-delimiter-face fontified t) 208 284 (face font-lock-comment-face fontified t) 284 286 (face font-lock-doc-face fontified t) 286 287 (face font-lock-doc-face syntax-table (15) fontified t) 287 376 (face font-lock-doc-face fontified t) 376 410 (face font-lock-doc-face fontified t) 410 411 (face font-lock-doc-face fontified t) 411 489 (face font-lock-doc-face fontified t) 489 491 (face font-lock-doc-face fontified t) 491 492 (face font-lock-doc-face fontified t) 492 559 (face font-lock-doc-face fontified t) 559 570 (face font-lock-doc-face fontified t) 570 573 (face font-lock-doc-face fontified t) 573 583 (face font-lock-doc-face fontified t) 583 624 (face font-lock-doc-face fontified t) 624 625 (face font-lock-doc-face fontified t) 625 628 (face font-lock-doc-face fontified t) 628 672 (face font-lock-doc-face fontified t) 672 673 (face font-lock-doc-face fontified t) 673 724 (face font-lock-doc-face fontified t) 724 725 (face font-lock-doc-face fontified t) 725 762 (face font-lock-doc-face fontified t) 762 765 (face font-lock-doc-face fontified t) 765 795 (face font-lock-doc-face fontified t) 795 801 (face font-lock-doc-face fontified t) 801 828 (face font-lock-doc-face fontified t) 828 834 (face font-lock-doc-face fontified t) 834 861 (face font-lock-doc-face fontified t) 861 867 (face font-lock-doc-face fontified t) 867 894 (face font-lock-doc-face fontified t) 894 897 (face font-lock-doc-face fontified t) 897 927 (face font-lock-doc-face fontified t) 927 928 (face font-lock-doc-face fontified t) 928 1008 (face font-lock-doc-face fontified t) 1008 1016 (face font-lock-doc-face fontified t) 1016 1084 (face font-lock-doc-face fontified t) 1084 1098 (face font-lock-doc-face fontified t) 1098 1147 (face font-lock-doc-face fontified t) 1147 1148 (face font-lock-doc-face fontified t rear-nonsticky t) 1148 1149 (face font-lock-doc-face fontified t) 1149 1150 (face font-lock-doc-face fontified t syntax-table (15)) 1150 1152 (face font-lock-doc-face fontified t) 1152 1153 (fontified t) 1153 1155 (face font-lock-comment-delimiter-face fontified t) 1155 1231 (face font-lock-comment-face fontified t) 1231 1233 (face font-lock-comment-delimiter-face fontified t) 1233 1240 (face font-lock-comment-face fontified t) 1240 1242 (face font-lock-comment-delimiter-face fontified t) 1242 1318 (face font-lock-comment-face fontified t) 1318 1320 (face font-lock-comment-delimiter-face fontified t) 1320 1341 (face font-lock-comment-face fontified t) 1341 1343 (face font-lock-comment-delimiter-face fontified t) 1343 1354 (face font-lock-comment-face fontified t) 1354 1355 (face font-lock-comment-face fontified t rear-nonsticky t)) #("float(" 0 5 (face font-lock-builtin-face fontified t) 5 6 (fontified t)) #("elif (mediaAproveitamento <= 90 and mediaAproveitamento > 75):
    conceito = 'B'
    " 0 4 (face font-lock-keyword-face fontified t) 4 6 (fontified t) 6 32 (fontified t) 32 35 (face font-lock-keyword-face fontified t) 35 36 (fontified t) 36 60 (fontified t) 60 63 (fontified t) 63 67 (fontified t) 67 75 (face font-lock-variable-name-face fontified t) 75 78 (fontified t) 78 81 (face font-lock-string-face fontified t) 81 86 (fontified t)) #("    print('O aluno id {0} obteve conceito A, com a média de aproveitamento'
          ' em {1}'.format(identificacao, mediaAproveitamento))" 0 4 (fontified t) 4 9 (face font-lock-builtin-face fontified t) 9 10 (fontified t) 10 75 (face font-lock-string-face fontified t) 75 76 (fontified t) 76 86 (fontified t) 86 88 (face font-lock-string-face fontified t) 88 94 (face font-lock-string-face fontified t) 94 95 (face font-lock-string-face fontified t) 95 96 (fontified t) 96 102 (face font-lock-builtin-face fontified t) 102 103 (fontified t) 103 118 (fontified t) 118 137 (fontified t) 137 138 (fontified t) 138 139 (fontified t)) #("nota1 = input('Informe o valor da nota 1:' )" 0 5 (face font-lock-variable-name-face fontified t) 5 8 (fontified t) 8 13 (face font-lock-builtin-face fontified t) 13 14 (fontified t) 14 42 (face font-lock-string-face fontified t) 42 43 (fontified t) 43 44 (fontified t)) "Escrever um programa que lê o número de identificação, as 3 notas obtidas por
um aluno em 3 provas e a média dos exercı́cios (M E) que fazem parte da avaliação. Cal-
cular a média de aproveitamento, usando a fórmula:
M A = (N ota1 + N ota2 × 2 + N ota3 × 3 + M E)/7
A atribuição de conceitos obedece a tabela abaixo:
Média de Aproveitamento
media > 90
75 < media ⩽ 90
60 < media ⩽ 75
40 < media ⩽ 60
media ⩽ 40
Conceito
A
B
C
D
E
O programa deve escrever o número do aluno, suas notas, a média dos exercı́cios, a média
de aproveitamento, o conceito correspondente e a mensagem: APROVADO se o conceito
for A,B ou C e REPROVADO se o conceito for D ou E." #("#!/usr/bin/env python3
# coding=utf8
# ----------------------------------------------------------------------------
# Created By  : Anderson José de Souza Inácio
# Created Date: 2024-03-13
# version ='1.0'
# ---------------------------------------------------------------------------
\"\"\" Curso Estatística 2024 UFPR
Disciplina CI182 Fundamentos de Programacao de Computadores
Aula 4 Exercício 5.4 - 5 ultimoStr

Solicitar do usuario dois textos separados e em seguida mostrar o ındice da
ultima ocorrencia do segundo texto t no primeiro, ou -1, se o segundo texto
nao ocorre no primeiro.
\"\"\"
# ---------------------------------------------------------------------------
# Import
# ---------------------------------------------------------------------------
# from string import *
# import math
" 0 1 (face font-lock-comment-delimiter-face fontified t) 1 23 (face font-lock-comment-face fontified t) 23 25 (face font-lock-comment-delimiter-face fontified t) 25 37 (face font-lock-comment-face fontified t) 37 39 (face font-lock-comment-delimiter-face fontified t) 39 116 (face font-lock-comment-face fontified t) 116 118 (face font-lock-comment-delimiter-face fontified t) 118 162 (face font-lock-comment-face fontified t) 162 164 (face font-lock-comment-delimiter-face fontified t) 164 189 (face font-lock-comment-face fontified t) 189 191 (face font-lock-comment-delimiter-face fontified t) 191 206 (face font-lock-comment-face fontified t) 206 208 (face font-lock-comment-delimiter-face fontified t) 208 284 (face font-lock-comment-face fontified t) 284 286 (face font-lock-doc-face fontified t) 286 287 (face font-lock-doc-face syntax-table (15) fontified t) 287 376 (face font-lock-doc-face fontified t) 376 411 (face font-lock-doc-face fontified t) 411 412 (face font-lock-doc-face fontified t) 412 488 (face font-lock-doc-face fontified t) 488 564 (face font-lock-doc-face fontified t) 564 575 (face font-lock-doc-face fontified t) 575 586 (face font-lock-doc-face fontified t) 586 587 (face font-lock-doc-face fontified t rear-nonsticky t) 587 588 (face font-lock-doc-face fontified t) 588 589 (face font-lock-doc-face fontified t syntax-table (15)) 589 591 (face font-lock-doc-face fontified t) 591 592 (fontified t) 592 594 (face font-lock-comment-delimiter-face fontified t) 594 670 (face font-lock-comment-face fontified t) 670 672 (face font-lock-comment-delimiter-face fontified t) 672 679 (face font-lock-comment-face fontified t) 679 681 (face font-lock-comment-delimiter-face fontified t) 681 757 (face font-lock-comment-face fontified t) 757 759 (face font-lock-comment-delimiter-face fontified t) 759 780 (face font-lock-comment-face fontified t) 780 782 (face font-lock-comment-delimiter-face fontified t) 782 794 (face font-lock-comment-face fontified t)) #("pessego passeia a noite com pessego, so que pessego tem medo do escuro, pes" 0 75 (help-echo "mouse-2: insert after prompt as new input" mouse-face highlight fontified t)) "Solicitar do usuário dois textos separados e em seguida mostrar o ı́ndice da
última ocorrência do segundo texto t no primeiro, ou -1, se o segundo texto não ocorre
no primeiro." #("#!/usr/bin/env python3
# coding=utf8
# ----------------------------------------------------------------------------
# Created By  : Anderson José de Souza Inácio
# Created Date: 2024-03-13
# version ='1.0'
# ---------------------------------------------------------------------------
\"\"\" Curso Estatística 2024 UFPR
Disciplina CI182 Fundamentos de Programacao de Computadores
Aula 4 Exercício 5.4 - 4 primaStr

Solicitar do usuario um texto qualquer e depois um caracter c qualquer. O
programa entao deve mostrar o ındice no texto da primeira ocorrencia de c no
texto, ou -1, se c nao ocorre no texto.
\"\"\"
# ---------------------------------------------------------------------------
# Import
# ---------------------------------------------------------------------------
# from string import *
# import math
" 0 1 (face font-lock-comment-delimiter-face fontified t) 1 23 (face font-lock-comment-face fontified t) 23 25 (face font-lock-comment-delimiter-face fontified t) 25 37 (face font-lock-comment-face fontified t) 37 39 (face font-lock-comment-delimiter-face fontified t) 39 116 (face font-lock-comment-face fontified t) 116 118 (face font-lock-comment-delimiter-face fontified t) 118 162 (face font-lock-comment-face fontified t) 162 164 (face font-lock-comment-delimiter-face fontified t) 164 189 (face font-lock-comment-face fontified t) 189 191 (face font-lock-comment-delimiter-face fontified t) 191 206 (face font-lock-comment-face fontified t) 206 208 (face font-lock-comment-delimiter-face fontified t) 208 284 (face font-lock-comment-face fontified t) 284 286 (face font-lock-doc-face fontified t) 286 287 (face font-lock-doc-face syntax-table (15) fontified t) 287 376 (face font-lock-doc-face fontified t) 376 410 (face font-lock-doc-face fontified t) 410 411 (face font-lock-doc-face fontified t) 411 485 (face font-lock-doc-face fontified t) 485 562 (face font-lock-doc-face fontified t) 562 572 (face font-lock-doc-face fontified t) 572 600 (face font-lock-doc-face fontified t) 600 601 (face font-lock-doc-face fontified t rear-nonsticky t) 601 602 (face font-lock-doc-face fontified t) 602 603 (face font-lock-doc-face fontified t syntax-table (15)) 603 605 (face font-lock-doc-face fontified t) 605 606 (fontified t) 606 608 (face font-lock-comment-delimiter-face fontified t) 608 684 (face font-lock-comment-face fontified t) 684 686 (face font-lock-comment-delimiter-face fontified t) 686 693 (face font-lock-comment-face fontified t) 693 695 (face font-lock-comment-delimiter-face fontified t) 695 771 (face font-lock-comment-face fontified t) 771 773 (face font-lock-comment-delimiter-face fontified t) 773 794 (face font-lock-comment-face fontified t) 794 796 (face font-lock-comment-delimiter-face fontified t) 796 808 (face font-lock-comment-face fontified t)) "Solicitar do usuário um texto qualquer e depois um caracter c qualquer. O
programa então deve mostrar o ı́ndice no texto da primeira ocorrência de c no texto, ou
-1, se c não ocorre no texto." #("#!/usr/bin/env python3
# coding=utf8
# ----------------------------------------------------------------------------
# Created By  : Anderson José de Souza Inácio
# Created Date: 2024-03-13
# version ='1.0'
# ---------------------------------------------------------------------------
\"\"\" Curso Estatística 2024 UFPR
Disciplina CI182 Fundamentos de Programacao de Computadores
Aula 4 Exercício 5.4 - 3 juntaStr

Solicitar do usuario dois textos separados e mostra-los na tela concatenados,
 isto e, os dois textos como um so, sem espaco entre eles.
\"\"\"
# ---------------------------------------------------------------------------
# Import
# ---------------------------------------------------------------------------
# from string import *
# import math
" 0 1 (face font-lock-comment-delimiter-face fontified t) 1 23 (face font-lock-comment-face fontified t) 23 25 (face font-lock-comment-delimiter-face fontified t) 25 37 (face font-lock-comment-face fontified t) 37 39 (face font-lock-comment-delimiter-face fontified t) 39 116 (face font-lock-comment-face fontified t) 116 118 (face font-lock-comment-delimiter-face fontified t) 118 162 (face font-lock-comment-face fontified t) 162 164 (face font-lock-comment-delimiter-face fontified t) 164 189 (face font-lock-comment-face fontified t) 189 191 (face font-lock-comment-delimiter-face fontified t) 191 206 (face font-lock-comment-face fontified t) 206 208 (face font-lock-comment-delimiter-face fontified t) 208 284 (face font-lock-comment-face fontified t) 284 286 (face font-lock-doc-face fontified t) 286 287 (face font-lock-doc-face syntax-table (15) fontified t) 287 376 (face font-lock-doc-face fontified t) 376 410 (face font-lock-doc-face fontified t) 410 411 (face font-lock-doc-face fontified t) 411 489 (face font-lock-doc-face fontified t) 489 495 (face font-lock-doc-face fontified t) 495 546 (face font-lock-doc-face fontified t) 546 547 (face font-lock-doc-face fontified t rear-nonsticky t) 547 548 (face font-lock-doc-face fontified t) 548 549 (face font-lock-doc-face fontified t syntax-table (15)) 549 551 (face font-lock-doc-face fontified t) 551 552 (fontified t) 552 554 (face font-lock-comment-delimiter-face fontified t) 554 630 (face font-lock-comment-face fontified t) 630 632 (face font-lock-comment-delimiter-face fontified t) 632 639 (face font-lock-comment-face fontified t) 639 641 (face font-lock-comment-delimiter-face fontified t) 641 717 (face font-lock-comment-face fontified t) 717 719 (face font-lock-comment-delimiter-face fontified t) 719 740 (face font-lock-comment-face fontified t) 740 742 (face font-lock-comment-delimiter-face fontified t) 742 754 (face font-lock-comment-face fontified t)) "Solicitar do usuário dois textos separados e mostrá-los na tela concatenados, isto
é, os dois textos como um só, sem espaço entre eles." #("#!/usr/bin/env python3
# coding=utf8
# ----------------------------------------------------------------------------
# Created By  : Anderson José de Souza Inácio
# Created Date: 2024-03-13
# version ='1.0'
# ---------------------------------------------------------------------------
\"\"\" Curso Estatística 2024 UFPR
Disciplina CI182 Fundamentos de Programacao de Computadores
Aula 4 Exercício 5.4 - 2 compStr

Solicitar do usuario dois textos separados e indicar na tela se os textos sao
 iguais, ou se o primeiro texto digitado esta antes do outro considerando
ordem alfabetica.
\"\"\"
# ---------------------------------------------------------------------------
# Import
# ---------------------------------------------------------------------------
# from string import *
# import math
" 0 1 (face font-lock-comment-delimiter-face fontified t) 1 23 (face font-lock-comment-face fontified t) 23 25 (face font-lock-comment-delimiter-face fontified t) 25 37 (face font-lock-comment-face fontified t) 37 39 (face font-lock-comment-delimiter-face fontified t) 39 116 (face font-lock-comment-face fontified t) 116 118 (face font-lock-comment-delimiter-face fontified t) 118 162 (face font-lock-comment-face fontified t) 162 164 (face font-lock-comment-delimiter-face fontified t) 164 189 (face font-lock-comment-face fontified t) 189 191 (face font-lock-comment-delimiter-face fontified t) 191 206 (face font-lock-comment-face fontified t) 206 208 (face font-lock-comment-delimiter-face fontified t) 208 284 (face font-lock-comment-face fontified t) 284 286 (face font-lock-doc-face fontified t) 286 287 (face font-lock-doc-face syntax-table (15) fontified t) 287 376 (face font-lock-doc-face fontified t) 376 409 (face font-lock-doc-face fontified t) 409 410 (face font-lock-doc-face fontified t) 410 488 (face font-lock-doc-face fontified t) 488 562 (face font-lock-doc-face fontified t) 562 578 (face font-lock-doc-face fontified t) 578 579 (face font-lock-doc-face fontified t rear-nonsticky t) 579 580 (face font-lock-doc-face fontified t) 580 581 (face font-lock-doc-face fontified t syntax-table (15)) 581 583 (face font-lock-doc-face fontified t) 583 584 (fontified t) 584 586 (face font-lock-comment-delimiter-face fontified t) 586 662 (face font-lock-comment-face fontified t) 662 664 (face font-lock-comment-delimiter-face fontified t) 664 671 (face font-lock-comment-face fontified t) 671 673 (face font-lock-comment-delimiter-face fontified t) 673 749 (face font-lock-comment-face fontified t) 749 751 (face font-lock-comment-delimiter-face fontified t) 751 772 (face font-lock-comment-face fontified t) 772 774 (face font-lock-comment-delimiter-face fontified t) 774 785 (face font-lock-comment-face fontified t) 785 786 (face font-lock-comment-face fontified t rear-nonsticky t)) #("        print('O primeiro texto informado está em primeiro, considerando a '
              'ordem alfabética')" 0 8 (fontified t) 8 13 (face font-lock-builtin-face fontified t) 13 14 (fontified t) 14 76 (face font-lock-string-face fontified t) 76 77 (fontified t) 77 91 (fontified t) 91 92 (face font-lock-string-face fontified t) 92 97 (face font-lock-string-face fontified t) 97 98 (face font-lock-string-face fontified t) 98 108 (face font-lock-string-face fontified t) 108 109 (face font-lock-string-face fontified t) 109 110 (fontified t)) "Solicitar do usuário dois textos separados e indicar na tela se os textos são iguais,
ou se o primeiro texto digitado está antes do outro considerando ordem alfabética."))
(setq search-ring 'nil)
(setq regexp-search-ring '("indent" "scheme\\[SchemeNorm]\\[ColB" "updatesys" "mai"))
