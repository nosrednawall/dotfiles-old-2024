;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by ‘savehist’.

(setq savehist-minibuffer-history-variables '(input-method-history query-replace-history realgud:pdb-minibuffer-history gud-pdb-history coding-system-history string-rectangle-history read-expression-history command-history ess--completing-hist counsel-locate-history sql-product-history sql-server-history sql-database-history sql-user-history read-char-history counsel-git-history transient--history read-number-history compile-history shell-command-history magit-git-command-history magit-revision-history extended-command-history ido-file-history minibuffer-history empty-history read-from-kill-ring-history ivy-history counsel-M-x-history swiper-history ido-buffer-history file-name-history))
(setq query-replace-history '("#ebdbb2" "#dfbf8e" "#89B482" #("#427b58" 0 6 (face ((:foreground "white") (:background "#427b58"))) 6 7 (face ((:foreground "white") (:background "#427b58")) rear-nonsticky t)) "abcde" "$"))
(setq realgud:pdb-minibuffer-history '("python3 -m pdb /home/anderson/git/Educacional/UFPR_Estatistica/CI182_Fundamentos_Programacao_Computadores/exercicios/Aula_11/prnabnt.py" "python3 -m pdb /home/anderson/git/Educacional/UFPR_Estatistica/CI182_Fundamentos_Programacao_Computadores/exercicios/Aula_11/prnabnt.py" "python3 -m pdb /home/anderson/git/Educacional/UFPR_Estatistica/CI182_Fundamentos_Programacao_Computadores/exercicios/Aula_11/prnabnt.py" "python3 -m pdb /home/anderson/git/Educacional/UFPR_Estatistica/CI182_Fundamentos_Programacao_Computadores/exercicios/Aula_11/prnabnt.py" "python -m pdb /home/anderson/git/Educacional/UFPR_Estatistica/CI182_Fundamentos_Programacao_Computadores/exercicios/Aula_11/prnabnt.py"))
(setq gud-pdb-history '("prnabnt.py" "python -m pdb3" "python -m pdb" "python -m pdb prnabnt.py" "python -m pdb "))
(setq coding-system-history '(#("utf-8" 0 5 (ivy-index 16 idx 1033)) #("raw-text-unix" 0 13 (ivy-index 263 idx 1057)) #("iso-8859-6-unix" 0 15 (ivy-index 3 idx 19)) #("latin-1-unix" 0 12 (ivy-index 260 idx 1044)) #("unix" 0 4 (ivy-index 265 idx 1064)) #("iso-8859-6" 0 10 (ivy-index 17 idx 16)) #("prefer-utf-8" 0 12 (ivy-index 20 idx 1058)) #("utf-8-dos" 0 9 (ivy-index 18 idx 1035)) #("utf-8-unix" 0 10 (ivy-index 19 idx 1036)) #("georgian-academy" 0 16 (ivy-index 1 idx 0)) #("nil" 0 3 (ivy-index 0)) #("utf-8-auto" 0 10 (ivy-index 7 idx 1025))))
(setq command-history '((rainbow-mode 'toggle) (toggle-frame-maximized) (term "/bin/bash") (package-install 'rainbow-mode nil) (package-refresh-contents) (package-install-file "/home/anderson/Downloads/gnu-elpa-keyring-update-2022.12.tar") (neotree-create-node "/home/anderson/.dotfiles/.local/bin/dmenu/dmenu-pomodoro") (org-timer-set-timer nil) (neotree-create-node "/home/anderson/.dotfiles/.dwm/teste.orig") (neotree-create-node "/home/anderson/.dotfiles/.dwm/teste.rej") (all-the-icons-install-fonts nil) (find-file "/home/anderson/.emacs.d/init.el") (package-install 'multiple-cursors nil) (execute-extended-command nil "package-install" "package-install") (term "/usr/bin/zsh") (minimap-mode 'toggle) (try) (replace-string "#dfbf8e" "#ebdbb2" nil 5033 5040 nil nil) (shell nil) (kill-buffer "*shell*") (replace-string #("#427b58" 0 6 (face ((:foreground "white") (:background "#427b58"))) 6 7 (face ((:foreground "white") (:background "#427b58")) rear-nonsticky t)) "#89B482" nil nil nil nil nil) (map-query-replace-regexp "$" "abcde" nil nil nil nil) (realgud:pdb) (realgud:pdb-customize) (pdb-reset) (kill-buffer "*gud*") (package-install 'realgud nil) (pdb "prnabnt.py") (kill-buffer "*Python*") (cd "/home/anderson/git/Educacional/UFPR_Estatistica/CI182_Fundamentos_Programacao_Computadores/exercicios/Aula_11/") (kill-buffer "slstatus.c") (pdb "python -m pdb3") (pdb "python -m pdb") (pdb "python -m pdb prnabnt.py") (pdb "python -m pdb ") (kill-buffer "*terminal*") (kill-buffer "emacs.org") (kill-buffer "slstatus") (kill-buffer "config.def.h") (kill-buffer "config.def.h<slstatus>") (kill-buffer "blocks.def.h") (kill-buffer "rofi_network") (neotree-create-node "/home/anderson/git/Educacional/UFPR_Estatistica/CI182_Fundamentos_Programacao_Computadores/exercicios/Aula_11/prnabnt.py") (tetris-end-game) (tetris) (kill-buffer "snake-scores") (snake) (snake-start-game) (pong-quit) (pong) (neotree-create-node "/home/anderson/git/Educacional/UFPR_Estatistica/CI182_Fundamentos_Programacao_Computadores/exercicios/Aula_11/achaSpc.py") (neotree-create-node "/home/anderson/git/Educacional/UFPR_Estatistica/CI182_Fundamentos_Programacao_Computadores/exercicios/Aula_10/achamaior.py") (neotree-create-node "/home/anderson/git/Educacional/UFPR_Estatistica/CI182_Fundamentos_Programacao_Computadores/exercicios/Aula_10/lancheria.py") (neotree-create-node "/home/anderson/git/Educacional/UFPR_Estatistica/CI182_Fundamentos_Programacao_Computadores/exercicios/Aula_10/lanche.py") (neotree-create-node "/home/anderson/git/Educacional/UFPR_Estatistica/CI182_Fundamentos_Programacao_Computadores/exercicios/Aula_09/contapal.py") (neotree-create-node "/home/anderson/git/Educacional/UFPR_Estatistica/CI182_Fundamentos_Programacao_Computadores/exercicios/Aula_09/juntatxt.py") (kill-buffer "*scratch*") (kill-buffer "*EGLOT (UFPR_Estatistica/(python-mode)) events*") (ess-show-call-stack) (scroll-down nil) (magit-reset-hard "HEAD") (magit-reset) (magit-reset-mixed "main") (magit-revert-no-commit "main" '("--edit")) (magit-revert) (kill-buffer "prova_001.r") (kill-buffer "dwm.c") (package-delete #s(package-desc edwina (20221206 1610) "Dynamic window manager" ((emacs (25))) nil nil "/home/anderson/.emacs.d/elpa/edwina-20221206.1610" ((:url . "https://gitlab.com/ajgrf/edwina") (:keywords "convenience") (:maintainer "Alex Griffin" . "a@ajgrf.com") (:maintainers ("Alex Griffin" . "a@ajgrf.com")) (:authors ("Alex Griffin" . "a@ajgrf.com")) (:commit . "f95c31b1de95df7e83338a5d4daf3363df325862")) nil) nil nil) (find-file "~/.emacs.d/emacs.org" t) (find-file "/home/anderson/.dotfiles/.emacs.d/emacs.org") (recover-session) (execute-extended-command nil "recover-session" "recover-sess") (set-clipboard-coding-system 'utf-8) (set-clipboard-coding-system 'raw-text-unix) (set-clipboard-coding-system 'iso-8859-6-unix) (set-clipboard-coding-system 'latin-1-unix) (set-clipboard-coding-system 'unix) (set-clipboard-coding-system 'iso-8859-6) (set-clipboard-coding-system 'prefer-utf-8) (set-clipboard-coding-system 'utf-8-dos) (set-clipboard-coding-system 'utf-8-unix) (set-clipboard-coding-system 'georgian-academy) (set-clipboard-coding-system nil) (set-clipboard-coding-system 'utf-8-auto) (electric-indent-mode 'toggle) (neotree-create-node "/home/anderson/.dotfiles/.local/bin/dmenu/dmenu-corrige") (neotree-create-node "/home/anderson/git/Educacional/UFPR_Estatistica/CI182_Fundamentos_Programacao_Computadores/exercicios/Aula_07/poluicao.py") (neotree-create-node "/home/anderson/git/Educacional/UFPR_Estatistica/CI182_Fundamentos_Programacao_Computadores/exercicios/Aula_07/abnt.py") (neotree-create-node "/home/anderson/git/Educacional/UFPR_Estatistica/CI182_Fundamentos_Programacao_Computadores/exercicios/Aula_07/percdna.py") (neotree-create-node "/home/anderson/git/Educacional/UFPR_Estatistica/CI182_Fundamentos_Programacao_Computadores/exercicios/Aula_07/copel.py") (neotree-create-node "/home/anderson/git/Educacional/UFPR_Estatistica/CI182_Fundamentos_Programacao_Computadores/exercicios/Aula_07/003_loja.py") (xclip-mode 'toggle) (package-install 'xclip nil) (simpleclip-mode 'toggle) (simpleclip-paste) (package-install 'simpleclip nil) (set-language-environment "Brazilian Portuguese") (kill-buffer "NotasAula.pdf") (string-rectangle 2806 5317 "") (neotree-create-node "/home/anderson/git/Educacional/UFPR_Estatistica/CE301_Estatistica_Basica/Scripts_R/Analise_Exploratoria_com_R.r") (neotree-create-node "/home/anderson/.dotfiles/.local/bin/brilho_tela_diminui") (neotree-create-node "/home/anderson/.dotfiles/.local/bin/brilho_tela_aumenta") (kill-buffer "config.h") (jupyter-org-kill-block-and-results) (jupyter-org-hydra/body) (jupyter-run-repl "python3" nil t nil t) (jupyter-repl-mode) (jupyter-load-file "/home/anderson/git/Educacional/Programa_Desenvolve_Boticario/014_Python_Data_science/Projeto+inicial+-+Python+para+DS.ipynb") (ein:stop t "http://127.0.0.1:8888") (ein:run "/usr/bin/jupyter" "/home/anderson/git/Educacional/Programa_Desenvolve_Boticario/014_Python_Data_science/" nil #[514 "\300!\207" [pop-to-buffer] 4 "

(fn BUFFER URL-OR-PORT)"] nil) (ein:stop t nil) (ein:notebook-open "http://127.0.0.1:8888" "Projeto_Python_Data_Science.ipynb") (ein:ipynb-mode) (ein:run "/usr/bin/jupyter" "/home/anderson/git/Educacional/Programa_Desenvolve_Boticario/013_Python_Ciencia_Dados/" nil #[514 "\300!\207" [pop-to-buffer] 4 "

(fn BUFFER URL-OR-PORT)"] nil) (ein:run "/usr/bin/jupyter-execute" "/home/anderson/git/Educacional/Programa_Desenvolve_Boticario/013_Python_Ciencia_Dados/" nil #[514 "\300!\207" [pop-to-buffer] 4 "

(fn BUFFER URL-OR-PORT)"] nil) (ein:login "http://127.0.0.1:8888" #[514 "\300!\207" [pop-to-buffer] 4 "

(fn BUFFER URL-OR-PORT)"] nil nil nil) (ein:jupyter-server-stop t nil) (ein:login "http://127.0.0.1:0" #[514 "\300!\207" [pop-to-buffer] 4 "

(fn BUFFER URL-OR-PORT)"] nil nil nil) (ein:login "http://127.0.0.1" #[514 "\300!\207" [pop-to-buffer] 4 "

(fn BUFFER URL-OR-PORT)"] nil nil nil) (package-install 'eink-theme nil) (package-install 'ein nil) (kill-buffer "100-graficos-tabelas-uni.R") (neotree-create-node "/home/anderson/git/Educacional/UFPR_Estatistica/CE301_Estatistica_Basica/Scripts_R/exercicio_medidas_posicao_dispersao.r") (projectile-switch-project nil) (project-switch-project "~/git/Educacional/Programa_Desenvolve_Boticario/") (project-switch-project "~/git/Educacional/UFPR_Estatistica/")))
(setq sql-product-history '(#("ansi" 0 4 (ivy-index 0))))
(setq sql-server-history '("172.17.0.2" "172.17.0.4" "172.17.0.3" "172.17.0.1"))
(setq sql-database-history '(#("alura" 0 5 (ivy-index 0)) #("postgres" 0 8 (ivy-index 0)) #("anderson" 0 8 (ivy-index 0))))
(setq sql-user-history '("postgres" "root"))
(setq read-number-history '("5432" "1"))
(setq compile-history '("make -k "))
(setq shell-command-history '("/bin/bash" "/usr/bin/zsh" "/usr/bin/bash"))
(setq magit-revision-history '(#("HEAD" 0 4 (ivy-index 3)) #("main" 0 4 (ivy-index 1)) #("5ad9048" 0 7 (ivy-index 0)) #("9e4e37a8e58c4c2695feeb6ce1223b8849c5f7f7" 0 40 (ivy-index 0)) #("e5b577f5f6a6135f1566bf97f4a4c1a2ea06af15" 0 40 (ivy-index 0)) #("origin/main" 0 11 (ivy-index 0)) #("1a51c1d" 0 7 (ivy-index 0)) #("ola mundo" 0 9 (ivy-index 0))))
(setq extended-command-history '("package-install" "recover-session"))
(setq ido-file-history '("gnu-elpa-keyring-update-2022.12.tar" "dmenu-pomodoro" "teste.orig" "teste.rej" "." "init.el" "prnabnt.py" "achaSpc.py" "achamaior.py" "lancheria.py" "test_while.py" "lanche.py" "contapal.py" "juntatxt.py" nil "emacs.org" "dmenu-corrige" "poluicao.py" "abnt.py" "percdna.py" "copel.py" "003_loja.py" "Analise_Exploratoria_com_R.r" "brilho_tela_diminui" "brilho_tela_aumenta" "Projeto+inicial+-+Python+para+DS.ipynb" "exercicio_medidas_posicao_dispersao.r" "query_mariadb.sql" "somaMultiplos.py" "calculadora.py" "teste.sql" "onibus.py" "credito.py" "pesoideal.py" "achemaior.py" "medias.py" "multiplos.py" "notas.py" "calcnota.py" "py" "ultimoStr.py" "primaStr.py" "juntaStr.py" "compStr.py" "tamStr.py" "sl-wttr.sh" "sl-wttr.sh~" "degraus.py" "distpontos.py" "eq2graus.py" "volesFera.py" "calculos.py" "escada.py" "capitulo_02_resumo_dados.r" "sxhkdrc" "dmenu-bitwarden" "teste.ini" "config.ini" "teste" "eqSistCramer.py" "eqSist.py" "eqGrau1.py" "convKm.py" "mediaPond.py" "convFarenheit.py" "segundo2horas.py" "idadeDias2anos.py" "idadeAnos2dias.py" "media.py" "calcula_sistemas.py" "equacao_segundo_grau.py" "media_aritimetica.py" "media_aritimetica_3_valores.py" "soma_dois_numeros.py" "calcula_raiz_de_3_numeros.py" "aula004_usando_funcoes.sql" "aula003_sub_consultas.sql" "dmenu-teclados" "aula001.sql" "myinit.org" "tabela_funcionarios.sql" "tabela_aluno.sql" "README.md" "dunstrc" "cpu_status.sh" "music_status_bar.sh" "volume_icon.sh" "battery_status.sh" "advinha_mais.html" "estrelas.html" "media_idades_familiares.html" "media_idades_familiares.hml" "tabuada.html" "ano_copa.html" "jogo_advinha.html" "futebol.html" "imc.html" "programa.html" "texto_puro.html" "primeiro_teste.html"))
(setq minibuffer-history '("25" "multiple-cursors" ".config/slstatus/config.def.h" ".dwm/config.def.h" "CE301_Estatistica_Basica/Exercicios/Probabilidades/Tabelas_dupla_Entrada/205-prob-animais.R" ".emacs.d/init.el" "CE301_Estatistica_Basica/Exercicios/Prova_01_em_R/prova_001.r" ".emacs.d/emacs.org" ".local/bin/rofi_network" ".local/bin/dmenu/dmenu-monitor" ".dwm/autostart.sh" ".dwm/config.h" "jupyter-execute" "jupyter notebook" "/home/anderson/.local/bin/jupyter lab" "~/.local/bin/jupyter lab" "jupyter lab" "python3 -m jupyter lab" "jupyter" ".Xresources" "~/.dotfiles/" "djklsklsdsdnj" "dashboard" "/usr/bin/zsh" "select * from curso;" "select * from cursos;" "/usr/bin/bash"))
(setq ivy-history '(#("config.def.h" 0 12 (ivy-index 4)) #("dwm.c" 0 5 (ivy-index 3)) #(".dwm/config.def.h" 0 17 (ivy-index 4)) #("rainbow-mode" 0 12 (ivy-index 6)) #("multiple-cursors" 0 16 (ivy-index 2)) #("minimap" 0 7 (ivy-index 4)) #("con" 0 3 (ivy-index 0)) "config.h" #("realgud" 0 7 (ivy-index 11)) #("prnabnt.py" 0 10 (ivy-index 0)) #("pr" 0 2 (ivy-index 0)) #("edwina-20221206.1610" 0 20 (ivy-index 1)) #("xclip" 0 5 (ivy-index 0)) #("simpleclip" 0 10 (ivy-index 1)) #("Brazilian Portuguese" 0 20 (idx 22 ivy-index 22)) #("config." 0 7 (ivy-index 0)) #("CE301_Estatistica_Basica/" 0 25 (ivy-index 3)) #("/home/anderson/git/Educacional/UFPR_Estatistica/" 0 48 (ivy-index 2)) #("Python 3 (ipykernel)" 0 20 (ivy-index 0)) #("python3" 0 7 (idx 0 ivy-index 0)) #("http://127.0.0.1:8888/Projeto_Python_Data_Science.ipynb" 0 55 (ivy-index 0)) #("8888" 0 4 (ivy-index 0)) #("0" 0 1 (ivy-index 0)) #("eink-theme" 0 10 (ivy-index 4)) #("ein" 0 3 (ivy-index 5)) #("CE301_Estatistica_Basica/Scripts_R/" 0 35 (ivy-index 8)) #("005_Logica_Programacao_Javascript/Logica/jogo_advinha.html" 0 58 (ivy-index 34)) #("~/git/Educacional/Programa_Desenvolve_Boticario/" 0 48 (ivy-index 1)) #("CE300_Estatistica_e_Sociedade/Seminario_001/Impacto_Vacina_Tdap_em_gravidas.pdf" 0 79 (ivy-index 1)) #("~/git/Educacional/UFPR_Estatistica/" 0 35 (ivy-index 2)) #("... (choose a dir)" 0 18 (ivy-index 3)) #("~/.dotfiles/" 0 12 (ivy-index 1)) #("./" 0 2 (ivy-index 0)) #("compilation-disable-input" 0 25 (ivy-index 4)) #("tree-sitter-ispell" 0 18 (ivy-index 1)) #("tree-sitter-langs" 0 17 (ivy-index 0)) #("tree-sitter" 0 11 (ivy-index 4)) #("101-medidas-uni.R" 0 17 (ivy-index 4)) #("origin" 0 6 (ivy-index 0)) #("master" 0 6 (ivy-index 0)) #("pdf-tools" 0 9 (ivy-index 0)) #("~/git/Educacional/Programa_Desenvolve_Boticario/006_Git_Github/projeto_inicial/" 0 79 (ivy-index 0)) #("dape" 0 4 (ivy-index 0)) #("elpy" 0 4 (ivy-index 1)) #("nyan-mode" 0 9 (ivy-index 0)) #("flycheck" 0 8 (ivy-index 64)) #("emacsql-psql" 0 12 (ivy-index 13)) #("index.html" 0 10 (ivy-index 0)) #("myterminal-controls" 0 19 (ivy-index 10)) #("electric-indent-mode" 0 20 (ivy-index 14)) #("indent-guide" 0 12 (ivy-index 0)) #("web-mode-indent-style" 0 21 (ivy-index 0))))
(setq counsel-M-x-history '(#("^rainbo" 0 7 (ivy-index 0)) "rainbow-mode" #("^rain" 0 5 (ivy-index 0)) #("^toggle-fra" 0 11 (ivy-index 0)) "toggle-frame-maximized" #("^term" 0 5 (ivy-index 0)) "term" #("^package-install" 0 16 (ivy-index 0)) "package-install" #("^package-re" 0 11 (ivy-index 0)) "package-refresh-contents" #("^package-ins" 0 12 (ivy-index 2)) "package-install-file" #("^package-inst" 0 13 (ivy-index 0)) "package-reinstall" #("^org-timer-se" 0 13 (ivy-index 0)) "org-timer-set-timer" #("^all-the" 0 8 (ivy-index 6)) "all-the-icons-install-fonts" #("^" 0 1 (ivy-index 0)) "minimap-mode" #("^minima" 0 7 (ivy-index 0)) #("^try" 0 4 (ivy-index 0)) "try" #("^package-" 0 9 (ivy-index 17)) #("^rainb" 0 6 (ivy-index 0)) "replace-string" #("^shell" 0 6 (ivy-index 0)) "shell" #("^map" 0 4 (ivy-index 0)) "map-query-replace-regexp" #("^repla" 0 6 (ivy-index 1)) "realgud:pdb" #("^realgud:pd" 0 11 (ivy-index 3)) "realgud:pdb-customize" #("^pd" 0 3 (ivy-index 1)) "pdb-reset" #("^re" 0 3 (ivy-index 0)) #("^realgu" 0 7 (ivy-index 2)) #("^pack" 0 5 (ivy-index 0)) #("^pdb" 0 4 (ivy-index 0)) "pdb" #("^cd" 0 3 (ivy-index 0)) "cd" #("^ter" 0 4 (ivy-index 0)) #("^proje" 0 6 (ivy-index 2)) "projectile-mode-menu" #("^tetr" 0 5 (ivy-index 1)) "tetris-end-game" "tetris" "snake" #("^snake" 0 6 (ivy-index 9)) "snake-start-game" #("^sna" 0 4 (ivy-index 0)) #("^pon" 0 4 (ivy-index 1)) "pong-quit" "pong" #("^ess-" 0 5 (ivy-index 109)) "ess-show-call-stack" #("^scroll-down" 0 12 (ivy-index 0)) "scroll-down" #("^magit-re" 0 9 (ivy-index 0)) "magit-reset" #("^magit" 0 6 (ivy-index 22)) "magit-revert" #("^package" 0 8 (ivy-index 0)) "package-delete" "set-clipboard-coding-system" #("^set-cli" 0 8 (ivy-index 0)) #("^ele" 0 4 (ivy-index 3)) "electric-indent-mode" #("^xcl" 0 4 (ivy-index 0)) "xclip-mode" #("^xc" 0 3 (ivy-index 0)) #("^simpl" 0 6 (ivy-index 0)) "simpleclip-mode" "simpleclip-paste" "set-language-environment" #("^set-la" 0 7 (ivy-index 0)) #("^jupyter-" 0 9 (ivy-index 57)) "jupyter-org-kill-block-and-results" #("^jupyter" 0 8 (ivy-index 11)) "jupyter-org-hydra/body" "jupyter-run-repl" "jupyter-repl-mode" #("^jupyter-re" 0 11 (ivy-index 0)) "jupyter-load-file" #("^jupyter-run" 0 12 (ivy-index 0)) "ein:stop" "ein:run" #("^ein" 0 4 (ivy-index 4)) "ein:ipynb-mode" "ein:login" "ein:jupyter-server-stop" #("^ein:l" 0 6 (ivy-index 0)) #("^projectile" 0 11 (ivy-index 0)) "projectile-switch-project" #("^projectile-s" 0 13 (ivy-index 1)) #("^packa" 0 6 (ivy-index 0)) #("^projectile-mo" 0 14 (ivy-index 1)) #("^projectile-co" 0 14 (ivy-index 2)) "projectile-configure-project" #("^projectile-" 0 12 (ivy-index 0)) "projectile-skel-dir-locals" #("^sql-maria" 0 10 (ivy-index 0)) "sql-mariadb" "sql-postgres" #("^sql-pos" 0 8 (ivy-index 0)) #("^sql-mari" 0 9 (ivy-index 0)) #("^python-mode" 0 12 (ivy-index 0)) "python-mode" #("^python" 0 7 (ivy-index 0)) #("^eglo" 0 5 (ivy-index 0)) "eglot" #("packa" 0 5 (ivy-index 0)) #("^magit-" 0 7 (ivy-index 24)) "magit-status" #("^pdf-view" 0 9 (ivy-index 0)) "pdf-view-mode" #("^pdf-vi" 0 7 (ivy-index 0)) #("^pdf-t" 0 6 (ivy-index 6)) "pdf-tools-enable-minor-modes" #("^r" 0 2 (ivy-index 1)) "R" #("^R" 0 2 (ivy-index 1)) "R-mode" #("^dape" 0 5 (ivy-index 0)) "dape-continue" #("^elpy-mo" 0 8 (ivy-index 1)) "elpy-mode" #("^elpy-ena" 0 9 (ivy-index 0)) "elpy-enable" #("^elpy-dis" 0 9 (ivy-index 0)) "elpy-disable" #("^elpy" 0 5 (ivy-index 0)) #("^elpy-shell-send" 0 16 (ivy-index 2)) "elpy-shell-send-file" "elpy-shell-send-buffer" "elpy-shell-send-statement-and-step" #("^elpy-con" 0 9 (ivy-index 0)) "elpy-config" #("^elpy-s" 0 7 (ivy-index 11)) "elpy-shell-send-defun-and-go" #("^run-p" 0 6 (ivy-index 1)) "run-python" #("^sql-post" 0 9 (ivy-index 0)) #("^unta" 0 5 (ivy-index 0)) "untabify" #("^elpy-mode" 0 10 (ivy-index 0)) #("^elpy-mod" 0 9 (ivy-index 1)) #("^auto-com" 0 9 (ivy-index 2)) "auto-complete-mode" #("^auto" 0 5 (ivy-index 3)) "auto-complete" #("^elpy-c" 0 7 (ivy-index 1)) #("^elpy-conf" 0 10 (ivy-index 0)) #("^elpy-confi" 0 11 (ivy-index 0)) #("^nyan" 0 5 (ivy-index 4)) "nyan-start-animation" "nyan-start-music" "nyan-mode" "nyan-scroll-buffer" #("^nya" 0 4 (ivy-index 1)) "nyan-toggle-wavy-trail" #("nyan-" 0 5 (ivy-index 7)) #("^spaceline-toggle-n" 0 19 (ivy-index 1)) "spaceline-toggle-nyan-cat-on" "spaceline-toggle-nyan-cat" "elpy-autopep8-fix-code" #("^elpy-menu" 0 10 (ivy-index 0)) "elpy-menu" #("^elpy-" 0 6 (ivy-index 16)) "elpy-check" #("^elpy-config" 0 12 (ivy-index 0)) #("^elpy-en" 0 8 (ivy-index 0)) #("^pyve" 0 5 (ivy-index 5)) "pyvenv-workon" #("^pyvenv" 0 7 (ivy-index 6)) "pyvenv-activate" #("^elpy-rpc" 0 9 (ivy-index 1)) "elpy-rpc-restart" #("^elpy-rp" 0 8 (ivy-index 1)) #("^ansi" 0 5 (ivy-index 1)) "ansi-term" #("^python-mo" 0 10 (ivy-index 0)) #("^sql" 0 4 (ivy-index 1)) #("^conf-mo" 0 8 (ivy-index 0)) "conf-mode" #("linu" 0 4 (ivy-index 0)) "linum-mode" #("^sql-hel" 0 8 (ivy-index 0)) "sql-help" #("^sql-set" 0 8 (ivy-index 1)) "sql-set-sqli-buffer" "sql-set-product" #("^sql-mode" 0 9 (ivy-index 0)) "sql-mode" #("^markdown-pre" 0 13 (ivy-index 0)) "markdown-preview-cleanup" #("^markdown-previ" 0 15 (ivy-index 1)) "markdown-preview" "markdown-preview-mode" "markdown-preview-open-browser" #("^markdown-vi" 0 12 (ivy-index 0)) "markdown-view-mode" #("^markdown-v" 0 11 (ivy-index 0)) #("^markdown-p" 0 11 (ivy-index 0)) #("^markdown-mode" 0 14 (ivy-index 2)) "markdown-mode" #("^markdo" 0 7 (ivy-index 2)) #("^ra" 0 3 (ivy-index 1)) #("^conf-mod" 0 9 (ivy-index 0)) #("^myter" 0 6 (ivy-index 1)) "myterminal-controls-open-controls" #("^magit-rebase" 0 13 (ivy-index 2)) "magit-rebase" #("^magit-log-current" 0 18 (ivy-index 0)) "magit-log-current" #("^magit-log --g" 0 14 (ivy-index 0)) "magit-log:--grep" #("^magit-lo" 0 9 (ivy-index 1)) "magit-log:-G" #("^magit-log" 0 10 (ivy-index 8)) "magit-log" #("^centaur-tabs-mode" 0 18 (ivy-index 0)) "centaur-tabs-mode" #("^centaur-tabs-g" 0 15 (ivy-index 0)) "centaur-tabs-group-buffer-groups" #("^magit-merge" 0 12 (ivy-index 3)) "magit-merge" #("^magit-status" 0 13 (ivy-index 2)) #("^ansi-" 0 6 (ivy-index 1)) #("^conf-mode" 0 10 (ivy-index 0)) #("^magit-stat" 0 11 (ivy-index 2)) #("^ansi-te" 0 8 (ivy-index 0)) #("^java" 0 5 (ivy-index 1)) "javascript-mode" #("^customize-va" 0 13 (ivy-index 0)) "customize-variable" #("^indent-gui" 0 11 (ivy-index 0)) "indent-guide-mode" #("^package-lis" 0 12 (ivy-index 0)) "package-list-packages" #("^web-mode" 0 9 (ivy-index 82)) "web-mode" #("ansi" 0 4 (ivy-index 2)) #("^cua" 0 4 (ivy-index 5)) "cua-toggle-rectangle-mark" "cua-paste" "cua-paste-pop" "cua-cut-region" #("^cua-sc" 0 7 (ivy-index 1)) "cua-scroll-down" #("^cua-s" 0 6 (ivy-index 2)) "cua-selection-mode"))
(setq swiper-history '(#("drw_clr" 0 7 (ivy-index 0)) #(" drw_clr_create(Drw *drw, Clr *dest, const char *clrname)" 0 1 (swiper-line-number 184 display "184 ") 1 15 (fontified t face font-lock-function-name-face) 15 16 (fontified t c-type c-decl-arg-start) 16 19 (fontified t face font-lock-type-face) 19 21 (fontified t) 21 24 (fontified t face font-lock-variable-name-face) 24 25 (fontified t c-type c-decl-arg-start) 25 26 (fontified t) 26 29 (fontified t face font-lock-type-face) 29 31 (fontified t) 31 35 (fontified t face font-lock-variable-name-face) 35 36 (fontified t c-type c-decl-arg-start) 36 37 (fontified t) 37 42 (fontified t face font-lock-keyword-face) 42 43 (fontified t) 43 47 (fontified t face font-lock-type-face) 47 49 (fontified t) 49 56 (fontified t face font-lock-variable-name-face) 56 57 (fontified t)) #("drawbar" 0 7 (ivy-index 2)) #(" drawbar(Monitor *m)" 0 1 (swiper-line-number 921 display "921  ") 1 8 (fontified t face font-lock-function-name-face) 8 9 (fontified t c-type c-decl-arg-start) 9 16 (fontified t face font-lock-type-face) 16 18 (fontified t) 18 19 (fontified t face font-lock-variable-name-face) 19 20 (fontified t)) #("/* vari" 0 7 (ivy-index 0)) #(" /* variables */" 0 1 (display "273  " swiper-line-number 273) 1 2 (c-is-sws t c-in-sws t face font-lock-comment-delimiter-face fontified t) 2 4 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 4 13 (c-in-sws t face font-lock-comment-face fontified t) 13 16 (c-in-sws t face font-lock-comment-delimiter-face fontified t)) #("updatege" 0 8 (ivy-index 4)) #(" updategeom(void)" 0 1 (display "2223 " swiper-line-number 2223) 1 11 (face font-lock-function-name-face fontified t) 11 12 (c-type c-decl-arg-start fontified t) 12 16 (face font-lock-type-face fontified t) 16 17 (fontified t)) #("updatebars" 0 10 (ivy-index 3)) #(" updatebars(void)" 0 1 (display "2170 " swiper-line-number 2170) 1 11 (face font-lock-function-name-face fontified t) 11 12 (c-type c-decl-arg-start fontified t) 12 16 (face font-lock-type-face fontified t) 16 17 (fontified t)) #("togglebar" 0 9 (ivy-index 1)) #(" togglebar(const Arg *arg)" 0 1 (display "2049 " swiper-line-number 2049) 1 10 (face font-lock-function-name-face fontified t) 10 11 (c-type c-decl-arg-start fontified t) 11 16 (face font-lock-keyword-face fontified t) 16 17 (fontified t) 17 20 (face font-lock-type-face fontified t) 20 22 (fontified t) 22 25 (face font-lock-variable-name-face fontified t) 25 26 (fontified t)) "togg" #("draw" 0 4 (ivy-index 2)) "p_F_e_C" #("setup" 0 5 (ivy-index 1)) #(" setup(void)" 0 1 (display "2094 " swiper-line-number 2094) 1 6 (face font-lock-function-name-face fontified t) 6 7 (c-type c-decl-arg-start fontified t) 7 11 (face font-lock-type-face fontified t) 11 12 (fontified t)) #("configureno" 0 11 (ivy-index 3)) #(" configurenotify(XEvent *e)" 0 1 (swiper-line-number 687 display "687  ") 1 16 (fontified t face font-lock-function-name-face) 16 17 (fontified t c-type c-decl-arg-start) 17 23 (fontified t face font-lock-type-face) 23 25 (fontified t) 25 26 (fontified t face font-lock-variable-name-face) 26 27 (fontified t)) #("sp" 0 2 (ivy-index 0)) #("  * whenever a new event has been fetched. This allows event dispatching" 0 1 (swiper-line-number 10 display "10   ") 1 72 (fontified t face font-lock-comment-face c-in-sws t)) "indent" #("indent" 0 6 (ivy-index 16)) #("   indent-guide                   20160630       available    melpa-stable show vertical lines to guide indentation" 0 1 (swiper-line-number 1665 display "1665 ") 1 3 (tabulated-list-id #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) tabulated-list-entry [("indent-guide" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) action package-menu-describe-package) #("20160630" 0 8 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa-stable" 0 12 (font-lock-face package-status-available)) #("show vertical lines to guide indentation" 0 40 (font-lock-face package-description))]) 3 15 (button (t) category default-button face package-name font-lock-face package-name follow-link t package-desc #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) action package-menu-describe-package tabulated-list-column-name "Package" tabulated-list-id #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) tabulated-list-entry [("indent-guide" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) action package-menu-describe-package) #("20160630" 0 8 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa-stable" 0 12 (font-lock-face package-status-available)) #("show vertical lines to guide indentation" 0 40 (font-lock-face package-description))]) 15 16 (tabulated-list-column-name "Package" tabulated-list-id #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) tabulated-list-entry [("indent-guide" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) action package-menu-describe-package) #("20160630" 0 8 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa-stable" 0 12 (font-lock-face package-status-available)) #("show vertical lines to guide indentation" 0 40 (font-lock-face package-description))]) 16 34 (display (space :align-to 33) tabulated-list-column-name "Package" tabulated-list-id #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) tabulated-list-entry [("indent-guide" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) action package-menu-describe-package) #("20160630" 0 8 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa-stable" 0 12 (font-lock-face package-status-available)) #("show vertical lines to guide indentation" 0 40 (font-lock-face package-description))]) 34 42 (font-lock-face package-status-available help-echo #("Version: 20160630" 9 17 (font-lock-face package-status-available)) tabulated-list-column-name "Version" tabulated-list-id #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) tabulated-list-entry [("indent-guide" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) action package-menu-describe-package) #("20160630" 0 8 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa-stable" 0 12 (font-lock-face package-status-available)) #("show vertical lines to guide indentation" 0 40 (font-lock-face package-description))]) 42 43 (tabulated-list-column-name "Version" tabulated-list-id #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) tabulated-list-entry [("indent-guide" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) action package-menu-describe-package) #("20160630" 0 8 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa-stable" 0 12 (font-lock-face package-status-available)) #("show vertical lines to guide indentation" 0 40 (font-lock-face package-description))]) 43 49 (display (space :align-to 48) tabulated-list-column-name "Version" tabulated-list-id #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) tabulated-list-entry [("indent-guide" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) action package-menu-describe-package) #("20160630" 0 8 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa-stable" 0 12 (font-lock-face package-status-available)) #("show vertical lines to guide indentation" 0 40 (font-lock-face package-description))]) 49 58 (font-lock-face package-status-available help-echo #("Status: available" 8 17 (font-lock-face package-status-available)) tabulated-list-column-name "Status" tabulated-list-id #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) tabulated-list-entry [("indent-guide" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) action package-menu-describe-package) #("20160630" 0 8 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa-stable" 0 12 (font-lock-face package-status-available)) #("show vertical lines to guide indentation" 0 40 (font-lock-face package-description))]) 58 59 (tabulated-list-column-name "Status" tabulated-list-id #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) tabulated-list-entry [("indent-guide" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) action package-menu-describe-package) #("20160630" 0 8 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa-stable" 0 12 (font-lock-face package-status-available)) #("show vertical lines to guide indentation" 0 40 (font-lock-face package-description))]) 59 62 (display (space :align-to 61) tabulated-list-column-name "Status" tabulated-list-id #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) tabulated-list-entry [("indent-guide" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) action package-menu-describe-package) #("20160630" 0 8 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa-stable" 0 12 (font-lock-face package-status-available)) #("show vertical lines to guide indentation" 0 40 (font-lock-face package-description))]) 62 69 (font-lock-face package-status-available help-echo #("Archive: melpa-stable" 9 21 (font-lock-face package-status-available)) tabulated-list-column-name "Archive" tabulated-list-id #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) tabulated-list-entry [("indent-guide" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) action package-menu-describe-package) #("20160630" 0 8 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa-stable" 0 12 (font-lock-face package-status-available)) #("show vertical lines to guide indentation" 0 40 (font-lock-face package-description))]) 69 74 (font-lock-face package-status-available display "…" help-echo #("Archive: melpa-stable" 9 21 (font-lock-face package-status-available)) tabulated-list-column-name "Archive" tabulated-list-id #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) tabulated-list-entry [("indent-guide" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) action package-menu-describe-package) #("20160630" 0 8 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa-stable" 0 12 (font-lock-face package-status-available)) #("show vertical lines to guide indentation" 0 40 (font-lock-face package-description))]) 74 75 (tabulated-list-column-name "Archive" tabulated-list-id #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) tabulated-list-entry [("indent-guide" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) action package-menu-describe-package) #("20160630" 0 8 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa-stable" 0 12 (font-lock-face package-status-available)) #("show vertical lines to guide indentation" 0 40 (font-lock-face package-description))]) 75 115 (font-lock-face package-description help-echo #("Description: show vertical lines to guide indentation" 13 53 (font-lock-face package-description)) tabulated-list-column-name "Description" tabulated-list-id #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) tabulated-list-entry [("indent-guide" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) action package-menu-describe-package) #("20160630" 0 8 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa-stable" 0 12 (font-lock-face package-status-available)) #("show vertical lines to guide indentation" 0 40 (font-lock-face package-description))])) "scheme[SchemeNorm][ColBg" #("scheme[SchemeNorm][ColB" 0 23 (ivy-index 8)) #(" 	XSetForeground(dpy, drw->gc, scheme[SchemeNorm][ColBg].pixel);" 0 1 (swiper-line-number 2761 display "2761 ") 1 2 (fontified t c-is-sws t) 2 3 (c-is-sws t fontified t) 3 49 (fontified t) 49 50 (fontified t) 50 51 (fontified t) 51 52 (fontified t) 52 53 (fontified t) 53 54 (fontified t) 54 55 (fontified t) 55 56 (fontified t) 56 57 (fontified t) 57 58 (fontified t) 58 59 (fontified t) 59 60 (fontified t) 60 61 (fontified t) 61 62 (fontified t) 62 63 (fontified t) 63 64 (fontified t rear-nonsticky t)) #("updatesys" 0 9 (ivy-index 18)) #(" updatesystray(void)" 0 1 (swiper-line-number 2700 display "2700 ") 1 14 (fontified t face font-lock-function-name-face) 14 15 (fontified t c-type c-decl-arg-start) 15 19 (fontified t face font-lock-type-face) 19 20 (fontified t)) #("mai" 0 3 (ivy-index 0)) #(" main(int argc, char *argv[])" 0 1 (swiper-line-number 814 display "814 ") 1 5 (fontified t face font-lock-function-name-face) 5 6 (fontified t c-type c-decl-arg-start) 6 9 (fontified t face font-lock-type-face) 9 10 (fontified t) 10 14 (fontified t face font-lock-variable-name-face) 14 15 (fontified t c-type c-decl-arg-start) 15 16 (fontified t) 16 20 (fontified t face font-lock-type-face) 20 22 (fontified t) 22 26 (fontified t face font-lock-variable-name-face) 26 29 (fontified t))))
(setq ido-buffer-history '("*shell*" "*gud*" "*Python*" "slstatus.c" "*terminal*" "emacs.org" "slstatus" "config.def.h" "config.def.h<slstatus>" "blocks.def.h" "rofi_network" "snake-scores" "*scratch*" "*EGLOT (UFPR_Estatistica/(python-mode)) events*" "prova_001.r" "dwm.c" "NotasAula.pdf" "config.h" "100-graficos-tabelas-uni.R" "*SQL: MariaDB*" "achemaior.py" "sl-wttr.sh" "dmenu-docker-images" "dmenu-power" "dmenu-atalhos-programas" "equacao_segundo_grau.py" "media_aritimetica_3_valores.py" "calcula_raiz_de_3_numeros.py" "teste.py" "*Elpy Config*" "*Customize Option: Python Flymake Command*" "if_monitor.sh" "*ansi-term*" "dmenu-teclados" "tabela_funcionarios.sql" "aula001.sql" "banco-inicial.sql" "*SQL: Postgres*" "dmenu-docker-compose.sh" "HELLO" "index.theme" "icon-theme.cache" "]" "action-unavailable-symbolic.svg" "autostart.sh" "dmenu-window" "battery_status.sh" "init.el" "dunstrc" "*Compile-Log*" "picom.conf" "index.html" "config.mk" "Untitled<2>" "Untitled<3>" "Untitled" "myinit.org" "config" "muta_microfone" "config.def.h<.dwm>" "block-battery" "dwmbar-powerline" "diminui_volume" "muta_volume" "*Messages*" "*Async-native-compile-log*" "*Warnings*" "magit-process: .dotfiles" "magit: .dotfiles" "volume_icon.sh" "app.js" "x.c" "x.c.rej" "config.def.h.rej" "config.def.h<st>"))
(setq file-name-history '(#("/home/anderson/.dotfiles/.config/st/README" 0 42 (ivy-index 7)) #("/home/anderson/.config/st/config.def.h" 0 38 (ivy-index 0)) #("/home/anderson/.programas/st/" 0 29 (ivy-index 0)) #("/home/anderson/.dwm/config.def.h" 0 32 (ivy-index 0)) #("/home/anderson/.programas/dwm_6.5/dwm.c.rej" 0 43 (ivy-index 0)) "~/.dwm/config.def.h" #("/home/anderson/.programas/dwm_6.5/" 0 34 (ivy-index 5)) "~/git/Educacional/Programa_Desenvolve_Boticario/015_Python_Numpy/numpy-dados/README.md" #("/home/anderson/.local/bin/dmenu/dmenu-window" 0 44 (ivy-index 12)) #("/home/anderson/git/Educacional/UFPR_Estatistica/CE301_Estatistica_Basica/Exercicios/000-ambientacao-ao-R.R" 0 106 (ivy-index 5)) "~/.emacs.d/emacs.org" "/home/anderson/.emacs.d/init.el" "~/git/Educacional/UFPR_Estatistica/CE301_Estatistica_Basica/Exercicios/Prova_01_em_R/GRR20243150_ANDERSON_JOSE_SOUZA_INACIO.R" #("/home/anderson/.dwm/autostart_blocking.sh" 0 41 (ivy-index 1)) #("/home/anderson/.Xresources" 0 26 (ivy-index 0)) #("/home/anderson/.dotfiles/.config/dwmblocks/blocks.def.h" 0 55 (ivy-index 7)) #("/home/anderson/.dotfiles/.config/slstatus/" 0 42 (ivy-index 0)) "/home/anderson/.dotfiles/.emacs.d/emacs.org" #("/home/anderson/.dotfiles/" 0 25 (ivy-index 0)) #("/home/anderson/.xinitrc" 0 23 (ivy-index 0)) #("/home/anderson/git/Educacional/UFPR_Estatistica/CI182_Fundamentos_Programacao_Computadores/" 0 91 (ivy-index 0)) #("/home/anderson/git/Educacional/UFPR_Estatistica/CI182_Fundamentos_Programacao_Computadores/exercicios/teste_while.py" 0 116 (ivy-index 0)) #("/home/anderson/.emacs.d/emacs.org" 0 33 (ivy-index 3)) #("/home/anderson/.emacs.d/projects" 0 32 (ivy-index 19)) #("/home/anderson/git/Educacional/Programa_Desenvolve_Boticario/013_Python_Ciencia_Dados/Projeto_Python_Data_Science.ipynb" 0 119 (ivy-index 2)) #("/home/anderson/git/Educacional/UFPR_Estatistica/SobreviventesTitanic.r" 0 70 (ivy-index 0)) #("/home/anderson/git/Educacional/Programa_Desenvolve_Boticario/007_PostgreSQL/" 0 76 (ivy-index 9)) #("/home/anderson/git;Edu" 0 22 (ivy-index 0)) #("/home/anderson/git/Educacional/UFPR_Estatistica/CE301_Estatistica_Basica/histograma_em_r.r" 0 90 (ivy-index 0)) "~/git/Educacional/Programa_Desenvolve_Boticario/012_PowerBI_Tratamento_Dados/power_query_dump.sql" "~/git/win10vm/win10.xml" #("/home/anderson/.dwm/autostart.sh" 0 32 (ivy-index 0)) #("/home/anderson/.config/slstatus/" 0 32 (ivy-index 0)) #("/home/anderson/git/Educacional/UFPR_Estatistica/CE301_Estatistica_Basica/100-graficos-tabelas-uni.R" 0 99 (ivy-index 14)) #("/home/anderson/git/Educacional/UFPR_Estatistica/CE301_Estatistica_Basica/Livro_Estatitica_Basica/testes.r" 0 105 (ivy-index 0)) #("/home/anderson/git/Educacional/UFPR_Estatistica/CE301_Estatistica_Basica/" 0 73 (ivy-index 4)) #("/var/spool/cron/crontabs/anderson" 0 33 (ivy-index 0)) #("/var/spool/cron/crontabs/" 0 25 (ivy-index 2)) "/tmp/crontab.uSJaXd/crontab" "/tmp/crontab.vtEVge/crontab" "/home/anderson/.dotfiles/.local/bin/sl-wttr.sh~" #("/home/anderson/git/Educacional/UFPR_Estatistica/CE301_Estatistica_Basica/101-medidas-uni.R" 0 90 (ivy-index 0)) #("/home/anderson/git/Educacional/Programa_Desenvolve_Boticario/008_Postgres_views_funcoes_consultas/dados-aula-2.sql" 0 114 (ivy-index 5)) #("/home/anderson/git/Educacional/UFPR_Estatistica/CI182_Fundamentos_Programacao_Computadores/calcula_raiz_de_3_numeros.py" 0 119 (ivy-index 0)) #("/home/anderson/.dotfiles/.config/slstatus/config.def.h" 0 54 (ivy-index 0)) #("/home/anderson/.local/bin/battery_status.sh" 0 43 (ivy-index 1)) #("/home/anderson/teste.py" 0 23 (ivy-index 0)) #("/home/anderson/.dotfiles/.local/bin/dmenu/" 0 42 (ivy-index 2)) #("/home/anderson/.dotfiles/.local/bin/dmenu/dmenu-docker-lista-funcionando" 0 72 (ivy-index 0)) #("/home/anderson/.dotfiles/.local/bin/dmenu/dmenu-atalhos-programas" 0 65 (ivy-index 0)) #("/home/anderson/.dotfiles/.local/bin/dmenu/dmenu-docker-images" 0 61 (ivy-index 4)) #("/home/anderson/dmenu-docker-compose.sh" 0 38 (ivy-index 2)) #("/home/anderson/.dotfiles/.dwm/config.def.h" 0 42 (ivy-index 0)) "/home/anderson/.emacs.d/myinit.org" #("/home/anderson/git/Educacional/Programa_Desenvolve_Boticario/007_PostgreSQL/tabela_funcionarios.sql" 0 99 (ivy-index 9)) "/home/anderson/.dotfiles/.config/dunst/dunstrc" #("/home/anderson/.local/bin/volume_icon.sh" 0 40 (ivy-index 6)) #("/home/anderson/git/Educacional/Programa_Desenvolve_Boticario/006_Git_Github/projeto_inicial/index.html" 0 102 (ivy-index 7)) #("/home/anderson/git/Educacional/Programa_Desenvolve_Boticario/006_Git_Github/projeto_inicial/app.js" 0 98 (ivy-index 3)) #("/home/anderson/.config/picom.conf" 0 33 (ivy-index 3)) #("/home/anderson/.dotfiles/.dwm/" 0 30 (ivy-index 0)) #("/home/anderson/.dotfiles/.Xresources" 0 36 (ivy-index 0)) "~/.dotfiles/.emacs.d/init.el"))
(setq projectile-project-command-history '#s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data ()))
(setq kill-ring '(#("/* Terminal colors (16 first used in escape sequence) */
static const char *colorname[] = {
  /* 8 normal colors */
  [0] = \"#282828\", /* hard contrast: #1d2021 / soft contrast: #32302f */
  [1] = \"#ea6962\", /* red     */
  [2] = \"#a9b665\", /* green   */
  [3] = \"#d8a657\", /* yellow  */
  [4] = \"#7daea3\", /* blue    */
  [5] = \"#d3869b\", /* magenta */
  [6] = \"#89b482\", /* cyan    */
  [7] = \"#d4be98\", /* white   */

  /* 8 bright colors */
  [8]  = \"#928374\", /* black   */
  [9]  = \"#ef938e\", /* red     */
  [10] = \"#bbc585\", /* green   */
  [11] = \"#e1bb7e\", /* yellow  */
  [12] = \"#9dc2ba\", /* blue    */
  [13] = \"#e1acbb\", /* magenta */
  [14] = \"#a7c7a2\", /* cyan    */
  [15] = \"#e2d3ba\", /* white   */
};

/*
 * Default colors (colorname index)
 * foreground, background, cursor
 */

unsigned int defaultfg = 15;
unsigned int defaultbg = 0;
unsigned int defaultcs = 15;
static unsigned int defaultrcs = 257;
" 0 1 (fontified t face font-lock-comment-delimiter-face c-in-sws t c-is-sws t) 1 3 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 3 53 (fontified t face font-lock-comment-face c-in-sws t) 53 56 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 56 57 (fontified t c-in-sws t) 57 58 (fontified t c-is-sws t face font-lock-keyword-face) 58 63 (fontified t face font-lock-keyword-face) 63 64 (fontified t) 64 69 (fontified t face font-lock-keyword-face) 69 70 (fontified t) 70 73 (fontified t face font-lock-type-face) 73 74 (fontified t c-type c-decl-id-start face font-lock-type-face) 74 76 (fontified t) 76 85 (fontified t face font-lock-variable-name-face) 85 92 (fontified t) 92 94 (fontified t c-in-sws t c-is-sws t) 94 95 (fontified t c-is-sws t c-in-sws t face font-lock-comment-delimiter-face) 95 97 (fontified t c-in-sws t face font-lock-comment-delimiter-face) 97 112 (fontified t c-in-sws t face font-lock-comment-face) 112 115 (fontified t c-in-sws t face font-lock-comment-delimiter-face) 115 116 (fontified t c-in-sws t) 116 118 (fontified t c-is-sws t c-in-sws t) 118 119 (fontified t c-is-sws t) 119 124 (fontified t) 124 133 (fontified t face font-lock-string-face) 133 135 (fontified t) 135 138 (fontified t face font-lock-comment-delimiter-face) 138 185 (fontified t face font-lock-comment-face) 185 188 (fontified t face font-lock-comment-delimiter-face) 188 197 (fontified t) 197 206 (fontified t face font-lock-string-face) 206 208 (fontified t) 208 211 (fontified t face font-lock-comment-delimiter-face) 211 214 (fontified t face font-lock-comment-face) 214 221 (fontified t face font-lock-comment-delimiter-face) 221 230 (fontified t) 230 239 (fontified t face font-lock-string-face) 239 241 (fontified t) 241 244 (fontified t face font-lock-comment-delimiter-face) 244 249 (fontified t face font-lock-comment-face) 249 254 (fontified t face font-lock-comment-delimiter-face) 254 263 (fontified t) 263 272 (fontified t face font-lock-string-face) 272 274 (fontified t) 274 277 (fontified t face font-lock-comment-delimiter-face) 277 283 (fontified t face font-lock-comment-face) 283 287 (fontified t face font-lock-comment-delimiter-face) 287 296 (fontified t) 296 305 (fontified t face font-lock-string-face) 305 307 (fontified t) 307 310 (fontified t face font-lock-comment-delimiter-face) 310 314 (fontified t face font-lock-comment-face) 314 320 (fontified t face font-lock-comment-delimiter-face) 320 329 (fontified t) 329 338 (fontified t face font-lock-string-face) 338 340 (fontified t) 340 343 (fontified t face font-lock-comment-delimiter-face) 343 350 (fontified t face font-lock-comment-face) 350 353 (fontified t face font-lock-comment-delimiter-face) 353 362 (fontified t) 362 371 (fontified t face font-lock-string-face) 371 373 (fontified t) 373 376 (fontified t face font-lock-comment-delimiter-face) 376 380 (fontified t face font-lock-comment-face) 380 386 (fontified t face font-lock-comment-delimiter-face) 386 395 (fontified t) 395 404 (fontified t face font-lock-string-face) 404 405 (fontified t) 405 406 (fontified t c-in-sws t c-is-sws t) 406 407 (fontified t c-in-sws t c-is-sws t face font-lock-comment-delimiter-face) 407 409 (fontified t c-in-sws t face font-lock-comment-delimiter-face) 409 414 (fontified t c-in-sws t face font-lock-comment-face) 414 419 (fontified t c-in-sws t face font-lock-comment-delimiter-face) 419 420 (fontified t c-in-sws t) 420 421 (fontified t c-is-sws t) 421 423 (fontified t) 423 426 (fontified t face font-lock-comment-delimiter-face) 426 441 (fontified t face font-lock-comment-face) 441 444 (fontified t face font-lock-comment-delimiter-face) 444 454 (fontified t) 454 463 (fontified t face font-lock-string-face) 463 465 (fontified t) 465 468 (fontified t face font-lock-comment-delimiter-face) 468 473 (fontified t face font-lock-comment-face) 473 478 (fontified t face font-lock-comment-delimiter-face) 478 488 (fontified t) 488 497 (fontified t face font-lock-string-face) 497 499 (fontified t) 499 502 (fontified t face font-lock-comment-delimiter-face) 502 505 (fontified t face font-lock-comment-face) 505 512 (fontified t face font-lock-comment-delimiter-face) 512 522 (fontified t) 522 531 (fontified t face font-lock-string-face) 531 533 (fontified t) 533 536 (fontified t face font-lock-comment-delimiter-face) 536 541 (fontified t face font-lock-comment-face) 541 546 (fontified t face font-lock-comment-delimiter-face) 546 556 (fontified t) 556 565 (fontified t face font-lock-string-face) 565 567 (fontified t) 567 570 (fontified t face font-lock-comment-delimiter-face) 570 576 (fontified t face font-lock-comment-face) 576 580 (fontified t face font-lock-comment-delimiter-face) 580 590 (fontified t) 590 599 (fontified t face font-lock-string-face) 599 601 (fontified t) 601 604 (fontified t face font-lock-comment-delimiter-face) 604 608 (fontified t face font-lock-comment-face) 608 614 (fontified t face font-lock-comment-delimiter-face) 614 624 (fontified t) 624 633 (fontified t face font-lock-string-face) 633 635 (fontified t) 635 638 (fontified t face font-lock-comment-delimiter-face) 638 645 (fontified t face font-lock-comment-face) 645 648 (fontified t face font-lock-comment-delimiter-face) 648 658 (fontified t) 658 667 (fontified t face font-lock-string-face) 667 669 (fontified t) 669 672 (fontified t face font-lock-comment-delimiter-face) 672 676 (fontified t face font-lock-comment-face) 676 682 (fontified t face font-lock-comment-delimiter-face) 682 692 (fontified t) 692 701 (fontified t face font-lock-string-face) 701 703 (fontified t) 703 706 (fontified t face font-lock-comment-delimiter-face) 706 711 (fontified t face font-lock-comment-face) 711 716 (fontified t face font-lock-comment-delimiter-face) 716 721 (fontified t) 721 722 (fontified t face font-lock-comment-delimiter-face c-in-sws t c-is-sws t) 722 723 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 723 794 (fontified t face font-lock-comment-face c-in-sws t) 794 797 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 797 799 (fontified t c-in-sws t) 799 800 (fontified t c-is-sws t face font-lock-type-face) 800 807 (fontified t face font-lock-type-face) 807 808 (fontified t) 808 810 (fontified t face font-lock-type-face) 810 811 (fontified t c-type c-decl-id-start face font-lock-type-face) 811 812 (fontified t) 812 821 (fontified t face font-lock-variable-name-face) 821 828 (fontified t) 828 836 (fontified t face font-lock-type-face) 836 837 (fontified t) 837 839 (fontified t face font-lock-type-face) 839 840 (fontified t c-type c-decl-id-start face font-lock-type-face) 840 841 (fontified t) 841 850 (fontified t face font-lock-variable-name-face) 850 856 (fontified t) 856 864 (fontified t face font-lock-type-face) 864 865 (fontified t) 865 867 (fontified t face font-lock-type-face) 867 868 (fontified t c-type c-decl-id-start face font-lock-type-face) 868 869 (fontified t) 869 878 (fontified t face font-lock-variable-name-face) 878 885 (fontified t) 885 891 (fontified t face font-lock-keyword-face) 891 892 (fontified t) 892 900 (fontified t face font-lock-type-face) 900 901 (fontified t) 901 903 (fontified t face font-lock-type-face) 903 904 (fontified t c-type c-decl-id-start face font-lock-type-face) 904 905 (fontified t) 905 915 (fontified t face font-lock-variable-name-face) 915 923 (fontified t)) #("       \"Comic code:size=12:antialias=true:autohint=true:pixelsize=16\"," 0 7 (fontified t) 7 69 (face font-lock-string-face fontified t) 69 70 (fontified t)) #("/* See LICENSE file for copyright and license details. */" 0 1 (fontified t face font-lock-comment-delimiter-face c-in-sws t c-is-sws t) 1 3 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 3 54 (fontified t face font-lock-comment-face c-in-sws t) 54 56 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 56 57 (fontified t face font-lock-comment-delimiter-face c-in-sws t)) #("fonts[] = {" 0 5 (fontified t face font-lock-variable-name-face) 5 11 (fontified t)) #("       \"Comic code:size=12:antialias=true:autohint=true:pixelsize=16\"," 0 7 (fontified t) 7 69 (fontified t face font-lock-string-face) 69 70 (fontified t)) #("+unsigned int defaultfg = 15;
+unsigned int defaultbg = 0;
+static unsigned int defaultcs = 15;" 0 1 (fontified t face diff-indicator-added) 1 30 (fontified t face diff-added) 30 31 (fontified t face diff-indicator-added) 31 59 (fontified t face diff-added) 59 60 (fontified t face diff-indicator-added) 60 88 (fontified t face diff-added) 88 95 (fontified t face diff-added)) #("+ * foreground, background, cursor" 0 1 (fontified t face diff-indicator-added) 1 34 (fontified t face diff-added)) #("+  /* 8 normal colors */
+  [0] = \"#282828\", /* hard contrast: #1d2021 / soft contrast: #32302f */
+  [1] = \"#ea6962\", /* red     */
+  [2] = \"#a9b665\", /* green   */
+  [3] = \"#d8a657\", /* yellow  */
+  [4] = \"#7daea3\", /* blue    */
+  [5] = \"#d3869b\", /* magenta */
+  [6] = \"#89b482\", /* cyan    */
+  [7] = \"#d4be98\", /* white   */
+
+  /* 8 bright colors */
+  [8]  = \"#928374\", /* black   */
+  [9]  = \"#ef938e\", /* red     */
+  [10] = \"#bbc585\", /* green   */
+  [11] = \"#e1bb7e\", /* yellow  */
+  [12] = \"#9dc2ba\", /* blue    */
+  [13] = \"#e1acbb\", /* magenta */
+  [14] = \"#a7c7a2\", /* cyan    */
+  [15] = \"#e2d3ba\", /* white   */
+};" 0 1 (fontified t face diff-indicator-added) 1 25 (fontified t face diff-added) 25 26 (fontified t face diff-indicator-added) 26 99 (fontified t face diff-added) 99 100 (fontified t face diff-indicator-added) 100 133 (fontified t face diff-added) 133 134 (fontified t face diff-indicator-added) 134 167 (fontified t face diff-added) 167 168 (fontified t face diff-indicator-added) 168 201 (fontified t face diff-added) 201 202 (fontified t face diff-indicator-added) 202 235 (fontified t face diff-added) 235 236 (fontified t face diff-indicator-added) 236 269 (fontified t face diff-added) 269 270 (fontified t face diff-indicator-added) 270 303 (fontified t face diff-added) 303 304 (fontified t face diff-indicator-added) 304 337 (fontified t face diff-added) 337 338 (fontified t face diff-indicator-added) 338 339 (fontified t face diff-added) 339 340 (fontified t face diff-indicator-added) 340 364 (fontified t face diff-added) 364 365 (fontified t face diff-indicator-added) 365 399 (fontified t face diff-added) 399 400 (fontified t face diff-indicator-added) 400 434 (fontified t face diff-added) 434 435 (fontified t face diff-indicator-added) 435 469 (fontified t face diff-added) 469 470 (fontified t face diff-indicator-added) 470 504 (fontified t face diff-added) 504 505 (fontified t face diff-indicator-added) 505 539 (fontified t face diff-added) 539 540 (fontified t face diff-indicator-added) 540 574 (fontified t face diff-added) 574 575 (fontified t face diff-indicator-added) 575 609 (fontified t face diff-added) 609 610 (fontified t face diff-indicator-added) 610 644 (fontified t face diff-added) 644 645 (fontified t face diff-indicator-added) 645 647 (fontified t face diff-added)) #("Mod1Mask" 0 8 (fontified t)) "rofialttabcmd" #("{ MODKEY,						XK_d,	   spawn,          {.v = roficmd } }," 0 1 (c-type c-not-decl fontified t) 1 8 (fontified t) 8 9 (c-type c-not-decl fontified t) 9 19 (fontified t) 19 20 (c-type c-not-decl fontified t) 20 29 (fontified t) 29 30 (c-type c-not-decl fontified t) 30 58 (fontified t)) #("rofialttabcmd" 0 4 (face font-lock-variable-name-face fontified t) 4 5 (face font-lock-variable-name-face fontified t) 5 6 (face font-lock-variable-name-face fontified t) 6 7 (face font-lock-variable-name-face fontified t) 7 8 (face font-lock-variable-name-face fontified t) 8 9 (face font-lock-variable-name-face fontified t) 9 10 (face font-lock-variable-name-face fontified t) 10 11 (face font-lock-variable-name-face fontified t) 11 12 (face font-lock-variable-name-face fontified t) 12 13 (face font-lock-variable-name-face fontified t)) #("static const char *roficmd[]   = { \"/bin/sh\", \"-c\", \"rofi -m -4 -modi 'window,drun,ssh,combi' -font 'Comic code 15' -show drun -icon-theme 'Gruvbox' -show-icons -theme 'gruvbox-dark' -sidebar-mode\", NULL };" 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t) 7 12 (face font-lock-keyword-face fontified t) 12 13 (fontified t) 13 16 (face font-lock-type-face fontified t) 16 17 (face font-lock-type-face c-type c-decl-id-start fontified t) 17 19 (fontified t) 19 26 (face font-lock-variable-name-face fontified t) 26 35 (fontified t) 35 44 (face font-lock-string-face fontified t) 44 46 (fontified t) 46 50 (face font-lock-string-face fontified t) 50 52 (fontified t) 52 70 (face font-lock-string-face fontified t) 70 71 (face font-lock-string-face fontified t syntax-table (1)) 71 92 (face font-lock-string-face fontified t) 92 93 (face font-lock-string-face fontified t syntax-table (1)) 93 100 (face font-lock-string-face fontified t) 100 101 (face font-lock-string-face fontified t syntax-table (1)) 101 114 (face font-lock-string-face fontified t) 114 115 (face font-lock-string-face fontified t syntax-table (1)) 115 139 (face font-lock-string-face fontified t) 139 140 (face font-lock-string-face fontified t syntax-table (1)) 140 147 (face font-lock-string-face fontified t) 147 148 (face font-lock-string-face fontified t syntax-table (1)) 148 168 (face font-lock-string-face fontified t) 168 169 (face font-lock-string-face fontified t syntax-table (1)) 169 181 (face font-lock-string-face fontified t) 181 182 (face font-lock-string-face fontified t syntax-table (1)) 182 197 (face font-lock-string-face fontified t) 197 199 (fontified t) 199 203 (face font-lock-constant-face fontified t) 203 206 (fontified t)) "
	dest->pixel |= 0xff << 24;" #("/*gruvbox*/
static const char col_1[]       = \"#282828\";
static const char col_2[]       = \"#695F55\";
static const char col_3[]       = \"#ebdbb2\";
static const char col_4[]       = \"#d65d0e\";
static const char col_5[]       = \"#B8bb26\";
static const char col_6[]       = \"#cc241d\";
static const char col_7[]       = \"#689d68\";

static const char *colors[][3]      = {
	/*                      fg      bg   border   */
	[SchemeNorm]       = { col_3, col_1, col_1 },
	[SchemeSel]        = { col_3, col_1, col_5 },
	[SchemeStatus]     = { col_1, col_1, col_1 }, // Statusbar right {text,background,not used but cannot be empty}
	[SchemeTagsSel]    = { col_1, col_5, col_4 }, // Tagbar left selected {text,background,not used but cannot be empty}
	[SchemeTagsNorm]   = { col_3, col_1, col_1 }, // Tagbar left unselected {text,background,not used but cannot be empty}
	[SchemeInfoSel]    = { col_3, col_1, col_1 }, // infobar middle  selected {text,background,not used but cannot be empty}
	[SchemeInfoNorm]   = { col_3, col_1, col_1 }, // infobar middle  unselected {text,background,not used but cannot be empty}
};" 0 1 (fontified t face font-lock-comment-delimiter-face c-in-sws t c-is-sws t) 1 2 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 2 9 (fontified t face font-lock-comment-face c-in-sws t) 9 11 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 11 12 (fontified t c-in-sws t) 12 13 (fontified t face font-lock-keyword-face c-is-sws t) 13 18 (fontified t face font-lock-keyword-face) 18 19 (fontified t) 19 22 (fontified t face font-lock-keyword-face) 22 24 (fontified t face font-lock-keyword-face) 24 25 (fontified t) 25 28 (fontified t face font-lock-type-face) 28 29 (fontified t c-type c-decl-id-start face font-lock-type-face) 29 30 (fontified t) 30 35 (fontified t face font-lock-variable-name-face) 35 46 (fontified t) 46 55 (fontified t face font-lock-string-face) 55 57 (fontified t) 57 63 (fontified t face font-lock-keyword-face) 63 64 (fontified t) 64 69 (fontified t face font-lock-keyword-face) 69 70 (fontified t) 70 73 (fontified t face font-lock-type-face) 73 74 (fontified t c-type c-decl-id-start face font-lock-type-face) 74 75 (fontified t) 75 80 (fontified t face font-lock-variable-name-face) 80 91 (fontified t) 91 100 (fontified t face font-lock-string-face) 100 102 (fontified t) 102 108 (fontified t face font-lock-keyword-face) 108 109 (fontified t) 109 114 (fontified t face font-lock-keyword-face) 114 115 (fontified t) 115 118 (fontified t face font-lock-type-face) 118 119 (fontified t c-type c-decl-id-start face font-lock-type-face) 119 120 (fontified t) 120 125 (fontified t face font-lock-variable-name-face) 125 136 (fontified t) 136 145 (fontified t face font-lock-string-face) 145 147 (fontified t) 147 153 (fontified t face font-lock-keyword-face) 153 154 (fontified t) 154 159 (fontified t face font-lock-keyword-face) 159 160 (fontified t) 160 163 (fontified t face font-lock-type-face) 163 164 (fontified t c-type c-decl-id-start face font-lock-type-face) 164 165 (fontified t) 165 170 (fontified t face font-lock-variable-name-face) 170 181 (fontified t) 181 190 (fontified t face font-lock-string-face) 190 192 (fontified t) 192 198 (fontified t face font-lock-keyword-face) 198 199 (fontified t) 199 204 (fontified t face font-lock-keyword-face) 204 205 (fontified t) 205 208 (fontified t face font-lock-type-face) 208 209 (fontified t c-type c-decl-id-start face font-lock-type-face) 209 210 (fontified t) 210 215 (fontified t face font-lock-variable-name-face) 215 226 (fontified t) 226 235 (fontified t face font-lock-string-face) 235 237 (fontified t) 237 243 (fontified t face font-lock-keyword-face) 243 244 (fontified t) 244 249 (fontified t face font-lock-keyword-face) 249 250 (fontified t) 250 253 (fontified t face font-lock-type-face) 253 254 (fontified t c-type c-decl-id-start face font-lock-type-face) 254 255 (fontified t) 255 260 (fontified t face font-lock-variable-name-face) 260 271 (fontified t) 271 280 (fontified t face font-lock-string-face) 280 282 (fontified t) 282 288 (fontified t face font-lock-keyword-face) 288 289 (fontified t) 289 294 (fontified t face font-lock-keyword-face) 294 295 (fontified t) 295 298 (fontified t face font-lock-type-face) 298 299 (fontified t c-type c-decl-id-start face font-lock-type-face) 299 300 (fontified t) 300 305 (fontified t face font-lock-variable-name-face) 305 316 (fontified t) 316 325 (fontified t face font-lock-string-face) 325 328 (fontified t) 328 334 (fontified t face font-lock-keyword-face) 334 335 (fontified t) 335 340 (fontified t face font-lock-keyword-face) 340 341 (fontified t) 341 344 (fontified t face font-lock-type-face) 344 345 (fontified t c-type c-decl-id-start face font-lock-type-face) 345 347 (fontified t) 347 353 (fontified t face font-lock-variable-name-face) 353 368 (fontified t) 368 369 (fontified t c-in-sws t c-is-sws t) 369 370 (fontified t face font-lock-comment-delimiter-face c-in-sws t c-is-sws t) 370 393 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 393 412 (fontified t face font-lock-comment-face c-in-sws t) 412 417 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 417 418 (fontified t c-in-sws t) 418 419 (fontified t c-is-sws t c-in-sws t) 419 420 (fontified t c-is-sws t) 420 440 (fontified t) 440 441 (fontified t c-type c-not-decl) 441 447 (fontified t) 447 448 (fontified t c-type c-not-decl) 448 454 (fontified t) 454 455 (fontified t c-type c-not-decl) 455 487 (fontified t) 487 488 (fontified t c-type c-not-decl) 488 494 (fontified t) 494 495 (fontified t c-type c-not-decl) 495 501 (fontified t) 501 502 (fontified t c-type c-not-decl) 502 534 (fontified t) 534 535 (fontified t c-type c-not-decl) 535 541 (fontified t) 541 542 (fontified t c-type c-not-decl) 542 548 (fontified t) 548 549 (fontified t c-type c-not-decl) 549 558 (fontified t) 558 559 (fontified t c-in-sws t c-is-sws t) 559 560 (fontified t face font-lock-comment-delimiter-face c-in-sws t c-is-sws t) 560 562 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 562 625 (fontified t face font-lock-comment-face c-in-sws t) 625 626 (fontified t c-is-sws t c-in-sws t) 626 627 (fontified t c-is-sws t) 627 647 (fontified t) 647 648 (fontified t c-type c-not-decl) 648 654 (fontified t) 654 655 (fontified t c-type c-not-decl) 655 661 (fontified t) 661 662 (fontified t c-type c-not-decl) 662 671 (fontified t) 671 672 (fontified t c-in-sws t c-is-sws t) 672 673 (fontified t face font-lock-comment-delimiter-face c-in-sws t c-is-sws t) 673 675 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 675 743 (fontified t face font-lock-comment-face c-in-sws t) 743 744 (fontified t c-is-sws t c-in-sws t) 744 745 (fontified t c-is-sws t) 745 765 (fontified t) 765 766 (fontified t c-type c-not-decl) 766 772 (fontified t) 772 773 (fontified t c-type c-not-decl) 773 779 (fontified t) 779 780 (fontified t c-type c-not-decl) 780 789 (fontified t) 789 790 (fontified t c-in-sws t c-is-sws t) 790 791 (fontified t face font-lock-comment-delimiter-face c-in-sws t c-is-sws t) 791 793 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 793 863 (fontified t face font-lock-comment-face c-in-sws t) 863 864 (fontified t c-is-sws t c-in-sws t) 864 865 (fontified t c-is-sws t) 865 885 (fontified t) 885 886 (fontified t c-type c-not-decl) 886 892 (fontified t) 892 893 (fontified t c-type c-not-decl) 893 899 (fontified t) 899 900 (fontified t c-type c-not-decl) 900 909 (fontified t) 909 910 (fontified t c-in-sws t c-is-sws t) 910 911 (fontified t face font-lock-comment-delimiter-face c-in-sws t c-is-sws t) 911 913 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 913 985 (fontified t face font-lock-comment-face c-in-sws t) 985 986 (fontified t c-is-sws t c-in-sws t) 986 987 (fontified t c-is-sws t) 987 1007 (fontified t) 1007 1008 (fontified t c-type c-not-decl) 1008 1014 (fontified t) 1014 1015 (fontified t c-type c-not-decl) 1015 1021 (fontified t) 1021 1022 (fontified t c-type c-not-decl) 1022 1032 (fontified t) 1032 1035 (fontified t face font-lock-comment-delimiter-face) 1035 1109 (fontified t face font-lock-comment-face) 1109 1111 (fontified t)) #("/* atalhos teclado */
static const Key keys[] = {
	/* modifier                     key        function        argument */
	{ MODKEY,                       XK_p,      spawn,          {.v = dmenucmd } },
	{ MODKEY,						XK_d,	   spawn,          {.v = roficmd } },
	{ MODKEY|ShiftMask,             XK_Return, spawn,          {.v = termcmd } },
	{ MODKEY,                       XK_s,      togglescratch,  {.v = scratchpadcmd } },
	{ MODKEY,                       XK_b,      togglebar,      {0} },

	/*Padrao
	{ MODKEY|ShiftMask,             XK_j,      rotatestack,    {.i = +1 } },
	{ MODKEY|ShiftMask,             XK_k,      rotatestack,    {.i = -1 } },
	{ MODKEY,                       XK_j,      focusstack,     {.i = +1 } },
	{ MODKEY,                       XK_k,      focusstack,     {.i = -1 } },
	{ MODKEY,                       XK_i,      incnmaster,     {.i = +1 } },
	{ MODKEY,                       XK_d,      incnmaster,     {.i = -1 } },
	{ MODKEY,                       XK_h,      setmfact,       {.f = -0.05} },
	{ MODKEY,                       XK_l,      setmfact,       {.f = +0.05} },
	*/

	/*minhas alterações*/
	{ MODKEY|ShiftMask,             XK_Right,  rotatestack,    {.i = +1 } },
	{ MODKEY|ShiftMask,             XK_Left,   rotatestack,    {.i = -1 } },
	{ MODKEY,                       XK_Right,  focusstack,     {.i = +1 } },
	{ MODKEY,                       XK_Left,   focusstack,     {.i = -1 } },
	{ MODKEY|ShiftMask,             XK_Up,     incnmaster,     {.i = +1 } },
	{ MODKEY|ShiftMask,             XK_Down,   incnmaster,     {.i = -1 } },
	{ MODKEY,                       XK_Down,   setmfact,       {.f = -0.05} },
	{ MODKEY,                       XK_Up,     setmfact,       {.f = +0.05} },

	{ MODKEY,                       XK_Return, zoom,           {0} },
	{ MODKEY,                       XK_Tab,    view,           {0} },
	{ MODKEY|ShiftMask,             XK_c,      killclient,     {0} },
	{ MODKEY,                       XK_t,      setlayout,      {.v = &layouts[0]} },
	{ MODKEY,                       XK_f,      setlayout,      {.v = &layouts[1]} },
	{ MODKEY,                       XK_m,      setlayout,      {.v = &layouts[2]} },
	{ MODKEY,                       XK_y,      setlayout,      {.v = &layouts[3]} },
	{ MODKEY,                       XK_u,      setlayout,      {.v = &layouts[4]} },
	{ MODKEY,                       XK_r,      setlayout,      {.v = &layouts[5]} },
	{ MODKEY,                       XK_g,      setlayout,      {.v = &layouts[6]} },
	{ MODKEY,                       XK_f,      setlayout,      {.v = &layouts[7]} },
	{ MODKEY|ShiftMask,             XK_f,      setlayout,      {.v = &layouts[8]} },
	{ MODKEY|ShiftMask,             XK_z,      setlayout,      {.v = &layouts[9]} },
	{ MODKEY,                       XK_z,      setlayout,      {.v = &layouts[10]} },

	{ MODKEY|ControlMask,		XK_comma,  cyclelayout,    {.i = -1 } },
	{ MODKEY|ControlMask,           XK_period, cyclelayout,    {.i = +1 } },
	{ MODKEY,                       XK_space,  setlayout,      {0} },
	{ MODKEY|ShiftMask,             XK_space,  togglefloating, {0} },
	{ MODKEY,                       XK_0,      view,           {.ui = ~0 } },
	{ MODKEY|ShiftMask,             XK_0,      tag,            {.ui = ~0 } },
	{ MODKEY,                       XK_comma,  focusmon,       {.i = -1 } },
	{ MODKEY,                       XK_period, focusmon,       {.i = +1 } },
	{ MODKEY|ShiftMask,             XK_comma,  tagmon,         {.i = -1 } },
	{ MODKEY|ShiftMask,             XK_period, tagmon,         {.i = +1 } },
	{ MODKEY,                       XK_minus,  setgaps,        {.i = -1 } },
	{ MODKEY,                       XK_equal,  setgaps,        {.i = +1 } },
	{ MODKEY|ShiftMask,             XK_equal,  setgaps,        {.i = 0  } },
	TAGKEYS(                        XK_1,                      0)
	TAGKEYS(                        XK_2,                      1)
	TAGKEYS(                        XK_3,                      2)
	TAGKEYS(                        XK_4,                      3)
	TAGKEYS(                        XK_5,                      4)
	TAGKEYS(                        XK_6,                      5)
	TAGKEYS(                        XK_7,                      6)
	TAGKEYS(                        XK_8,                      7)
	TAGKEYS(                        XK_9,                      8)
	{ MODKEY|ShiftMask,             XK_q,      quit,           {0} },
	{ MODKEY|ShiftMask,		XK_r,      quit,           {1} },

	/*Meus atalhos*/
	{ MODKEY,                       XK_a,                           spawn,          SHCMD(\"~/.local/bin/dmenu/dmenu-atalhos-programas\") },
	{ MODKEY|ShiftMask,             XK_a,                           spawn,          SHCMD(\"~/.local/bin/dmenu/dmenu-docker-images\") },
	{ MODKEY|ControlMask,           XK_a,                           spawn,          SHCMD(\"~/.local/bin/dmenu/dmenu-docker-lista-funcionando\") },
	{ ControlMask|Mod1Mask,         XK_l,                           spawn,          SHCMD(\"~/.local/bin/slock_personalizado\") },
	/*volume pulseaudio*/
	{ 0,                            XF86XK_AudioLowerVolume,        spawn,          SHCMD(\"~/.local/bin/diminui_volume\") },
	{ 0,                            XF86XK_AudioRaiseVolume,        spawn,          SHCMD(\"~/.local/bin/aumenta_volume\") },
	{ 0,                            XF86XK_AudioMute,               spawn,          SHCMD(\"~/.local/bin/muta_volume\") },

	/*Volume Microfone Pulseaudio*/
	{ ControlMask,                  XF86XK_AudioRaiseVolume,        spawn,          SHCMD(\"~/.local/bin/aumenta_volume_microfone\") },
	{ ControlMask,                  XF86XK_AudioLowerVolume,        spawn,          SHCMD(\"~/.local/bin/diminui_volume_microfone\") },
	{ ControlMask,                  XF86XK_AudioMute,               spawn,          SHCMD(\"~/.local/bin/muta_microfone\") },
	{ 0,                            XF86XK_AudioPlay,               spawn,          SHCMD(\"~/.local/bin/playerctl_play\") },
	{ 0,                            XF86XK_AudioStop,               spawn,          SHCMD(\"~/.local/bin/playerctl_stop\") },
	{ 0,                            XF86XK_AudioPrev,               spawn,          SHCMD(\"~/.local/bin/playerctl_prev\") },
	{ 0,                            XF86XK_AudioNext,               spawn,          SHCMD(\"~/.local/bin/playerctl_next\") },
	{ 0,                            XF86XK_HomePage,                spawn,          SHCMD(\"~/.local/bin/homepage_program\") },
	{ 0,                            XF86XK_Mail,                    spawn,          SHCMD(\"~/.local/bin/mail_program\") },
	{ 0,                            XF86XK_Search,                  spawn,          SHCMD(\"~/.local/bin/search_program\") },
	{ 0,                            XF86XK_Calculator,              spawn,          SHCMD(\"~/.local/bin/calculator_program\") },

	{ MODKEY|ShiftMask,             XK_s,                           spawn,          SHCMD(\"~/.local/bin/print_edita\") },
	{ 0,                            XK_Print,                       spawn,          SHCMD(\"~/.local/bin/print_copia\") },
	{ 0,				XF86XK_MonBrightnessUp,		spawn,          SHCMD(\"~/.local/bin/brilho_tela_aumenta\") },
	{ 0,				XF86XK_MonBrightnessDown,	spawn,          SHCMD(\"~/.local/bin/brilho_tela_diminui\") },

	{ MODKEY,                       XK_q,                           spawn,          SHCMD(\"~/.local/bin/dmenu/dmenu-power\" ) },
	{ ControlMask|Mod1Mask,         XK_p,                           spawn,          SHCMD(\"~/.local/bin/dmenu/dmenu-pass\" ) },
	{ MODKEY,			XK_e,				spawn,		SHCMD(\"~/.local/bin/dmenu/dmenu-monitor\" ) },
	{ MODKEY,                       XK_w,                           spawn,          SHCMD(\"~/.local/bin/dmenu/dmenu-pulseaudio-sink\") },
	{ MODKEY,                       XK_k,                           spawn,          SHCMD(\"~/.local/bin/dmenu/dmenu-teclados\") }
};
" 0 1 (fontified t c-is-sws t face font-lock-comment-delimiter-face c-in-sws t) 1 3 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 3 18 (fontified t face font-lock-comment-face c-in-sws t) 18 21 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 21 22 (fontified t c-in-sws t) 22 23 (fontified t c-is-sws t face font-lock-keyword-face) 23 28 (fontified t face font-lock-keyword-face) 28 29 (fontified t) 29 34 (fontified t face font-lock-keyword-face) 34 35 (fontified t) 35 37 (fontified t face font-lock-type-face) 37 38 (fontified t c-type c-decl-id-start face font-lock-type-face) 38 39 (fontified t) 39 43 (fontified t face font-lock-variable-name-face) 43 50 (fontified t) 50 51 (fontified t c-in-sws t c-is-sws t) 51 52 (fontified t face font-lock-comment-delimiter-face c-in-sws t c-is-sws t) 52 54 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 54 118 (fontified t face font-lock-comment-face c-in-sws t) 118 121 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 121 122 (fontified t c-in-sws t) 122 123 (fontified t c-is-sws t c-in-sws t) 123 124 (fontified t c-is-sws t c-type c-not-decl) 124 131 (fontified t) 131 132 (fontified t c-type c-not-decl) 132 159 (fontified t) 159 160 (fontified t c-type c-not-decl) 160 171 (fontified t) 171 172 (fontified t c-type c-not-decl) 172 203 (fontified t) 203 204 (fontified t c-type c-not-decl) 204 211 (fontified t) 211 212 (fontified t c-type c-not-decl) 212 222 (fontified t) 222 223 (fontified t c-type c-not-decl) 223 232 (fontified t) 232 233 (fontified t c-type c-not-decl) 233 263 (fontified t) 263 264 (fontified t c-type c-not-decl) 264 281 (fontified t) 281 282 (fontified t c-type c-not-decl) 282 304 (fontified t) 304 305 (fontified t c-type c-not-decl) 305 311 (fontified t) 311 312 (fontified t c-type c-not-decl) 312 342 (fontified t) 342 343 (fontified t c-type c-not-decl) 343 350 (fontified t) 350 351 (fontified t c-type c-not-decl) 351 378 (fontified t) 378 379 (fontified t c-type c-not-decl) 379 398 (fontified t) 398 399 (fontified t c-type c-not-decl) 399 427 (fontified t) 427 428 (fontified t c-type c-not-decl) 428 435 (fontified t) 435 436 (fontified t c-type c-not-decl) 436 463 (fontified t) 463 464 (fontified t c-type c-not-decl) 464 479 (fontified t) 479 480 (fontified t c-type c-not-decl) 480 494 (fontified t) 494 495 (fontified t c-in-sws t c-is-sws t) 495 496 (fontified t face font-lock-comment-delimiter-face c-in-sws t c-is-sws t) 496 497 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 497 1100 (fontified t face font-lock-comment-face c-in-sws t) 1100 1103 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 1103 1106 (fontified t c-in-sws t) 1106 1108 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 1108 1125 (fontified t face font-lock-comment-face c-in-sws t) 1125 1127 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 1127 1128 (fontified t c-in-sws t) 1128 1129 (fontified t c-is-sws t c-in-sws t) 1129 1130 (fontified t c-is-sws t c-type c-not-decl) 1130 1147 (fontified t) 1147 1148 (fontified t c-type c-not-decl) 1148 1169 (fontified t) 1169 1170 (fontified t c-type c-not-decl) 1170 1183 (fontified t) 1183 1184 (fontified t c-type c-not-decl) 1184 1203 (fontified t) 1203 1204 (fontified t c-type c-not-decl) 1204 1221 (fontified t) 1221 1222 (fontified t c-type c-not-decl) 1222 1242 (fontified t) 1242 1243 (fontified t c-type c-not-decl) 1243 1257 (fontified t) 1257 1258 (fontified t c-type c-not-decl) 1258 1277 (fontified t) 1277 1278 (fontified t c-type c-not-decl) 1278 1285 (fontified t) 1285 1286 (fontified t c-type c-not-decl) 1286 1317 (fontified t) 1317 1318 (fontified t c-type c-not-decl) 1318 1330 (fontified t) 1330 1331 (fontified t c-type c-not-decl) 1331 1351 (fontified t) 1351 1352 (fontified t c-type c-not-decl) 1352 1359 (fontified t) 1359 1360 (fontified t c-type c-not-decl) 1360 1390 (fontified t) 1390 1391 (fontified t c-type c-not-decl) 1391 1404 (fontified t) 1404 1405 (fontified t c-type c-not-decl) 1405 1425 (fontified t) 1425 1426 (fontified t c-type c-not-decl) 1426 1443 (fontified t) 1443 1444 (fontified t c-type c-not-decl) 1444 1462 (fontified t) 1462 1463 (fontified t c-type c-not-decl) 1463 1478 (fontified t) 1478 1479 (fontified t c-type c-not-decl) 1479 1499 (fontified t) 1499 1500 (c-type c-not-decl fontified t) 1500 1517 (fontified t) 1517 1518 (c-type c-not-decl fontified t) 1518 1538 (fontified t) 1538 1539 (c-type c-not-decl fontified t) 1539 1552 (fontified t) 1552 1553 (c-type c-not-decl fontified t) 1553 1572 (fontified t) 1572 1573 (fontified t) 1573 1574 (fontified t c-type c-not-decl) 1574 1581 (fontified t) 1581 1582 (fontified t c-type c-not-decl) 1582 1612 (fontified t) 1612 1613 (fontified t c-type c-not-decl) 1613 1624 (fontified t) 1624 1625 (fontified t c-type c-not-decl) 1625 1649 (fontified t) 1649 1650 (fontified t c-type c-not-decl) 1650 1657 (fontified t) 1657 1658 (fontified t c-type c-not-decl) 1658 1686 (fontified t) 1686 1687 (fontified t c-type c-not-decl) 1687 1700 (fontified t) 1700 1701 (fontified t c-type c-not-decl) 1701 1726 (fontified t) 1726 1727 (fontified t c-type c-not-decl) 1727 1734 (fontified t) 1734 1735 (fontified t c-type c-not-decl) 1735 1767 (fontified t) 1767 1768 (fontified t c-type c-not-decl) 1768 1773 (fontified t) 1773 1774 (fontified t c-type c-not-decl) 1774 1793 (fontified t) 1793 1794 (fontified t c-type c-not-decl) 1794 1801 (fontified t) 1801 1802 (fontified t c-type c-not-decl) 1802 1831 (fontified t) 1831 1832 (fontified t c-type c-not-decl) 1832 1840 (fontified t) 1840 1841 (fontified t c-type c-not-decl) 1841 1860 (fontified t) 1860 1861 (fontified t c-type c-not-decl) 1861 1878 (fontified t) 1878 1879 (fontified t c-type c-not-decl) 1879 1896 (fontified t) 1896 1897 (fontified t c-type c-not-decl) 1897 1913 (fontified t) 1913 1914 (fontified t c-type c-not-decl) 1914 1927 (fontified t) 1927 1928 (fontified t c-type c-not-decl) 1928 1935 (fontified t) 1935 1936 (fontified t c-type c-not-decl) 1936 1963 (fontified t) 1963 1964 (fontified t c-type c-not-decl) 1964 1979 (fontified t) 1979 1980 (fontified t c-type c-not-decl) 1980 2009 (fontified t) 2009 2010 (fontified t c-type c-not-decl) 2010 2017 (fontified t) 2017 2018 (fontified t c-type c-not-decl) 2018 2045 (fontified t) 2045 2046 (fontified t c-type c-not-decl) 2046 2061 (fontified t) 2061 2062 (fontified t c-type c-not-decl) 2062 2091 (fontified t) 2091 2092 (fontified t c-type c-not-decl) 2092 2099 (fontified t) 2099 2100 (fontified t c-type c-not-decl) 2100 2127 (fontified t) 2127 2128 (fontified t c-type c-not-decl) 2128 2143 (fontified t) 2143 2144 (fontified t c-type c-not-decl) 2144 2173 (fontified t) 2173 2174 (fontified t c-type c-not-decl) 2174 2181 (fontified t) 2181 2182 (fontified t c-type c-not-decl) 2182 2209 (fontified t) 2209 2210 (fontified t c-type c-not-decl) 2210 2225 (fontified t) 2225 2226 (fontified t c-type c-not-decl) 2226 2255 (fontified t) 2255 2256 (fontified t c-type c-not-decl) 2256 2263 (fontified t) 2263 2264 (fontified t c-type c-not-decl) 2264 2291 (fontified t) 2291 2292 (fontified t c-type c-not-decl) 2292 2307 (fontified t) 2307 2308 (fontified t c-type c-not-decl) 2308 2337 (fontified t) 2337 2338 (fontified t c-type c-not-decl) 2338 2345 (fontified t) 2345 2346 (fontified t c-type c-not-decl) 2346 2373 (fontified t) 2373 2374 (fontified t c-type c-not-decl) 2374 2389 (fontified t) 2389 2390 (fontified t c-type c-not-decl) 2390 2419 (fontified t) 2419 2420 (fontified t c-type c-not-decl) 2420 2427 (fontified t) 2427 2428 (fontified t c-type c-not-decl) 2428 2455 (fontified t) 2455 2456 (fontified t c-type c-not-decl) 2456 2471 (fontified t) 2471 2472 (fontified t c-type c-not-decl) 2472 2501 (fontified t) 2501 2502 (fontified t c-type c-not-decl) 2502 2509 (fontified t) 2509 2510 (fontified t c-type c-not-decl) 2510 2537 (fontified t) 2537 2538 (fontified t c-type c-not-decl) 2538 2553 (fontified t) 2553 2554 (fontified t c-type c-not-decl) 2554 2583 (fontified t) 2583 2584 (fontified t c-type c-not-decl) 2584 2601 (fontified t) 2601 2602 (fontified t c-type c-not-decl) 2602 2619 (fontified t) 2619 2620 (fontified t c-type c-not-decl) 2620 2635 (fontified t) 2635 2636 (fontified t c-type c-not-decl) 2636 2665 (fontified t) 2665 2666 (fontified t c-type c-not-decl) 2666 2683 (fontified t) 2683 2684 (fontified t c-type c-not-decl) 2684 2701 (fontified t) 2701 2702 (fontified t c-type c-not-decl) 2702 2717 (fontified t) 2717 2718 (fontified t c-type c-not-decl) 2718 2747 (fontified t) 2747 2748 (fontified t c-type c-not-decl) 2748 2755 (fontified t) 2755 2756 (fontified t c-type c-not-decl) 2756 2783 (fontified t) 2783 2784 (fontified t c-type c-not-decl) 2784 2799 (fontified t) 2799 2800 (fontified t c-type c-not-decl) 2800 2831 (fontified t) 2831 2832 (fontified t c-type c-not-decl) 2832 2851 (fontified t) 2851 2852 (fontified t c-type c-not-decl) 2852 2862 (fontified t) 2862 2863 (fontified t c-type c-not-decl) 2863 2876 (fontified t) 2876 2877 (fontified t c-type c-not-decl) 2877 2896 (fontified t) 2896 2897 (fontified t c-type c-not-decl) 2897 2916 (fontified t) 2916 2917 (fontified t c-type c-not-decl) 2917 2937 (fontified t) 2937 2938 (fontified t c-type c-not-decl) 2938 2950 (fontified t) 2950 2951 (fontified t c-type c-not-decl) 2951 2970 (fontified t) 2970 2971 (fontified t c-type c-not-decl) 2971 2978 (fontified t) 2978 2979 (fontified t c-type c-not-decl) 2979 3010 (fontified t) 3010 3011 (fontified t c-type c-not-decl) 3011 3022 (fontified t) 3022 3023 (fontified t c-type c-not-decl) 3023 3037 (fontified t) 3037 3038 (fontified t c-type c-not-decl) 3038 3055 (fontified t) 3055 3056 (fontified t c-type c-not-decl) 3056 3072 (fontified t) 3072 3077 (fontified t) 3077 3078 (c-type c-not-decl fontified t) 3078 3094 (fontified t) 3094 3095 (c-type c-not-decl fontified t) 3095 3103 (fontified t) 3103 3104 (fontified t) 3104 3105 (fontified t c-type c-not-decl) 3105 3112 (fontified t) 3112 3113 (fontified t c-type c-not-decl) 3113 3140 (fontified t) 3140 3141 (fontified t c-type c-not-decl) 3141 3151 (fontified t) 3151 3152 (fontified t c-type c-not-decl) 3152 3179 (fontified t) 3179 3180 (fontified t c-type c-not-decl) 3180 3197 (fontified t) 3197 3198 (fontified t c-type c-not-decl) 3198 3215 (fontified t) 3215 3216 (fontified t c-type c-not-decl) 3216 3225 (fontified t) 3225 3226 (fontified t c-type c-not-decl) 3226 3254 (fontified t) 3254 3255 (fontified t c-type c-not-decl) 3255 3262 (fontified t) 3262 3263 (fontified t c-type c-not-decl) 3263 3294 (fontified t) 3294 3295 (fontified t c-type c-not-decl) 3295 3305 (fontified t) 3305 3306 (fontified t c-type c-not-decl) 3306 3328 (fontified t) 3328 3329 (fontified t c-type c-not-decl) 3329 3336 (fontified t) 3336 3337 (fontified t c-type c-not-decl) 3337 3369 (fontified t) 3369 3370 (fontified t c-type c-not-decl) 3370 3379 (fontified t) 3379 3380 (fontified t c-type c-not-decl) 3380 3402 (fontified t) 3402 3403 (fontified t c-type c-not-decl) 3403 3420 (fontified t) 3420 3421 (fontified t c-type c-not-decl) 3421 3442 (fontified t) 3442 3443 (fontified t c-type c-not-decl) 3443 3451 (fontified t) 3451 3452 (fontified t c-type c-not-decl) 3452 3476 (fontified t) 3476 3477 (fontified t c-type c-not-decl) 3477 3494 (fontified t) 3494 3495 (fontified t c-type c-not-decl) 3495 3517 (fontified t) 3517 3518 (fontified t c-type c-not-decl) 3518 3525 (fontified t) 3525 3526 (fontified t c-type c-not-decl) 3526 3550 (fontified t) 3550 3551 (fontified t c-type c-not-decl) 3551 3558 (fontified t) 3558 3559 (fontified t c-type c-not-decl) 3559 3590 (fontified t) 3590 3591 (fontified t c-type c-not-decl) 3591 3600 (fontified t) 3600 3601 (fontified t c-type c-not-decl) 3601 3624 (fontified t) 3624 3625 (fontified t c-type c-not-decl) 3625 3632 (fontified t) 3632 3633 (fontified t c-type c-not-decl) 3633 3664 (fontified t) 3664 3665 (fontified t c-type c-not-decl) 3665 3674 (fontified t) 3674 3675 (fontified t c-type c-not-decl) 3675 3698 (fontified t) 3698 3699 (fontified t c-type c-not-decl) 3699 3716 (fontified t) 3716 3717 (fontified t c-type c-not-decl) 3717 3738 (fontified t) 3738 3739 (fontified t c-type c-not-decl) 3739 3748 (fontified t) 3748 3749 (fontified t c-type c-not-decl) 3749 4339 (fontified t) 4339 4340 (fontified t c-type c-not-decl) 4340 4357 (fontified t) 4357 4358 (fontified t c-type c-not-decl) 4358 4375 (fontified t) 4375 4376 (fontified t c-type c-not-decl) 4376 4386 (fontified t) 4386 4387 (fontified t c-type c-not-decl) 4387 4406 (fontified t) 4406 4407 (fontified t c-type c-not-decl) 4407 4424 (fontified t) 4424 4425 (fontified t c-type c-not-decl) 4425 4431 (fontified t) 4431 4432 (fontified t c-type c-not-decl) 4432 4442 (fontified t) 4442 4443 (fontified t c-type c-not-decl) 4443 4462 (fontified t) 4462 4463 (fontified t c-in-sws t c-is-sws t) 4463 4464 (fontified t face font-lock-comment-delimiter-face c-in-sws t c-is-sws t) 4464 4465 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 4465 4477 (fontified t face font-lock-comment-face c-in-sws t) 4477 4479 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 4479 4480 (fontified t c-in-sws t) 4480 4481 (fontified t c-is-sws t c-in-sws t) 4481 4482 (fontified t c-is-sws t c-type c-not-decl) 4482 4489 (fontified t) 4489 4490 (fontified t c-type c-not-decl) 4490 4517 (fontified t) 4517 4518 (fontified t c-type c-not-decl) 4518 4550 (fontified t) 4550 4551 (fontified t c-type c-not-decl) 4551 4567 (fontified t) 4567 4603 (fontified t face font-lock-string-face) 4603 4611 (face font-lock-string-face fontified t) 4611 4616 (fontified t) 4616 4617 (fontified t) 4617 4618 (fontified t c-type c-not-decl) 4618 4635 (fontified t) 4635 4636 (fontified t c-type c-not-decl) 4636 4653 (fontified t) 4653 4654 (fontified t c-type c-not-decl) 4654 4686 (fontified t) 4686 4687 (fontified t c-type c-not-decl) 4687 4703 (fontified t) 4703 4743 (fontified t face font-lock-string-face) 4743 4749 (fontified t) 4749 4750 (fontified t c-type c-not-decl) 4750 4769 (fontified t) 4769 4770 (fontified t c-type c-not-decl) 4770 4785 (fontified t) 4785 4786 (fontified t c-type c-not-decl) 4786 4818 (fontified t) 4818 4819 (fontified t c-type c-not-decl) 4819 4835 (fontified t) 4835 4886 (fontified t face font-lock-string-face) 4886 4892 (fontified t) 4892 4893 (fontified t c-type c-not-decl) 4893 4914 (fontified t) 4914 4915 (fontified t c-type c-not-decl) 4915 4928 (fontified t) 4928 4929 (fontified t c-type c-not-decl) 4929 4961 (fontified t) 4961 4962 (fontified t c-type c-not-decl) 4962 4978 (fontified t) 4978 5012 (fontified t face font-lock-string-face) 5012 5017 (fontified t) 5017 5018 (fontified t c-in-sws t c-is-sws t) 5018 5019 (fontified t face font-lock-comment-delimiter-face c-in-sws t c-is-sws t) 5019 5020 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 5020 5037 (fontified t face font-lock-comment-face c-in-sws t) 5037 5039 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 5039 5040 (fontified t c-in-sws t) 5040 5041 (fontified t c-is-sws t c-in-sws t) 5041 5042 (fontified t c-is-sws t) 5042 5127 (fontified t) 5127 5156 (fontified t face font-lock-string-face) 5156 5248 (fontified t) 5248 5277 (fontified t face font-lock-string-face) 5277 5369 (fontified t) 5369 5395 (fontified t face font-lock-string-face) 5395 5401 (fontified t) 5401 5402 (fontified t c-in-sws t c-is-sws t) 5402 5403 (fontified t face font-lock-comment-delimiter-face c-in-sws t c-is-sws t) 5403 5404 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 5404 5431 (fontified t face font-lock-comment-face c-in-sws t) 5431 5433 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 5433 5434 (fontified t c-in-sws t) 5434 5435 (fontified t c-is-sws t c-in-sws t) 5435 5436 (fontified t c-is-sws t c-type c-not-decl) 5436 5448 (fontified t) 5448 5449 (fontified t c-type c-not-decl) 5449 5490 (fontified t) 5490 5491 (fontified t c-type c-not-decl) 5491 5504 (fontified t) 5504 5505 (fontified t c-type c-not-decl) 5505 5521 (fontified t) 5521 5560 (fontified t face font-lock-string-face) 5560 5566 (fontified t) 5566 5567 (fontified t c-type c-not-decl) 5567 5579 (fontified t) 5579 5580 (fontified t c-type c-not-decl) 5580 5621 (fontified t) 5621 5622 (fontified t c-type c-not-decl) 5622 5635 (fontified t) 5635 5636 (fontified t c-type c-not-decl) 5636 5652 (fontified t) 5652 5691 (fontified t face font-lock-string-face) 5691 5697 (fontified t) 5697 5698 (fontified t c-type c-not-decl) 5698 5710 (fontified t) 5710 5711 (fontified t c-type c-not-decl) 5711 5745 (fontified t) 5745 5746 (fontified t c-type c-not-decl) 5746 5766 (fontified t) 5766 5767 (fontified t c-type c-not-decl) 5767 5783 (fontified t) 5783 5812 (fontified t face font-lock-string-face) 5812 5904 (fontified t) 5904 5933 (fontified t face font-lock-string-face) 5933 6025 (fontified t) 6025 6054 (fontified t face font-lock-string-face) 6054 6116 (fontified t) 6116 6146 (fontified t) 6146 6175 (face font-lock-string-face fontified t) 6175 6180 (fontified t) 6180 6267 (fontified t) 6267 6296 (fontified t face font-lock-string-face) 6296 6388 (fontified t) 6388 6419 (fontified t face font-lock-string-face) 6419 6511 (fontified t) 6511 6538 (fontified t face font-lock-string-face) 6538 6630 (fontified t) 6630 6659 (fontified t face font-lock-string-face) 6659 6751 (fontified t) 6751 6784 (fontified t face font-lock-string-face) 6784 6791 (fontified t) 6791 6792 (fontified t c-type c-not-decl) 6792 6809 (fontified t) 6809 6810 (fontified t c-type c-not-decl) 6810 6827 (fontified t) 6827 6828 (fontified t c-type c-not-decl) 6828 6860 (fontified t) 6860 6861 (fontified t c-type c-not-decl) 6861 6877 (fontified t) 6877 6903 (fontified t face font-lock-string-face) 6903 6995 (fontified t) 6995 7021 (fontified t face font-lock-string-face) 7021 7082 (fontified t) 7082 7116 (fontified t face font-lock-string-face) 7116 7178 (fontified t) 7178 7212 (fontified t face font-lock-string-face) 7212 7219 (fontified t) 7219 7220 (fontified t c-type c-not-decl) 7220 7227 (fontified t) 7227 7228 (fontified t c-type c-not-decl) 7228 7255 (fontified t) 7255 7256 (fontified t c-type c-not-decl) 7256 7288 (fontified t) 7288 7289 (fontified t c-type c-not-decl) 7289 7305 (fontified t) 7305 7337 (fontified t face font-lock-string-face) 7337 7344 (fontified t) 7344 7345 (fontified t c-type c-not-decl) 7345 7366 (fontified t) 7366 7367 (fontified t c-type c-not-decl) 7367 7380 (fontified t) 7380 7381 (fontified t c-type c-not-decl) 7381 7413 (fontified t) 7413 7414 (fontified t c-type c-not-decl) 7414 7430 (fontified t) 7430 7461 (fontified t face font-lock-string-face) 7461 7468 (fontified t) 7468 7469 (fontified t c-type c-not-decl) 7469 7476 (fontified t) 7476 7477 (fontified t c-type c-not-decl) 7477 7484 (fontified t) 7484 7485 (fontified t c-type c-not-decl) 7485 7494 (fontified t) 7494 7495 (fontified t c-type c-not-decl) 7495 7503 (fontified t) 7503 7537 (fontified t face font-lock-string-face) 7537 7544 (fontified t) 7544 7545 (fontified t c-type c-not-decl) 7545 7552 (fontified t) 7552 7553 (fontified t c-type c-not-decl) 7553 7580 (fontified t) 7580 7581 (fontified t c-type c-not-decl) 7581 7613 (fontified t) 7613 7614 (fontified t c-type c-not-decl) 7614 7630 (fontified t) 7630 7672 (fontified t face font-lock-string-face) 7672 7678 (fontified t) 7678 7679 (fontified t c-type c-not-decl) 7679 7680 (fontified t) 7680 7686 (fontified t) 7686 7687 (c-type c-not-decl fontified t) 7687 7714 (fontified t) 7714 7715 (c-type c-not-decl fontified t) 7715 7747 (fontified t) 7747 7748 (c-type c-not-decl fontified t) 7748 7764 (fontified t) 7764 7799 (face font-lock-string-face fontified t) 7799 7803 (fontified t) 7803 7806 (fontified t)) #("static const char *roficmd[]   = { \"/bin/sh\", \"-c\", \"rofi -m -4 -modi 'window,drun,ssh,combi' -font 'Comic code 15' -show drun -icon-theme 'Gruvbox' -show-icons -theme 'gruvbox-dark' -sidebar-mode\", NULL };" 0 6 (fontified t face font-lock-keyword-face) 6 7 (fontified t) 7 12 (fontified t face font-lock-keyword-face) 12 13 (fontified t) 13 16 (fontified t face font-lock-type-face) 16 17 (fontified t c-type c-decl-id-start face font-lock-type-face) 17 19 (fontified t) 19 26 (fontified t face font-lock-variable-name-face) 26 35 (fontified t) 35 44 (fontified t face font-lock-string-face) 44 46 (fontified t) 46 50 (fontified t face font-lock-string-face) 50 52 (fontified t) 52 70 (fontified t face font-lock-string-face) 70 71 (syntax-table (1) fontified t face font-lock-string-face) 71 92 (fontified t face font-lock-string-face) 92 93 (syntax-table (1) fontified t face font-lock-string-face) 93 100 (fontified t face font-lock-string-face) 100 101 (syntax-table (1) fontified t face font-lock-string-face) 101 114 (fontified t face font-lock-string-face) 114 115 (syntax-table (1) fontified t face font-lock-string-face) 115 139 (fontified t face font-lock-string-face) 139 140 (syntax-table (1) fontified t face font-lock-string-face) 140 147 (fontified t face font-lock-string-face) 147 148 (syntax-table (1) fontified t face font-lock-string-face) 148 168 (fontified t face font-lock-string-face) 168 169 (syntax-table (1) fontified t face font-lock-string-face) 169 181 (fontified t face font-lock-string-face) 181 182 (syntax-table (1) fontified t face font-lock-string-face) 182 197 (fontified t face font-lock-string-face) 197 199 (fontified t) 199 203 (fontified t face font-lock-constant-face) 203 206 (fontified t)) #("
static const Rule rules[] = {
	/* xprop(1):
	 *	WM_CLASS(STRING) = instance, class
	 *	WM_NAME(STRING) = title
	 */
	/* class                       instance		title       tags mask     isfloating		monitor */
	{ \"Gimp\",			NULL,		NULL,		0,		1,		-1 },
	{ \"copyq\",			NULL,		NULL,		0,		1,		-1 },
	{ \"mpv\",			NULL,		NULL,		0,		1,		-1 },
	//	{ \"Emacs\",			\"emacs\",	NULL,		1 << 1,		0,		-1 },
	//	{ \"R_x11\",			NULL,		NULL,		1 << 1,		0,		-1 },
	//	{ NULL,				NULL,		\"R Data Editor\",1 << 1,		0,		-1 },
	//	{ \"rstudio\",			\"rstudio\",	NULL,		1 << 1,		0,		-1 },
	//{ \"Soffice\",			\"soffice\",	NULL,           5,		0,		 1 },
};
" 0 1 (fontified t c-is-sws t) 1 2 (fontified t c-is-sws t face font-lock-keyword-face) 2 7 (fontified t face font-lock-keyword-face) 7 8 (fontified t) 8 13 (fontified t face font-lock-keyword-face) 13 14 (fontified t) 14 17 (fontified t face font-lock-type-face) 17 18 (fontified t c-type c-decl-id-start face font-lock-type-face) 18 19 (fontified t) 19 24 (fontified t face font-lock-variable-name-face) 24 32 (fontified t) 32 35 (fontified t face font-lock-comment-delimiter-face) 35 112 (fontified t face font-lock-comment-face) 112 116 (fontified t face font-lock-comment-delimiter-face) 116 118 (fontified t) 118 121 (fontified t face font-lock-comment-delimiter-face) 121 204 (fontified t face font-lock-comment-face) 204 207 (fontified t face font-lock-comment-delimiter-face) 207 211 (fontified t) 211 217 (fontified t face font-lock-string-face) 217 221 (fontified t) 221 225 (fontified t face font-lock-constant-face) 225 228 (fontified t) 228 232 (fontified t face font-lock-constant-face) 232 252 (fontified t) 252 259 (fontified t face font-lock-string-face) 259 263 (fontified t) 263 267 (fontified t face font-lock-constant-face) 267 270 (fontified t) 270 274 (fontified t face font-lock-constant-face) 274 294 (fontified t) 294 299 (fontified t face font-lock-string-face) 299 303 (fontified t) 303 307 (fontified t face font-lock-constant-face) 307 310 (fontified t) 310 314 (fontified t face font-lock-constant-face) 314 332 (fontified t) 332 335 (fontified t face font-lock-comment-delimiter-face) 335 383 (fontified t face font-lock-comment-face) 383 384 (fontified t) 384 387 (fontified t face font-lock-comment-delimiter-face) 387 433 (fontified t face font-lock-comment-face) 433 434 (fontified t) 434 437 (fontified t face font-lock-comment-delimiter-face) 437 490 (fontified t face font-lock-comment-face) 490 491 (fontified t) 491 494 (fontified t face font-lock-comment-delimiter-face) 494 546 (fontified t face font-lock-comment-face) 546 547 (fontified t) 547 549 (fontified t face font-lock-comment-delimiter-face) 549 605 (fontified t face font-lock-comment-face) 605 608 (fontified t)) #("/*gruvbox*/
static const char col_1[]       = \"#282828\";
static const char col_2[]       = \"#695F55\";
static const char col_3[]       = \"#ebdbb2\";
static const char col_4[]       = \"#dfbf8e\";
static const char col_5[]       = \"#B8bb26\";
static const char col_6[]       = \"#C42824\";
static const char col_7[]       = \"#689d68\";

static const char *colors[][3]      = {
	/*                      fg      bg   border   */
	[SchemeNorm]       = { col_3, col_1, col_1 },
	[SchemeSel]        = { col_3, col_1, col_7 },
	[SchemeStatus]     = { col_1, col_1, col_1 }, // Statusbar right {text,background,not used but cannot be empty}
	[SchemeTagsSel]    = { col_1, col_7, col_5 }, // Tagbar left selected {text,background,not used but cannot be empty}
	[SchemeTagsNorm]   = { col_3, col_1, col_1 }, // Tagbar left unselected {text,background,not used but cannot be empty}
	[SchemeInfoSel]    = { col_3, col_1, col_1 }, // infobar middle  selected {text,background,not used but cannot be empty}
	[SchemeInfoNorm]   = { col_3, col_1, col_1 }, // infobar middle  unselected {text,background,not used but cannot be empty}
};

/* tagging */
static const char *tags[] = { \"1\", \"2\", \"3\", \"4\", \"5\" };" 0 1 (fontified t face font-lock-comment-delimiter-face c-in-sws t c-is-sws t) 1 2 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 2 9 (fontified t face font-lock-comment-face c-in-sws t) 9 11 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 11 12 (fontified t c-in-sws t) 12 13 (fontified t face font-lock-keyword-face c-is-sws t) 13 18 (fontified t face font-lock-keyword-face) 18 19 (fontified t) 19 20 (fontified t face font-lock-keyword-face) 20 24 (fontified t face font-lock-keyword-face) 24 25 (fontified t) 25 28 (fontified t face font-lock-type-face) 28 29 (fontified t c-type c-decl-id-start face font-lock-type-face) 29 30 (fontified t) 30 35 (fontified t face font-lock-variable-name-face) 35 46 (fontified t) 46 55 (fontified t face font-lock-string-face) 55 57 (fontified t) 57 63 (fontified t face font-lock-keyword-face) 63 64 (fontified t) 64 69 (fontified t face font-lock-keyword-face) 69 70 (fontified t) 70 73 (fontified t face font-lock-type-face) 73 74 (fontified t c-type c-decl-id-start face font-lock-type-face) 74 75 (fontified t) 75 80 (fontified t face font-lock-variable-name-face) 80 91 (fontified t) 91 100 (fontified t face font-lock-string-face) 100 102 (fontified t) 102 108 (fontified t face font-lock-keyword-face) 108 109 (fontified t) 109 114 (fontified t face font-lock-keyword-face) 114 115 (fontified t) 115 118 (fontified t face font-lock-type-face) 118 119 (fontified t c-type c-decl-id-start face font-lock-type-face) 119 120 (fontified t) 120 125 (fontified t face font-lock-variable-name-face) 125 136 (fontified t) 136 145 (fontified t face font-lock-string-face) 145 147 (fontified t) 147 153 (fontified t face font-lock-keyword-face) 153 154 (fontified t) 154 159 (fontified t face font-lock-keyword-face) 159 160 (fontified t) 160 163 (fontified t face font-lock-type-face) 163 164 (fontified t c-type c-decl-id-start face font-lock-type-face) 164 165 (fontified t) 165 170 (fontified t face font-lock-variable-name-face) 170 181 (fontified t) 181 190 (fontified t face font-lock-string-face) 190 192 (fontified t) 192 198 (fontified t face font-lock-keyword-face) 198 199 (fontified t) 199 204 (fontified t face font-lock-keyword-face) 204 205 (fontified t) 205 208 (fontified t face font-lock-type-face) 208 209 (fontified t c-type c-decl-id-start face font-lock-type-face) 209 210 (fontified t) 210 215 (fontified t face font-lock-variable-name-face) 215 226 (fontified t) 226 235 (fontified t face font-lock-string-face) 235 237 (fontified t) 237 243 (fontified t face font-lock-keyword-face) 243 244 (fontified t) 244 249 (fontified t face font-lock-keyword-face) 249 250 (fontified t) 250 253 (fontified t face font-lock-type-face) 253 254 (fontified t c-type c-decl-id-start face font-lock-type-face) 254 255 (fontified t) 255 260 (fontified t face font-lock-variable-name-face) 260 271 (fontified t) 271 280 (fontified t face font-lock-string-face) 280 282 (fontified t) 282 288 (fontified t face font-lock-keyword-face) 288 289 (fontified t) 289 294 (fontified t face font-lock-keyword-face) 294 295 (fontified t) 295 298 (fontified t face font-lock-type-face) 298 299 (fontified t c-type c-decl-id-start face font-lock-type-face) 299 300 (fontified t) 300 305 (fontified t face font-lock-variable-name-face) 305 316 (fontified t) 316 325 (fontified t face font-lock-string-face) 325 328 (fontified t) 328 334 (fontified t face font-lock-keyword-face) 334 335 (fontified t) 335 340 (fontified t face font-lock-keyword-face) 340 341 (fontified t) 341 344 (fontified t face font-lock-type-face) 344 345 (fontified t c-type c-decl-id-start face font-lock-type-face) 345 347 (fontified t) 347 353 (fontified t face font-lock-variable-name-face) 353 368 (fontified t) 368 369 (fontified t c-in-sws t c-is-sws t) 369 370 (fontified t face font-lock-comment-delimiter-face c-in-sws t c-is-sws t) 370 393 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 393 412 (fontified t face font-lock-comment-face c-in-sws t) 412 417 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 417 418 (fontified t c-in-sws t) 418 419 (fontified t c-is-sws t c-in-sws t) 419 420 (fontified t c-is-sws t) 420 440 (fontified t) 440 441 (fontified t c-type c-not-decl) 441 447 (fontified t) 447 448 (fontified t c-type c-not-decl) 448 454 (fontified t) 454 455 (fontified t c-type c-not-decl) 455 487 (fontified t) 487 488 (fontified t c-type c-not-decl) 488 494 (fontified t) 494 495 (fontified t c-type c-not-decl) 495 501 (fontified t) 501 502 (fontified t c-type c-not-decl) 502 534 (fontified t) 534 535 (fontified t c-type c-not-decl) 535 541 (fontified t) 541 542 (fontified t c-type c-not-decl) 542 548 (fontified t) 548 549 (fontified t c-type c-not-decl) 549 558 (fontified t) 558 559 (fontified t c-in-sws t c-is-sws t) 559 560 (fontified t face font-lock-comment-delimiter-face c-in-sws t c-is-sws t) 560 562 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 562 625 (fontified t face font-lock-comment-face c-in-sws t) 625 626 (fontified t c-is-sws t c-in-sws t) 626 627 (fontified t c-is-sws t) 627 647 (fontified t) 647 648 (fontified t c-type c-not-decl) 648 654 (fontified t) 654 655 (fontified t c-type c-not-decl) 655 661 (fontified t) 661 662 (fontified t c-type c-not-decl) 662 671 (fontified t) 671 672 (fontified t c-in-sws t c-is-sws t) 672 673 (fontified t face font-lock-comment-delimiter-face c-in-sws t c-is-sws t) 673 675 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 675 743 (fontified t face font-lock-comment-face c-in-sws t) 743 744 (fontified t c-is-sws t c-in-sws t) 744 745 (fontified t c-is-sws t) 745 765 (fontified t) 765 766 (fontified t c-type c-not-decl) 766 772 (fontified t) 772 773 (fontified t c-type c-not-decl) 773 779 (fontified t) 779 780 (fontified t c-type c-not-decl) 780 789 (fontified t) 789 790 (fontified t c-in-sws t c-is-sws t) 790 791 (fontified t face font-lock-comment-delimiter-face c-in-sws t c-is-sws t) 791 793 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 793 863 (fontified t face font-lock-comment-face c-in-sws t) 863 864 (fontified t c-is-sws t c-in-sws t) 864 865 (fontified t c-is-sws t) 865 885 (fontified t) 885 886 (fontified t c-type c-not-decl) 886 892 (fontified t) 892 893 (fontified t c-type c-not-decl) 893 899 (fontified t) 899 900 (fontified t c-type c-not-decl) 900 909 (fontified t) 909 910 (fontified t c-in-sws t c-is-sws t) 910 911 (fontified t face font-lock-comment-delimiter-face c-in-sws t c-is-sws t) 911 913 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 913 985 (fontified t face font-lock-comment-face c-in-sws t) 985 986 (fontified t c-is-sws t c-in-sws t) 986 987 (fontified t c-is-sws t) 987 1007 (fontified t) 1007 1008 (fontified t c-type c-not-decl) 1008 1014 (fontified t) 1014 1015 (fontified t c-type c-not-decl) 1015 1021 (fontified t) 1021 1022 (fontified t c-type c-not-decl) 1022 1032 (fontified t) 1032 1035 (fontified t face font-lock-comment-delimiter-face) 1035 1109 (fontified t face font-lock-comment-face) 1109 1113 (fontified t) 1113 1114 (fontified t face font-lock-comment-delimiter-face c-in-sws t c-is-sws t) 1114 1116 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 1116 1123 (fontified t face font-lock-comment-face c-in-sws t) 1123 1126 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 1126 1127 (fontified t c-in-sws t) 1127 1128 (fontified t face font-lock-keyword-face c-is-sws t) 1128 1133 (fontified t face font-lock-keyword-face) 1133 1134 (fontified t) 1134 1139 (fontified t face font-lock-keyword-face) 1139 1140 (fontified t) 1140 1143 (fontified t face font-lock-type-face) 1143 1144 (fontified t c-type c-decl-id-start face font-lock-type-face) 1144 1146 (fontified t) 1146 1150 (fontified t face font-lock-variable-name-face) 1150 1157 (fontified t) 1157 1160 (fontified t face font-lock-string-face) 1160 1162 (fontified t) 1162 1165 (fontified t face font-lock-string-face) 1165 1167 (fontified t) 1167 1170 (fontified t face font-lock-string-face) 1170 1172 (fontified t) 1172 1175 (fontified t face font-lock-string-face) 1175 1177 (fontified t) 1177 1180 (fontified t face font-lock-string-face) 1180 1183 (fontified t)) #("+			drw_setscheme(drw, scheme[SchemeInfoNorm]);" 0 1 (fontified t face diff-indicator-added) 1 47 (fontified t face diff-added)) #("+			drw_setscheme(drw, scheme[m == selmon ? SchemeInfoSel : SchemeInfoNorm]);" 0 1 (fontified t face diff-indicator-added) 1 77 (fontified t face diff-added)) #("+	drw_setscheme(drw, scheme[SchemeTagsNorm]);" 0 1 (fontified t face diff-indicator-added) 1 45 (fontified t face diff-added)) #("+		drw_setscheme(drw, scheme[SchemeStatus]);" 0 1 (fontified t face diff-indicator-added) 1 44 (fontified t face diff-added)) "(setq frame-resize-pixelwise t)" #("static const char col_1[]       = \"#282828\";
static const char col_2[]       = \"#695F55\";
static const char col_3[]       = \"#ebdbb2\";
static const char col_4[]       = \"#dfbf8e\";
static const char col_5[]       = \"#B8bb26\";
static const char col_6[]       = \"#C42824\";
static const char col_7[]       = \"#689d68\";" 0 1 (face font-lock-keyword-face c-is-sws t fontified t) 1 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t) 7 8 (face font-lock-keyword-face fontified t) 8 12 (face font-lock-keyword-face fontified t) 12 13 (fontified t) 13 16 (face font-lock-type-face fontified t) 16 17 (face font-lock-type-face c-type c-decl-id-start fontified t) 17 18 (fontified t) 18 23 (face font-lock-variable-name-face fontified t) 23 34 (fontified t) 34 35 (face font-lock-string-face fontified t) 35 42 (face ((:foreground "white") (:background "#282828")) fontified t) 42 43 (face font-lock-string-face fontified t) 43 45 (fontified t) 45 51 (face font-lock-keyword-face fontified t) 51 52 (fontified t) 52 57 (face font-lock-keyword-face fontified t) 57 58 (fontified t) 58 61 (face font-lock-type-face fontified t) 61 62 (face font-lock-type-face c-type c-decl-id-start fontified t) 62 63 (fontified t) 63 68 (face font-lock-variable-name-face fontified t) 68 79 (fontified t) 79 80 (face font-lock-string-face fontified t) 80 87 (face ((:foreground "white") (:background "#695F55")) fontified t) 87 88 (face font-lock-string-face fontified t) 88 90 (fontified t) 90 96 (face font-lock-keyword-face fontified t) 96 97 (fontified t) 97 102 (face font-lock-keyword-face fontified t) 102 103 (fontified t) 103 106 (face font-lock-type-face fontified t) 106 107 (face font-lock-type-face c-type c-decl-id-start fontified t) 107 108 (fontified t) 108 113 (face font-lock-variable-name-face fontified t) 113 124 (fontified t) 124 125 (face font-lock-string-face fontified t) 125 132 (face ((:foreground "black") (:background "#ebdbb2")) fontified t) 132 133 (face font-lock-string-face fontified t) 133 135 (fontified t) 135 141 (face font-lock-keyword-face fontified t) 141 142 (fontified t) 142 147 (face font-lock-keyword-face fontified t) 147 148 (fontified t) 148 151 (face font-lock-type-face fontified t) 151 152 (face font-lock-type-face c-type c-decl-id-start fontified t) 152 153 (fontified t) 153 158 (face font-lock-variable-name-face fontified t) 158 169 (fontified t) 169 170 (face font-lock-string-face fontified t) 170 177 (face ((:foreground "black") (:background "#dfbf8e")) fontified t) 177 178 (face font-lock-string-face fontified t) 178 180 (fontified t) 180 186 (face font-lock-keyword-face fontified t) 186 187 (fontified t) 187 192 (face font-lock-keyword-face fontified t) 192 193 (fontified t) 193 196 (face font-lock-type-face fontified t) 196 197 (face font-lock-type-face c-type c-decl-id-start fontified t) 197 198 (fontified t) 198 203 (face font-lock-variable-name-face fontified t) 203 214 (fontified t) 214 215 (face font-lock-string-face fontified t) 215 222 (face ((:foreground "black") (:background "#B8bb26")) fontified t) 222 223 (face font-lock-string-face fontified t) 223 225 (fontified t) 225 231 (face font-lock-keyword-face fontified t) 231 232 (fontified t) 232 237 (face font-lock-keyword-face fontified t) 237 238 (fontified t) 238 241 (face font-lock-type-face fontified t) 241 242 (face font-lock-type-face c-type c-decl-id-start fontified t) 242 243 (fontified t) 243 248 (face font-lock-variable-name-face fontified t) 248 259 (fontified t) 259 260 (face font-lock-string-face fontified t) 260 267 (face ((:foreground "white") (:background "#C42824")) fontified t) 267 268 (face font-lock-string-face fontified t) 268 270 (fontified t) 270 276 (face font-lock-keyword-face fontified t) 276 277 (fontified t) 277 282 (face font-lock-keyword-face fontified t) 282 283 (fontified t) 283 286 (face font-lock-type-face fontified t) 286 287 (face font-lock-type-face c-type c-decl-id-start fontified t) 287 288 (fontified t) 288 293 (face font-lock-variable-name-face fontified t) 293 304 (fontified t) 304 305 (face font-lock-string-face fontified t) 305 312 (face ((:foreground "black") (:background "#689d68")) fontified t) 312 313 (face font-lock-string-face fontified t) 313 314 (fontified t)) "Failed to verify signature archive-contents.sig:
No public key for 645357D2883A0966 created at 2024-05-02T06:10:04-0300 using EDDSA
Command output:
" "(require 'package)
(add-to-list 'package-archives '(\"melpa\" . \"https://melpa.org/packages/\") t)
;; Comment/uncomment this line to enable MELPA Stable if desired.  See `package-archive-priorities`
;; and `package-pinned-packages`. Most users will not need or want to do this.
;;(add-to-list 'package-archives '(\"melpa-stable\" . \"https://stable.melpa.org/packages/\") t)
(package-initialize)" #("Comic code:size=10:antialias=true:autohint=true" 0 47 (face font-lock-string-face fontified t)) #("	\"Comic code:size=10:antialias=true:autohint=true:pixelsize=16\",
	\"Mononoki Nerd Font:style=Bold:size=10:antialias=true:autohint=true:pixelsize=16\"" 0 1 (fontified t) 1 63 (face font-lock-string-face fontified t) 63 66 (fontified t) 66 147 (face font-lock-string-face fontified t)) #("/* appearance */
static const unsigned int borderpx         = 5;        /* border pixel of windows */
static const unsigned int gappx            = 10;       /* gaps between windows */
static const unsigned int snap             = 32;       /* snap pixel */
static const unsigned int systraypinning   = 0;        /* 0: sloppy systray follows selected monitor, >0: pin systray to monitor X */
static const unsigned int systrayonleft    = 0;        /* 0: systray in the right corner, >0: systray on left of status text */
static const unsigned int systrayspacing   = 0;        /* systray spacing */
static const int systraypinningfailfirst   = 1;        /* 1: if pinning fails, display systray on the first monitor, False: display systray on the last monitor*/
static const int showsystray               = 1;        /* 0 means no systray */
static const int showbar                   = 1;        /* 0 means no bar */
static const int topbar                    = 1;        /* 0 means bottom bar */
static const int user_bh                   = 10;        /* 2 is the default spacing around the bar's font */
static const char *fonts[]                 = {
	\"Comic code:size=10:antialias=true:autohint=true:pixelsize=16\",
	\"Mononoki Nerd Font:style=Bold:size=10:antialias=true:autohint=true:pixelsize=16\"
};" 0 1 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 1 3 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 3 13 (c-in-sws t face font-lock-comment-face fontified t) 13 16 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 16 17 (c-in-sws t fontified t) 17 18 (c-is-sws t face font-lock-keyword-face fontified t) 18 23 (face font-lock-keyword-face fontified t) 23 24 (fontified t) 24 29 (face font-lock-keyword-face fontified t) 29 30 (fontified t) 30 38 (face font-lock-type-face fontified t) 38 39 (fontified t) 39 41 (face font-lock-type-face fontified t) 41 42 (face font-lock-type-face c-type c-decl-id-start fontified t) 42 43 (fontified t) 43 51 (face font-lock-variable-name-face fontified t) 51 64 (fontified t) 64 72 (c-is-sws t c-in-sws t fontified t) 72 73 (c-is-sws t c-in-sws t face font-lock-comment-delimiter-face fontified t) 73 75 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 75 98 (c-in-sws t face font-lock-comment-face fontified t) 98 101 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 101 102 (c-in-sws t fontified t) 102 103 (c-is-sws t face font-lock-keyword-face fontified t) 103 108 (face font-lock-keyword-face fontified t) 108 109 (fontified t) 109 114 (face font-lock-keyword-face fontified t) 114 115 (fontified t) 115 123 (face font-lock-type-face fontified t) 123 124 (fontified t) 124 126 (face font-lock-type-face fontified t) 126 127 (face font-lock-type-face c-type c-decl-id-start fontified t) 127 128 (fontified t) 128 133 (face font-lock-variable-name-face fontified t) 133 150 (fontified t) 150 157 (c-is-sws t c-in-sws t fontified t) 157 158 (c-is-sws t c-in-sws t face font-lock-comment-delimiter-face fontified t) 158 160 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 160 180 (c-in-sws t face font-lock-comment-face fontified t) 180 183 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 183 184 (c-in-sws t fontified t) 184 185 (c-is-sws t face font-lock-keyword-face fontified t) 185 190 (face font-lock-keyword-face fontified t) 190 191 (fontified t) 191 196 (face font-lock-keyword-face fontified t) 196 197 (fontified t) 197 205 (face font-lock-type-face fontified t) 205 206 (fontified t) 206 208 (face font-lock-type-face fontified t) 208 209 (face font-lock-type-face c-type c-decl-id-start fontified t) 209 210 (fontified t) 210 214 (face font-lock-variable-name-face fontified t) 214 232 (fontified t) 232 239 (c-is-sws t c-in-sws t fontified t) 239 240 (c-is-sws t c-in-sws t face font-lock-comment-delimiter-face fontified t) 240 242 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 242 252 (c-in-sws t face font-lock-comment-face fontified t) 252 255 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 255 256 (c-in-sws t fontified t) 256 257 (c-is-sws t face font-lock-keyword-face fontified t) 257 262 (face font-lock-keyword-face fontified t) 262 263 (fontified t) 263 268 (face font-lock-keyword-face fontified t) 268 269 (fontified t) 269 277 (face font-lock-type-face fontified t) 277 278 (fontified t) 278 280 (face font-lock-type-face fontified t) 280 281 (face font-lock-type-face c-type c-decl-id-start fontified t) 281 282 (fontified t) 282 296 (face font-lock-variable-name-face fontified t) 296 303 (fontified t) 303 311 (c-is-sws t c-in-sws t fontified t) 311 312 (c-is-sws t c-in-sws t face font-lock-comment-delimiter-face fontified t) 312 314 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 314 386 (c-in-sws t face font-lock-comment-face fontified t) 386 389 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 389 390 (c-in-sws t fontified t) 390 391 (c-is-sws t face font-lock-keyword-face fontified t) 391 396 (face font-lock-keyword-face fontified t) 396 397 (fontified t) 397 402 (face font-lock-keyword-face fontified t) 402 403 (fontified t) 403 411 (face font-lock-type-face fontified t) 411 412 (fontified t) 412 414 (face font-lock-type-face fontified t) 414 415 (face font-lock-type-face c-type c-decl-id-start fontified t) 415 416 (fontified t) 416 429 (face font-lock-variable-name-face fontified t) 429 437 (fontified t) 437 445 (c-is-sws t c-in-sws t fontified t) 445 446 (c-is-sws t c-in-sws t face font-lock-comment-delimiter-face fontified t) 446 448 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 448 514 (c-in-sws t face font-lock-comment-face fontified t) 514 517 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 517 518 (c-in-sws t fontified t) 518 519 (c-is-sws t face font-lock-keyword-face fontified t) 519 524 (face font-lock-keyword-face fontified t) 524 525 (fontified t) 525 530 (face font-lock-keyword-face fontified t) 530 531 (fontified t) 531 539 (face font-lock-type-face fontified t) 539 540 (fontified t) 540 542 (face font-lock-type-face fontified t) 542 543 (face font-lock-type-face c-type c-decl-id-start fontified t) 543 544 (fontified t) 544 558 (face font-lock-variable-name-face fontified t) 558 565 (fontified t) 565 573 (c-is-sws t c-in-sws t fontified t) 573 574 (c-is-sws t c-in-sws t face font-lock-comment-delimiter-face fontified t) 574 576 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 576 591 (c-in-sws t face font-lock-comment-face fontified t) 591 594 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 594 595 (c-in-sws t fontified t) 595 596 (c-is-sws t face font-lock-keyword-face fontified t) 596 601 (face font-lock-keyword-face fontified t) 601 602 (fontified t) 602 607 (face font-lock-keyword-face fontified t) 607 608 (fontified t) 608 610 (face font-lock-type-face fontified t) 610 611 (face font-lock-type-face c-type c-decl-id-start fontified t) 611 612 (fontified t) 612 635 (face font-lock-variable-name-face fontified t) 635 642 (fontified t) 642 650 (c-is-sws t c-in-sws t fontified t) 650 651 (c-is-sws t c-in-sws t face font-lock-comment-delimiter-face fontified t) 651 653 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 653 754 (c-in-sws t face font-lock-comment-face fontified t) 754 756 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 756 757 (c-in-sws t fontified t) 757 758 (c-is-sws t face font-lock-keyword-face fontified t) 758 763 (face font-lock-keyword-face fontified t) 763 764 (fontified t) 764 769 (face font-lock-keyword-face fontified t) 769 770 (fontified t) 770 772 (face font-lock-type-face fontified t) 772 773 (face font-lock-type-face c-type c-decl-id-start fontified t) 773 774 (fontified t) 774 785 (face font-lock-variable-name-face fontified t) 785 804 (fontified t) 804 812 (c-is-sws t c-in-sws t fontified t) 812 813 (c-is-sws t c-in-sws t face font-lock-comment-delimiter-face fontified t) 813 815 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 815 833 (c-in-sws t face font-lock-comment-face fontified t) 833 836 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 836 837 (c-in-sws t fontified t) 837 838 (c-is-sws t face font-lock-keyword-face fontified t) 838 843 (face font-lock-keyword-face fontified t) 843 844 (fontified t) 844 849 (face font-lock-keyword-face fontified t) 849 850 (fontified t) 850 852 (face font-lock-type-face fontified t) 852 853 (face font-lock-type-face c-type c-decl-id-start fontified t) 853 854 (fontified t) 854 861 (face font-lock-variable-name-face fontified t) 861 884 (fontified t) 884 892 (c-is-sws t c-in-sws t fontified t) 892 893 (c-is-sws t c-in-sws t face font-lock-comment-delimiter-face fontified t) 893 895 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 895 909 (c-in-sws t face font-lock-comment-face fontified t) 909 912 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 912 913 (c-in-sws t fontified t) 913 914 (c-is-sws t face font-lock-keyword-face fontified t) 914 919 (face font-lock-keyword-face fontified t) 919 920 (fontified t) 920 925 (face font-lock-keyword-face fontified t) 925 926 (fontified t) 926 928 (face font-lock-type-face fontified t) 928 929 (face font-lock-type-face c-type c-decl-id-start fontified t) 929 930 (fontified t) 930 936 (face font-lock-variable-name-face fontified t) 936 960 (fontified t) 960 968 (c-is-sws t c-in-sws t fontified t) 968 969 (c-is-sws t c-in-sws t face font-lock-comment-delimiter-face fontified t) 969 971 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 971 989 (c-in-sws t face font-lock-comment-face fontified t) 989 992 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 992 993 (c-in-sws t fontified t) 993 994 (c-is-sws t face font-lock-keyword-face fontified t) 994 999 (face font-lock-keyword-face fontified t) 999 1000 (fontified t) 1000 1005 (face font-lock-keyword-face fontified t) 1005 1006 (fontified t) 1006 1008 (face font-lock-type-face fontified t) 1008 1009 (face font-lock-type-face c-type c-decl-id-start fontified t) 1009 1010 (fontified t) 1010 1017 (face font-lock-variable-name-face fontified t) 1017 1041 (fontified t) 1041 1049 (c-is-sws t c-in-sws t fontified t) 1049 1050 (c-is-sws t c-in-sws t face font-lock-comment-delimiter-face fontified t) 1050 1052 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 1052 1091 (c-in-sws t face font-lock-comment-face fontified t) 1091 1092 (c-in-sws t face font-lock-comment-face fontified t syntax-table (1)) 1092 1098 (c-in-sws t face font-lock-comment-face fontified t) 1098 1101 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 1101 1102 (c-in-sws t fontified t) 1102 1103 (c-is-sws t face font-lock-keyword-face fontified t) 1103 1108 (face font-lock-keyword-face fontified t) 1108 1109 (fontified t) 1109 1114 (face font-lock-keyword-face fontified t) 1114 1115 (fontified t) 1115 1118 (face font-lock-type-face fontified t) 1118 1119 (face font-lock-type-face c-type c-decl-id-start fontified t) 1119 1121 (fontified t) 1121 1126 (face font-lock-variable-name-face fontified t) 1126 1150 (fontified t) 1150 1212 (face font-lock-string-face fontified t) 1212 1215 (fontified t) 1215 1296 (face font-lock-string-face fontified t) 1296 1299 (fontified t)) #("/* See LICENSE file for copyright and license details. */
/*imports*/
#include <X11/XF86keysym.h>" 0 1 (c-is-sws t c-in-sws t face font-lock-comment-delimiter-face fontified t) 1 3 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 3 54 (c-in-sws t face font-lock-comment-face fontified t) 54 56 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 56 57 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 57 58 (c-in-sws t fontified t) 58 59 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 59 60 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 60 67 (c-in-sws t face font-lock-comment-face fontified t) 67 69 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 69 70 (c-in-sws t fontified t) 70 71 (c-in-sws t c-is-sws t face font-lock-preprocessor-face fontified t) 71 78 (c-in-sws t face font-lock-preprocessor-face fontified t) 78 79 (c-in-sws t fontified t) 79 80 (c-in-sws t syntax-table (4 . 62) face font-lock-string-face fontified t) 80 96 (c-in-sws t face font-lock-string-face fontified t) 96 97 (c-in-sws t syntax-table (5 . 60) face font-lock-string-face fontified t)) #("+static const char autostartblocksh[] = \"autostart_blocking.sh\";
+static const char autostartsh[] = \"autostart.sh\";
 static const char broken[] = \"broken\";
+static const char dwmdir[] = \"dwm\";
+static const char localshare[] = \".local/share\";" 0 1 (face diff-indicator-added fontified t) 1 65 (face diff-added fontified t) 65 66 (face diff-indicator-added fontified t) 66 116 (face diff-added fontified t) 116 156 (face diff-context fontified t) 156 157 (face diff-indicator-added fontified t) 157 193 (face diff-added fontified t) 193 194 (face diff-indicator-added fontified t) 194 242 (face diff-added fontified t)) #("+					attachbottom(c);" 0 1 (face diff-indicator-added fontified t) 1 22 (face diff-added fontified t)) #("+static int restart = 0;" 0 1 (face diff-indicator-added fontified t) 1 24 (face diff-added fontified t)) #("+static void sighup(int unused);
+static void sigterm(int unused);" 0 1 (face diff-indicator-added fontified t) 1 33 (face diff-added fontified t) 33 34 (face diff-indicator-added fontified t) 34 66 (face diff-added fontified t)) #("+	drw_setscheme(drw, scheme[SchemeTagsNorm]);" 0 1 (face diff-indicator-added fontified t) 1 45 (face diff-added fontified t)) #("+		drw_setscheme(drw, scheme[SchemeStatus])" 0 1 (face diff-indicator-added fontified t) 1 43 (face diff-added fontified t)) #("SchemeStatus" 0 12 (face diff-added fontified t)) #("+		if (showsystray && m == systraytomon(m))
+			XMapRaised(dpy, systray->win);" 0 1 (face diff-indicator-added fontified t) 1 44 (face diff-added fontified t) 44 45 (face diff-indicator-added fontified t) 45 78 (face diff-added fontified t)) #("+		w = m->ww;
+		if (showsystray && m == systraytomon(m))
+			w -= getsystraywidth();
+		m->barwin = XCreateWindow(dpy, root, m->wx, m->by, w, bh, 0, DefaultDepth(dpy, screen)," 0 1 (face diff-indicator-added fontified t) 1 14 (face diff-added fontified t) 14 15 (face diff-indicator-added fontified t) 15 58 (face diff-added fontified t) 58 59 (face diff-indicator-added fontified t) 59 81 (face diff-added fontified t) 81 86 (face diff-added fontified t) 86 87 (face diff-indicator-added fontified t) 87 176 (face diff-added fontified t)) #("+	resizebarwin(selmon);
+	if (showsystray) {
+		XWindowChanges wc;
+		if (!selmon->showbar)
+			wc.y = -bh;
+		else if (selmon->showbar) {
+			wc.y = 0;
+			if (!selmon->topbar)
+				wc.y = selmon->mh - bh;
+		}
+		XConfigureWindow(dpy, systray->win, CWY, &wc);
+	}" 0 1 (face diff-indicator-added fontified t) 1 24 (face diff-added fontified t) 24 25 (face diff-indicator-added fontified t) 25 45 (face diff-added fontified t) 45 46 (face diff-indicator-added fontified t) 46 67 (face diff-added fontified t) 67 68 (face diff-indicator-added fontified t) 68 92 (face diff-added fontified t) 92 93 (face diff-indicator-added fontified t) 93 108 (face diff-added fontified t) 108 109 (face diff-indicator-added fontified t) 109 139 (face diff-added fontified t) 139 140 (face diff-indicator-added fontified t) 140 153 (face diff-added fontified t) 153 154 (face diff-indicator-added fontified t) 154 178 (face diff-added fontified t) 178 179 (face diff-indicator-added fontified t) 179 207 (face diff-added fontified t) 207 208 (face diff-indicator-added fontified t) 208 212 (face diff-added fontified t) 212 213 (face diff-indicator-added fontified t) 213 262 (face diff-added fontified t) 262 263 (face diff-indicator-added fontified t) 263 265 (face diff-added fontified t)) #("+	resizebarwin(m);" 0 1 (face diff-indicator-added fontified t) 1 18 (face diff-added fontified t)) #("+		tw = m->ww - drawstatusbar(m, bh, stext);" 0 1 (face diff-indicator-added fontified t) 1 44 (face diff-added fontified t)) #("+	if(showsystray && m == systraytomon(m) && !systrayonleft)
+		stw = getsystraywidth();
+" 0 1 (face diff-indicator-added fontified t) 1 60 (face diff-added fontified t) 60 61 (face diff-indicator-added fontified t) 61 88 (face diff-added fontified t) 88 89 (face diff-indicator-added fontified t)) #("+				resizebarwin(m);" 0 1 (face diff-indicator-added fontified t) 1 21 (face diff-added fontified t)) #("+static Atom wmatom[WMLast], netatom[NetLast], xatom[XLast];" 0 1 (face diff-indicator-added fontified t) 1 60 (face diff-added fontified t)) #("+    [ResizeRequest] = resizerequest," 0 1 (face diff-indicator-added fontified t) 1 37 (face diff-added fontified t)) #("+static Systray *systray = NULL;" 0 1 (face diff-indicator-added fontified t) 1 32 (face diff-added fontified t)) #("+static Client *wintosystrayicon(Window w);" 0 1 (face diff-indicator-added fontified t) 1 43 (face diff-added fontified t)) #("+static void updatesystray(void);
+static void updatesystrayicongeom(Client *i, int w, int h);
+static void updatesystrayiconstate(Client *i, XPropertyEvent *ev);" 0 1 (face diff-indicator-added fontified t) 1 34 (face diff-added fontified t) 34 35 (face diff-indicator-added fontified t) 35 95 (face diff-added fontified t) 95 96 (face diff-indicator-added fontified t) 96 162 (face diff-added fontified t)) #("+enum { Manager, Xembed, XembedInfo, XLast }; /* Xembed atoms */" 0 1 (face diff-indicator-added fontified t) 1 64 (face diff-added fontified t)) #("+       NetSystemTray, NetSystemTrayOP, NetSystemTrayOrientation, NetSystemTrayOrientationHorz," 0 1 (face diff-indicator-added fontified t) 1 95 (face diff-added fontified t)) #("+       NetSystemTray, NetSystemTrayOP, NetSystemTrayOrientation, NetSystemTrayOrientationHorz," 0 1 (face diff-indicator-added fontified t) 1 95 (face diff-added fontified t)) #("+#define SYSTEM_TRAY_REQUEST_DOCK    0
+/* XEMBED messages */
+#define XEMBED_EMBEDDED_NOTIFY      0
+#define XEMBED_WINDOW_ACTIVATE      1
+#define XEMBED_FOCUS_IN             4
+#define XEMBED_MODALITY_ON         10
+#define XEMBED_MAPPED              (1 << 0)
+#define XEMBED_WINDOW_ACTIVATE      1
+#define XEMBED_WINDOW_DEACTIVATE    2
+#define VERSION_MAJOR               0
+#define VERSION_MINOR               0
+#define XEMBED_EMBEDDED_VERSION (VERSION_MAJOR << 16) | VERSION_MINOR
" 0 1 (face diff-indicator-added fontified t) 1 39 (face diff-added fontified t) 39 40 (face diff-indicator-added fontified t) 40 62 (face diff-added fontified t) 62 63 (face diff-indicator-added fontified t) 63 101 (face diff-added fontified t) 101 102 (face diff-indicator-added fontified t) 102 140 (face diff-added fontified t) 140 141 (face diff-indicator-added fontified t) 141 179 (face diff-added fontified t) 179 180 (face diff-indicator-added fontified t) 180 218 (face diff-added fontified t) 218 219 (face diff-indicator-added fontified t) 219 263 (face diff-added fontified t) 263 264 (face diff-indicator-added fontified t) 264 302 (face diff-added fontified t) 302 303 (face diff-indicator-added fontified t) 303 341 (face diff-added fontified t) 341 342 (face diff-indicator-added fontified t) 342 380 (face diff-added fontified t) 380 381 (face diff-indicator-added fontified t) 381 419 (face diff-added fontified t) 419 420 (face diff-indicator-added fontified t) 420 490 (face diff-added fontified t)) #("+			drw_rect(drw, x, 0, w - 2 * sp, bh, 1, 1);" 0 1 (face diff-indicator-added fontified t) 1 46 (face diff-added fontified t)) #("+			drw_text(drw, x, 0, w - 2 * sp, bh, lrpad / 2, m->sel->name, 0);" 0 1 (face diff-indicator-added fontified t) 1 68 (face diff-added fontified t)) #("+			drw_setscheme(drw, scheme[SchemeInfoNorm]);" 0 1 (face diff-indicator-added fontified t) 1 47 (face diff-added fontified t)) #("+			drw_setscheme(drw, scheme[m == selmon ? SchemeInfoSel : SchemeInfoNorm]);" 0 1 (face diff-indicator-added fontified t) 1 77 (face diff-added fontified t)) #("+	drw_setscheme(drw, scheme[SchemeTagsNorm]);" 0 1 (face diff-indicator-added fontified t) 1 45 (face diff-added fontified t)) #("+static void sighup(int unused);
+static void sigterm(int unused);" 0 1 (face diff-indicator-added fontified t) 1 33 (face diff-added fontified t) 33 34 (face diff-indicator-added fontified t) 34 66 (face diff-added fontified t))))
(setq search-ring '(#("/" 0 1 (isearch-regexp-function nil isearch-case-fold-search t))))
(setq regexp-search-ring '("drw_clr" "drawbar" "\\(/*\\).*?\\(vari\\)" "updatege" "updatebars" "togglebar" "draw" "setup" "configureno" "sp" "indent" "scheme\\[SchemeNorm]\\[ColB" "updatesys" "mai"))
