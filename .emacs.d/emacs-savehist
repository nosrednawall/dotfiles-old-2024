;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by ‘savehist’.

(setq savehist-minibuffer-history-variables '(flycheck-read-checker-history ido-file-history read-expression-history ido-buffer-history file-name-history empty-history minibuffer-history ivy-history swiper-history counsel-M-x-history))
(setq flycheck-read-checker-history '(#("c/c++-gcc" 0 9 (ivy-index 10)) #("c/c++-clang" 0 11 (ivy-index 2))))
(setq ido-file-history '("tutorial_emacs" "ac-comphist.dat"))
(setq ido-buffer-history '("*Messages*" "*Ibuffer*" "*dashboard*" "picom.conf" "config.def.h" "dwm.c"))
(setq file-name-history '(#("/home/anderson/.dotfiles/.local/bin/dmenu/dmenu-atalhos-programas" 0 65 (ivy-index 0)) "~/.config/kitty/kitty.conf" #("/home/anderson/comandos_emacs.txt" 0 33 (ivy-index 2)) #("/home/anderson/.dotfiles/.config/" 0 33 (ivy-index 0)) "~/.dotfiles/.emacs.d/myinit.org" "~/.dotfiles/.emacs.d/init.el" "~/.dotfiles/.local/bin/slock_personalizado" "~/.dotfiles/.local/bin/verifica_capslock" "~/Anotacoes/2024-01-02-Nota-21-14.xopp" "~/.dotfiles/.dwm/config.def.h" "~/.dotfiles/.dwm/dwm.c" "~/.dotfiles/.local/bin/checkDebianUpdate.py" "~/.dotfiles/.local/bin/statusbar/dwmbar-colored" "~/.local/bin/statusbar/dwmbar-colored" "~/.dotfiles/.config/dmenu/config.def.h" "~/.dotfiles/.local/bin/if_monitor.sh" "~/.dotfiles/.local/bin/dmenu/dmenu-monitor" "~/.emacs.d/myinit.org" "~/.dotfiles/.local/bin/dmenu/dmenu-pulseaudio-sink" "~/.dotfiles/.local/bin/dmenu/dmenu-power" "~/.dotfiles/.config/dwmblocks/blocks.def.h"))
(setq ivy-history '(#("Todo" 0 4 (ivy-index 0))))
(setq swiper-history '(#("static Monitor *createmon(void);" 0 32 (ivy-index 0)) #(" static Monitor *createmon(void);" 0 1 (swiper-line-number 184 display "184  ") 1 7 (fontified t face font-lock-keyword-face) 7 8 (fontified t) 8 14 (fontified t face font-lock-type-face) 14 15 (fontified t c-type c-decl-id-start face font-lock-type-face) 15 17 (fontified t) 17 26 (fontified t face font-lock-function-name-face) 26 27 (fontified t c-type c-decl-arg-start) 27 31 (fontified t face font-lock-type-face) 31 33 (fontified t)) #("die(\"error, cannot allocate color '%s'\", clrname);" 0 50 (ivy-index 0)) #(" 		die(\"error, cannot allocate color '%s'\", clrname);" 0 1 (swiper-line-number 192 display "192 ") 1 7 (fontified t) 7 37 (fontified t face font-lock-string-face) 37 38 (syntax-table (1) fontified t face font-lock-string-face) 38 40 (fontified t face font-lock-string-face) 40 41 (syntax-table (1) fontified t face font-lock-string-face) 41 42 (fontified t face font-lock-string-face) 42 53 (fontified t)) #("drawbar" 0 7 (ivy-index 2)) #(" drawbar(Monitor *m)" 0 1 (display "964  " swiper-line-number 964) 1 8 (face font-lock-function-name-face fontified t) 8 9 (c-type c-decl-arg-start fontified t) 9 16 (face font-lock-type-face fontified t) 16 18 (fontified t) 18 19 (face font-lock-variable-name-face fontified t) 19 20 (fontified t)) #("updatebars" 0 10 (ivy-index 3)) #(" updatebars(void)" 0 1 (display "2427 " swiper-line-number 2427) 1 11 (face font-lock-function-name-face fontified t) 11 12 (c-type c-decl-arg-start fontified t) 12 16 (face font-lock-type-face fontified t) 16 17 (fontified t)) #("togglebar" 0 9 (ivy-index 1)) #(" togglebar(const Arg *arg)" 0 1 (display "2260 " swiper-line-number 2260) 1 10 (face font-lock-function-name-face fontified t) 10 11 (c-type c-decl-arg-start fontified t) 11 16 (face font-lock-keyword-face fontified t) 16 17 (fontified t) 17 20 (face font-lock-type-face fontified t) 20 22 (fontified t) 22 25 (face font-lock-variable-name-face fontified t) 25 26 (fontified t)) #("drw_map" 0 7 (ivy-index 0)) #(" 	drw_map(drw, m->barwin, 0, 0, m->ww - stw, bh);" 0 1 (display "1022 " swiper-line-number 1022) 1 49 (fontified t)) #("configureno" 0 11 (ivy-index 3)) #(" configurenotify(XEvent *e)" 0 1 (display "674  " swiper-line-number 674) 1 16 (face font-lock-function-name-face fontified t) 16 17 (c-type c-decl-arg-start fontified t) 17 23 (face font-lock-type-face fontified t) 23 25 (fontified t) 25 26 (face font-lock-variable-name-face fontified t) 26 27 (fontified t))))
(setq counsel-M-x-history '(#("^rainbo" 0 7 (ivy-index 0)) "rainbow-mode" #("^rain" 0 5 (ivy-index 0)) #("^fly" 0 4 (ivy-index 5)) "flycheck-disable-checker" #("^flych" 0 6 (ivy-index 1)) "flycheck-previous-error" "flycheck-error-list-mode" #("^flycheck-mode" 0 14 (ivy-index 0)) "flycheck-mode" #("^flyc" 0 5 (ivy-index 24)) "flycheck-compile" #("^flyche" 0 7 (ivy-index 0)) "flycheck-list-errors" #("^c" 0 2 (ivy-index 12)) "c-or-c++-mode" #("^elin" 0 5 (ivy-index 2)) "elint-initialize" #("^magit" 0 6 (ivy-index 61)) "magit" #("^todo" 0 5 (ivy-index 5)) "todo-print-buffer" "todo-edit-quit" "todo-show" #("^spaceline" 0 10 (ivy-index 64)) "spaceline-toggle-nyan-cat-on"))
(setq projectile-project-command-history '#s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data ()))
(setq kill-ring '("+	{ MODKEY,                       XK_r,      setlayout,      {.v = &layouts[3]} },
+	{ MODKEY|ShiftMask,             XK_r,      setlayout,      {.v = &layouts[4]} }," "+ 	{ \"[@]\",      spiral },
+ 	{ \"[\\\\]\",      dwindle }," "#include \"fibonacci.c\"" "+	{ MODKEY,                       XK_g,      setlayout,      {.v = &layouts[3]} }," "{ \"HHH\",      grid }," "#include \"layouts.c\"" "static void deck(Monitor *m);" "static Monitor *createmon(void);" "{ \"[D]\",      deck }," "+	{ MODKEY,                       XK_r,      setlayout,      {.v = &layouts[3]} }," #("	{ \"QtPass\",                  \"qtpass\",		NULL,	   1 << 5,              0,              -1 }," 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t face font-lock-string-face) 4 5 (fontified t face font-lock-string-face) 5 6 (fontified t face font-lock-string-face) 6 7 (fontified t face font-lock-string-face) 7 8 (fontified t face font-lock-string-face) 8 9 (fontified t face font-lock-string-face) 9 10 (fontified t face font-lock-string-face) 10 11 (rear-nonsticky t fontified t face font-lock-string-face) 11 12 (rear-nonsticky t fontified t) 12 13 (fontified t) 13 14 (fontified t) 14 15 (fontified t) 15 16 (fontified t) 16 17 (fontified t) 17 18 (fontified t) 18 19 (fontified t) 19 20 (fontified t) 20 21 (fontified t) 21 22 (fontified t) 22 23 (fontified t) 23 24 (fontified t) 24 25 (fontified t) 25 26 (fontified t) 26 27 (fontified t) 27 28 (fontified t) 28 29 (fontified t) 29 30 (fontified t) 30 31 (fontified t face font-lock-string-face) 31 32 (fontified t face font-lock-string-face) 32 33 (fontified t face font-lock-string-face) 33 34 (fontified t face font-lock-string-face) 34 35 (fontified t face font-lock-string-face) 35 36 (fontified t face font-lock-string-face) 36 37 (fontified t face font-lock-string-face) 37 38 (fontified t face font-lock-string-face) 38 39 (fontified t) 39 41 (fontified t) 41 42 (fontified t face font-lock-constant-face) 42 45 (face font-lock-constant-face fontified t) 45 49 (fontified t) 49 55 (fontified t) 55 56 (fontified t) 56 91 (fontified t) 91 92 (rear-nonsticky t fontified t)) "dest->pixel |= 0xff << 24;" "die(\"error, cannot allocate color '%s'\", clrname);" "" #("	{ \"Emacs\",		      \"emacs\",		NULL,	   1 << 1,		0,		-1 }," 0 3 (fontified t) 3 10 (fontified t face font-lock-string-face) 10 19 (fontified t) 19 26 (fontified t face font-lock-string-face) 26 29 (fontified t) 29 33 (fontified t face font-lock-constant-face) 33 56 (fontified t)) "" "" "󰿈" "" #("	{ \"TelegramDesktop\",\"telegram-desktop\",		NULL,	   1 << 4,              0,              -1 }," 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 19 (fontified t face font-lock-string-face) 19 20 (rear-nonsticky t fontified t face font-lock-string-face) 20 21 (fontified t rear-nonsticky t) 21 39 (fontified t face font-lock-string-face) 39 40 (fontified t) 40 42 (fontified t) 42 46 (fontified t face font-lock-constant-face) 46 56 (fontified t) 56 57 (fontified t) 57 92 (fontified t) 92 93 (fontified t rear-nonsticky t)) #(" \"TelegramDesktop\"," 0 1 (fontified t) 1 17 (fontified t face font-lock-string-face) 17 18 (fontified t rear-nonsticky t face font-lock-string-face) 18 19 (fontified t)) "\"telegram-desktop\", \"TelegramDesktop\"" #("	{ \"Spotube\",		    \"spotube\",		NULL,	   1 << 6,              0,              -1 }," 0 3 (fontified t) 3 12 (fontified t face font-lock-string-face) 12 19 (fontified t) 19 28 (fontified t face font-lock-string-face) 28 31 (fontified t) 31 35 (fontified t face font-lock-constant-face) 35 45 (fontified t) 45 46 (fontified t) 46 82 (fontified t)) #("\"\"" 0 2 (fontified t face font-lock-comment-face c-in-sws t) 2 3 (fontified t face font-lock-comment-face c-in-sws t)) #("\"\", \"\", \"\", \"\"," 0 2 (fontified t face font-lock-string-face) 2 3 (fontified t face font-lock-string-face) 3 4 (fontified t) 4 5 (fontified t) 5 7 (fontified t face font-lock-string-face) 7 8 (fontified t face font-lock-string-face) 8 10 (fontified t) 10 12 (fontified t face font-lock-string-face) 12 13 (fontified t face font-lock-string-face) 13 15 (fontified t) 15 17 (fontified t face font-lock-string-face) 17 18 (fontified t face font-lock-string-face) 18 19 (fontified t)) #("" 0 1 (face font-lock-string-face fontified t)) "static const char *tags[] = { \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\" };" "drw_text(drw, x, 0, w, bh, mid, m->sel->name, 0);" "+            /* fix overflow when window name is bigger than window width */
+			int mid = (m->ww - (int)TEXTW(m->sel->name)) / 2 - x;
+			/* make sure name will not overlap on tags even when it is very long */
+			mid = mid >= lrpad / 2 ? mid : lrpad / 2;" "+		m->barwin = XCreateWindow(dpy, root, m->wx + sp, m->by + vp, m->ww - 2 * sp, bh, 0, DefaultDepth(dpy, screen)," "+	XMoveResizeWindow(dpy, selmon->barwin, selmon->wx + sp, selmon->by + vp, selmon->ww - 2 * sp, bh);" "+			drw_rect(drw, x, 0, w - 2 * sp, bh, 1, 1);" "+			drw_text(drw, x, 0, w - 2 * sp, bh, lrpad / 2, m->sel->name, 0);" "+		drw_text(drw, m->ww - sw - 2 * sp, 0, sw, bh, 0, stext, 0);
" "+				XMoveResizeWindow(dpy, m->barwin, m->wx + sp, m->by + vp, m->ww -  2 * sp, bh);" "+static const int vertpad            = 10;       /* vertical padding of bar */
+static const int sidepad            = 10;       /* horizontal padding of bar */" "drw_text(drw, x, 0, w, bh, lrpad / 2, masterclientontag[i], urg & 1 << i);" "+		/* do not draw vacant tags */
+		if (!(occ & 1 << i || m->tagset[m->seltags] & 1 << i))
+		continue;
+
+		if (masterclientontag[i])
+			snprintf(tagdisp, 64, ptagf, tags[i], masterclientontag[i]);
+		else
+			snprintf(tagdisp, 64, etagf, tags[i]);
+		masterclientontag[i] = tagdisp;
+		tagw[i] = w = TEXTW(masterclientontag[i]);" "+		for (i = 0; i < LENGTH(tags); i++)
+			if (!masterclientontag[i] && c->tags & (1<<i)) {
+				XClassHint ch = { NULL, NULL };
+				XGetClassHint(dpy, c->win, &ch);
+				masterclientontag[i] = ch.res_class;
+				if (lcaselbl)
+				masterclientontag[i][0] = tolower(masterclientontag[i][0]);
+			}" "+		occ |= c->tags == 255 ? 0 : c->tags;" "+	for (i = 0; i < LENGTH(tags); i++)
+		masterclientontag[i] = NULL;" #("\"#ea6962\"" 0 1 (face font-lock-comment-face fontified t c-in-sws t) 1 8 (face ((:foreground "black") (:background "#ea6962")) fontified t c-in-sws t) 8 9 (face font-lock-comment-face fontified t c-in-sws t)) #("	{ ControlMask|Mod1Mask,         XK_l,                           spawn,          SHCMD(\"~/.local/bin/slock_personalizado\") }," 0 1 (c-in-sws t c-is-sws t fontified t) 1 2 (c-type c-not-decl c-is-sws t fontified t) 2 23 (fontified t) 23 24 (c-type c-not-decl fontified t) 24 37 (fontified t) 37 38 (c-type c-not-decl fontified t) 38 70 (fontified t) 70 71 (c-type c-not-decl fontified t) 71 87 (fontified t) 87 121 (face font-lock-string-face fontified t) 121 125 (fontified t)) #("// \"#ebdbb2\";" 0 1 (face font-lock-comment-face c-in-sws t fontified t) 1 2 (face font-lock-comment-face c-in-sws t fontified t) 2 3 (face font-lock-comment-face c-in-sws t fontified t) 3 4 (face font-lock-comment-face c-in-sws t fontified t) 4 11 (face font-lock-comment-face c-in-sws t fontified t) 11 12 (face font-lock-comment-face c-in-sws t fontified t) 12 13 (face font-lock-comment-face c-in-sws t fontified t)) #("\"#ea6962\";" 0 1 (face font-lock-comment-face c-in-sws t fontified t) 1 8 (face font-lock-comment-face c-in-sws t fontified t) 8 9 (face font-lock-comment-face c-in-sws t fontified t) 9 10 (face font-lock-comment-face c-in-sws t fontified t)) "" "Warning (flycheck): Syntax checker c/c++-gcc reported too many errors (1974) and is disabled" #("kitty +list-fonts --psnames" 0 27 (fontified t face font-lock-comment-face)) "Only in Neotree Buffer:

    n next line, p previous line。
    SPC or RET or TAB Open current item if it is a file. Fold/Unfold current item if it is a directory.
    U Go up a directory
    g Refresh
    A Maximize/Minimize the NeoTree Window
    H Toggle display hidden files
    O Recursively open a directory
    C-c C-n Create a file or create a directory if filename ends with a ‘/’
    C-c C-d Delete a file or a directory.
    C-c C-r Rename a file or a directory.
    C-c C-c Change the root directory.
    C-c C-p Copy a file or a directory.
" ">> Tente agora M-<, para mover o cursor ao começo do tutorial.
   Use então C-v repetidamente para trazer o cursor novamente aqui.

>> Tente agora M->, para mover o cursor ao fim do tutorial.
   Use então M-v repetidamente para trazer o cursor novamente aqui.
" ">> Tente agora M-<, para mover o cursor ao começo do tutorial.
   Use então C-v repetidamente para trazer o cursor novamente aqui.

>> Tente agora M->, para mover o cursor ao fim do tutorial.
   Use então M-v repetidamente para trazer o cursor novamente aqui." "drw_text(drw, m->ww - tw - 2 * sp, 0, tw, bh, 0, stext, 0);" "XMoveResizeWindow(dpy, m->barwin, m->wx + sp, m->by + vp, m->ww -  2 * sp, bh);" "+static const int vertpad            = 10;       /* vertical padding of bar */
+static const int sidepad            = 10;       /* horizontal padding of bar */" "(use-package magit
  :defer t
  :config
  ;; Highlight what changed in diffs.
  (setq magit-diff-refine-hunk t))" "(defvar file-name-handler-alist-old file-name-handler-alist)

;; https://lists.gnu.org/archive/html/bug-gnu-emacs/2017-12/msg01088.html
;; Long-story short, use select-active-regions 'only to make visual selection faster.
(setq-default gc-cons-threshold 800000
          select-active-regions 'only
          file-name-handler-alist nil
          gc-cons-percentage 0.6
          auto-window-vscroll nil
          message-log-max 16384)

(add-hook 'after-init-hook
      `(lambda ()
     (setq file-name-handler-alist file-name-handler-alist-old
       gc-cons-threshold 80000
       select-active-regions 'only
       gc-cons-percentage 0.1)
     (garbage-collect)) t)

(setq inhibit-compacting-font-caches t)

;; Optimize garbage collection
(use-package gcmh
  :ensure t
  :disabled t
  :init
  (setq gcmh-verbose nil)
  :config
  (gcmh-mode 1))" "(setq org-babel-sh-command \"/bin/bash\")" ";; Clean whitespace before saving a file
(add-hook 'before-save-hook 'whitespace-cleanup)
" ";; Starts the Emacs server for emacsclient only if it's not started already
(load \"server\")
(unless (server-running-p) (server-start))" ";; Add frame margins. This makes things more pleasant to read.
(setq default-frame-alist '((internal-border-width . 20)))"))
(setq search-ring 'nil)
(setq regexp-search-ring '("\\(static\\).*?\\(Monitor\\).*?\\(*createmon(void);\\)" "\\(die(\"error,\\).*?\\(cannot\\).*?\\(allocate\\).*?\\(color\\).*?\\('%s'\",\\).*?\\(clrname);\\)" "drawbar" "updatebars" "togglebar" "drw_map" "configureno"))
