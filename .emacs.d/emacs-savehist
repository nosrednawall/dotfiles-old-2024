;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by ‘savehist’.

(setq savehist-minibuffer-history-variables '(magit-revision-history extended-command-history ido-file-history minibuffer-history empty-history read-from-kill-ring-history ivy-history counsel-M-x-history swiper-history ido-buffer-history file-name-history))
(setq magit-revision-history '(#("main" 0 4 (ivy-index 0)) #("ola mundo" 0 9 (ivy-index 0))))
(setq ido-file-history '("volume_icon.sh" "battery_status.sh" "advinha_mais.html" "estrelas.html" "media_idades_familiares.html" "media_idades_familiares.hml" "tabuada.html" "ano_copa.html" "jogo_advinha.html" "futebol.html" "imc.html" "programa.html" "texto_puro.html" "primeiro_teste.html"))
(setq minibuffer-history '("/usr/bin/bash" "/usr/bin/zsh"))
(setq ivy-history '(#("electric-indent-mode" 0 20 (ivy-index 14)) #("indent-guide" 0 12 (ivy-index 0)) #("web-mode-indent-style" 0 21 (ivy-index 0)) #("rainbow-mode" 0 12 (ivy-index 3))))
(setq counsel-M-x-history '(#("^rain" 0 5 (ivy-index 0)) "rainbow-mode" #("^ansi" 0 5 (ivy-index 1)) "ansi-term" #("^magit-stat" 0 11 (ivy-index 2)) "magit-status" #("^magit-status" 0 13 (ivy-index 1)) #("^ansi-te" 0 8 (ivy-index 0)) #("^rainbo" 0 7 (ivy-index 0)) #("^java" 0 5 (ivy-index 1)) "javascript-mode" #("^customize-va" 0 13 (ivy-index 0)) "customize-variable" #("^indent-gui" 0 11 (ivy-index 0)) "indent-guide-mode" #("^package-install" 0 16 (ivy-index 0)) "package-install" #("^package-lis" 0 12 (ivy-index 0)) "package-list-packages" #("^web-mode" 0 9 (ivy-index 82)) "web-mode" #("ansi" 0 4 (ivy-index 2)) #("^cua" 0 4 (ivy-index 5)) "cua-toggle-rectangle-mark" "cua-paste" "cua-paste-pop" "cua-cut-region" #("^cua-sc" 0 7 (ivy-index 1)) "cua-scroll-down" #("^cua-s" 0 6 (ivy-index 2)) "cua-selection-mode"))
(setq swiper-history '(#("indent" 0 6 (ivy-index 16)) #("   indent-guide                   20160630       available    melpa-stable show vertical lines to guide indentation" 0 1 (display "1665 " swiper-line-number 1665) 1 3 (tabulated-list-entry [("indent-guide" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) action package-menu-describe-package) #("20160630" 0 8 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa-stable" 0 12 (font-lock-face package-status-available)) #("show vertical lines to guide indentation" 0 40 (font-lock-face package-description))] tabulated-list-id #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil)) 3 15 (tabulated-list-entry [("indent-guide" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) action package-menu-describe-package) #("20160630" 0 8 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa-stable" 0 12 (font-lock-face package-status-available)) #("show vertical lines to guide indentation" 0 40 (font-lock-face package-description))] tabulated-list-id #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) tabulated-list-column-name "Package" action package-menu-describe-package package-desc #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) follow-link t font-lock-face package-name face package-name category default-button button (t)) 15 16 (tabulated-list-entry [("indent-guide" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) action package-menu-describe-package) #("20160630" 0 8 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa-stable" 0 12 (font-lock-face package-status-available)) #("show vertical lines to guide indentation" 0 40 (font-lock-face package-description))] tabulated-list-id #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) tabulated-list-column-name "Package") 16 34 (tabulated-list-entry [("indent-guide" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) action package-menu-describe-package) #("20160630" 0 8 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa-stable" 0 12 (font-lock-face package-status-available)) #("show vertical lines to guide indentation" 0 40 (font-lock-face package-description))] tabulated-list-id #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) tabulated-list-column-name "Package" display (space :align-to 33)) 34 42 (tabulated-list-entry [("indent-guide" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) action package-menu-describe-package) #("20160630" 0 8 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa-stable" 0 12 (font-lock-face package-status-available)) #("show vertical lines to guide indentation" 0 40 (font-lock-face package-description))] tabulated-list-id #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) tabulated-list-column-name "Version" help-echo #("Version: 20160630" 9 17 (font-lock-face package-status-available)) font-lock-face package-status-available) 42 43 (tabulated-list-entry [("indent-guide" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) action package-menu-describe-package) #("20160630" 0 8 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa-stable" 0 12 (font-lock-face package-status-available)) #("show vertical lines to guide indentation" 0 40 (font-lock-face package-description))] tabulated-list-id #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) tabulated-list-column-name "Version") 43 49 (tabulated-list-entry [("indent-guide" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) action package-menu-describe-package) #("20160630" 0 8 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa-stable" 0 12 (font-lock-face package-status-available)) #("show vertical lines to guide indentation" 0 40 (font-lock-face package-description))] tabulated-list-id #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) tabulated-list-column-name "Version" display (space :align-to 48)) 49 58 (tabulated-list-entry [("indent-guide" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) action package-menu-describe-package) #("20160630" 0 8 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa-stable" 0 12 (font-lock-face package-status-available)) #("show vertical lines to guide indentation" 0 40 (font-lock-face package-description))] tabulated-list-id #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) tabulated-list-column-name "Status" help-echo #("Status: available" 8 17 (font-lock-face package-status-available)) font-lock-face package-status-available) 58 59 (tabulated-list-entry [("indent-guide" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) action package-menu-describe-package) #("20160630" 0 8 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa-stable" 0 12 (font-lock-face package-status-available)) #("show vertical lines to guide indentation" 0 40 (font-lock-face package-description))] tabulated-list-id #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) tabulated-list-column-name "Status") 59 62 (tabulated-list-entry [("indent-guide" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) action package-menu-describe-package) #("20160630" 0 8 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa-stable" 0 12 (font-lock-face package-status-available)) #("show vertical lines to guide indentation" 0 40 (font-lock-face package-description))] tabulated-list-id #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) tabulated-list-column-name "Status" display (space :align-to 61)) 62 69 (tabulated-list-entry [("indent-guide" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) action package-menu-describe-package) #("20160630" 0 8 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa-stable" 0 12 (font-lock-face package-status-available)) #("show vertical lines to guide indentation" 0 40 (font-lock-face package-description))] tabulated-list-id #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) tabulated-list-column-name "Archive" help-echo #("Archive: melpa-stable" 9 21 (font-lock-face package-status-available)) font-lock-face package-status-available) 69 74 (tabulated-list-entry [("indent-guide" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) action package-menu-describe-package) #("20160630" 0 8 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa-stable" 0 12 (font-lock-face package-status-available)) #("show vertical lines to guide indentation" 0 40 (font-lock-face package-description))] tabulated-list-id #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) tabulated-list-column-name "Archive" help-echo #("Archive: melpa-stable" 9 21 (font-lock-face package-status-available)) display "…" font-lock-face package-status-available) 74 75 (tabulated-list-entry [("indent-guide" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) action package-menu-describe-package) #("20160630" 0 8 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa-stable" 0 12 (font-lock-face package-status-available)) #("show vertical lines to guide indentation" 0 40 (font-lock-face package-description))] tabulated-list-id #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) tabulated-list-column-name "Archive") 75 115 (tabulated-list-entry [("indent-guide" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) action package-menu-describe-package) #("20160630" 0 8 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa-stable" 0 12 (font-lock-face package-status-available)) #("show vertical lines to guide indentation" 0 40 (font-lock-face package-description))] tabulated-list-id #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) tabulated-list-column-name "Description" help-echo #("Description: show vertical lines to guide indentation" 13 53 (font-lock-face package-description)) font-lock-face package-description)) "scheme[SchemeNorm][ColBg" #("scheme[SchemeNorm][ColB" 0 23 (ivy-index 8)) #(" 	XSetForeground(dpy, drw->gc, scheme[SchemeNorm][ColBg].pixel);" 0 1 (display "2761 " swiper-line-number 2761) 1 2 (c-is-sws t fontified t) 2 3 (fontified t c-is-sws t) 3 49 (fontified t) 49 50 (fontified t) 50 51 (fontified t) 51 52 (fontified t) 52 53 (fontified t) 53 54 (fontified t) 54 55 (fontified t) 55 56 (fontified t) 56 57 (fontified t) 57 58 (fontified t) 58 59 (fontified t) 59 60 (fontified t) 60 61 (fontified t) 61 62 (fontified t) 62 63 (fontified t) 63 64 (rear-nonsticky t fontified t)) #("updatesys" 0 9 (ivy-index 18)) #(" updatesystray(void)" 0 1 (display "2700 " swiper-line-number 2700) 1 14 (face font-lock-function-name-face fontified t) 14 15 (c-type c-decl-arg-start fontified t) 15 19 (face font-lock-type-face fontified t) 19 20 (fontified t)) #("mai" 0 3 (ivy-index 0)) #(" main(int argc, char *argv[])" 0 1 (display "814 " swiper-line-number 814) 1 5 (face font-lock-function-name-face fontified t) 5 6 (c-type c-decl-arg-start fontified t) 6 9 (face font-lock-type-face fontified t) 9 10 (fontified t) 10 14 (face font-lock-variable-name-face fontified t) 14 15 (c-type c-decl-arg-start fontified t) 15 16 (fontified t) 16 20 (face font-lock-type-face fontified t) 20 22 (fontified t) 22 26 (face font-lock-variable-name-face fontified t) 26 29 (fontified t))))
(setq ido-buffer-history '("config.def.h<.dwm>" "block-battery" "dwmbar-powerline" "battery_status.sh" "diminui_volume" "muta_volume" "*scratch*" "*Messages*" "*Async-native-compile-log*" "*Warnings*" "magit-process: .dotfiles" "magit: .dotfiles" "volume_icon.sh" "*ansi-term*" "index.html" "app.js" "x.c" "x.c.rej" "config.def.h" "config.def.h.rej" "config.def.h<st>"))
(setq file-name-history '(#("/home/anderson/git/Educacional/Programa_Desenvolve_Boticario/006_Git_Github/projeto_inicial/app.js" 0 98 (ivy-index 3)) #("/home/anderson/.dwm/autostart.sh" 0 32 (ivy-index 0)) #("/home/anderson/.config/picom.conf" 0 33 (ivy-index 3)) #("/home/anderson/.emacs.d/myinit.org" 0 34 (ivy-index 1)) #("/home/anderson/.dotfiles/.dwm/" 0 30 (ivy-index 0)) #("/home/anderson/.dotfiles/.Xresources" 0 36 (ivy-index 0)) #("/home/anderson/.config/st/config.def.h" 0 38 (ivy-index 0)) "~/.dotfiles/.emacs.d/init.el"))
(setq projectile-project-command-history '#s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data ()))
(setq kill-ring '("flatpak run com.jgraph.drawio.desktop" "flatpak run md.obsidian.Obsidian" "flatpak run com.discordapp.Discord" "flatpak run com.spotify.Client" #(" --icon=\"/usr/share/icons/ePapirus/16x16/devices/audio-input-microphone.svg\"" 0 1 (fontified t) 1 8 (fontified t) 8 9 (fontified t face font-lock-string-face) 9 47 (fontified t face font-lock-string-face) 47 48 (rear-nonsticky t fontified t face font-lock-string-face) 48 71 (fontified t face font-lock-string-face) 71 74 (fontified t face font-lock-string-face) 74 75 (rear-nonsticky t fontified t face font-lock-string-face) 75 76 (rear-nonsticky t fontified t face font-lock-string-face)) #("--icon=\"/usr/share/icons/ePapirus/16x16/devices/audio-headphones.svg\"" 0 7 (fontified t) 7 8 (fontified t face font-lock-string-face) 8 46 (fontified t face font-lock-string-face) 46 47 (rear-nonsticky t fontified t face font-lock-string-face) 47 64 (fontified t face font-lock-string-face) 64 67 (fontified t face font-lock-string-face) 67 68 (rear-nonsticky t fontified t face font-lock-string-face) 68 69 (rear-nonsticky t fontified t face font-lock-string-face)) #("--icon=\"/usr/share/icons/ePapirus/16x16/devices/audio-speakers.svg\"" 0 7 (fontified t) 7 8 (fontified t face font-lock-string-face) 8 46 (fontified t face font-lock-string-face) 46 47 (rear-nonsticky t fontified t face font-lock-string-face) 47 62 (fontified t face font-lock-string-face) 62 65 (fontified t face font-lock-string-face) 65 66 (rear-nonsticky t fontified t face font-lock-string-face) 66 67 (rear-nonsticky t fontified t face font-lock-string-face)) #("--icon=\"/usr/share/icons/ePapirus/16x16/devices/computer-laptop.svg\"" 0 7 (fontified t) 7 8 (fontified t face font-lock-string-face) 8 46 (fontified t face font-lock-string-face) 46 47 (rear-nonsticky t fontified t face font-lock-string-face) 47 63 (fontified t face font-lock-string-face) 63 66 (fontified t face font-lock-string-face) 66 67 (rear-nonsticky t fontified t face font-lock-string-face) 67 68 (rear-nonsticky t fontified t face font-lock-string-face)) #("	notify-send -t 3000 \"󰓶 Tablet Wacon HDMI\" \"Configurado a área do tablet wacon para a tela HDMI\" --icon=\"/usr/share/icons/ePapirus/16x16/devices/input-tablet.svg\"" 0 1 (fontified t) 1 21 (fontified t) 21 22 (fontified t face font-lock-string-face) 22 40 (fontified t face font-lock-string-face) 40 41 (fontified t rear-nonsticky t face font-lock-string-face) 41 42 (fontified t face font-lock-string-face) 42 43 (fontified t) 43 96 (fontified t face font-lock-string-face) 96 97 (fontified t) 97 104 (fontified t) 104 105 (fontified t face font-lock-string-face) 105 145 (fontified t face font-lock-string-face) 145 160 (fontified t face font-lock-string-face) 160 161 (fontified t rear-nonsticky t face font-lock-string-face) 161 162 (rear-nonsticky t fontified t face font-lock-string-face)) "input-tablet.svg" #("󰓶 Tablet Wacon HDMI" 0 19 (fontified t face font-lock-string-face)) #("	notify-send -t 3000 \"󱩍 Modo noturno\" \"Alterado o brilho da tela para o modo noturno\" --icon=\"/usr/share/icons/ePapirus/16x16/actions/redeyes.svg\"" 0 1 (fontified t) 1 21 (fontified t) 21 22 (fontified t face font-lock-string-face) 22 23 (rear-nonsticky t fontified t face font-lock-string-face) 23 36 (fontified t face font-lock-string-face) 36 37 (fontified t face font-lock-string-face) 37 38 (fontified t) 38 85 (fontified t face font-lock-string-face) 85 86 (fontified t) 86 93 (fontified t) 93 94 (fontified t face font-lock-string-face) 94 132 (fontified t face font-lock-string-face) 132 133 (rear-nonsticky t fontified t face font-lock-string-face) 133 145 (fontified t face font-lock-string-face) 145 146 (rear-nonsticky t fontified t face font-lock-string-face)) #("󰛨" 0 1 (fontified t face font-lock-string-face)) #("󱩍" 0 1 (fontified t face font-lock-string-face)) "colors-chromablue.svg" #("	notify-send -t 3000 \"  Modo Diurno\" \"Alterado o brilho da tela para o modo diurno\" --icon=\"/usr/share/icons/ePapirus/16x16/actions/redeyes.svg\"" 0 1 (fontified t) 1 21 (fontified t) 21 22 (fontified t face font-lock-string-face) 22 23 (rear-nonsticky t fontified t face font-lock-string-face) 23 36 (fontified t face font-lock-string-face) 36 37 (fontified t face font-lock-string-face) 37 38 (fontified t) 38 84 (fontified t face font-lock-string-face) 84 85 (fontified t) 85 92 (fontified t) 92 93 (fontified t face font-lock-string-face) 93 131 (fontified t face font-lock-string-face) 131 132 (fontified t rear-nonsticky t face font-lock-string-face) 132 144 (fontified t face font-lock-string-face) 144 145 (rear-nonsticky t fontified t face font-lock-string-face)) "/usr/share/icons/ePapirus/16x16/actions" #("	notify-send -t 3000 \"  Modo Laptop\" \"Alterado tela para modo Laptop\" --icon=\"/usr/share/icons/ePapirus/16x16/devices/computer-laptop.svg\"" 0 1 (fontified t) 1 21 (fontified t) 21 22 (fontified t face font-lock-string-face) 22 23 (fontified t rear-nonsticky t face font-lock-string-face) 23 36 (fontified t face font-lock-string-face) 36 37 (fontified t face font-lock-string-face) 37 38 (fontified t) 38 70 (fontified t face font-lock-string-face) 70 71 (fontified t) 71 78 (fontified t) 78 79 (fontified t face font-lock-string-face) 79 117 (fontified t face font-lock-string-face) 117 118 (rear-nonsticky t fontified t face font-lock-string-face) 118 134 (fontified t face font-lock-string-face) 134 137 (fontified t face font-lock-string-face) 137 138 (rear-nonsticky t fontified t face font-lock-string-face) 138 139 (rear-nonsticky t fontified t face font-lock-string-face)) "" #("	notify-send -t 3000 \"󰡁 HDMI Inserido\" \"Adicionado tela via HDMI\" --icon=\"/usr/share/icons/ePapirus/16x16/devices/computer.svg\"" 0 1 (fontified t) 1 21 (fontified t) 21 22 (fontified t face font-lock-string-face) 22 23 (fontified t rear-nonsticky t face font-lock-string-face) 23 24 (fontified t face font-lock-string-face) 24 38 (fontified t face font-lock-string-face) 38 39 (fontified t) 39 65 (fontified t face font-lock-string-face) 65 66 (fontified t) 66 73 (fontified t) 73 74 (fontified t face font-lock-string-face) 74 112 (fontified t face font-lock-string-face) 112 113 (rear-nonsticky t fontified t face font-lock-string-face) 113 122 (fontified t face font-lock-string-face) 122 125 (fontified t face font-lock-string-face) 125 126 (rear-nonsticky t fontified t face font-lock-string-face) 126 127 (rear-nonsticky t fontified t face font-lock-string-face)) "󰡁" #("notify-send -t 3000 \"Volume microfone $volume\" \"Diminuído 5% do volume do microfone\" --icon=\"/usr/share/icons/ePapirus/16x16/devices/audio-input-microphone.svg\"" 0 20 (fontified t) 20 46 (fontified t face font-lock-string-face) 46 47 (fontified t) 47 84 (fontified t face font-lock-string-face) 84 85 (fontified t) 85 92 (fontified t) 92 93 (fontified t face font-lock-string-face) 93 131 (fontified t face font-lock-string-face) 131 132 (rear-nonsticky t fontified t face font-lock-string-face) 132 133 (fontified t face font-lock-string-face) 133 158 (fontified t face font-lock-string-face) 158 159 (rear-nonsticky t fontified t face font-lock-string-face) 159 160 (rear-nonsticky t fontified t face font-lock-string-face)) #("--icon=\"/usr/share/icons/ePapirus/16x16/devices/audio-input-microphone.svg\"" 0 7 (fontified t) 7 8 (fontified t face font-lock-string-face) 8 46 (fontified t face font-lock-string-face) 46 47 (rear-nonsticky t fontified t face font-lock-string-face) 47 48 (fontified t face font-lock-string-face) 48 73 (fontified t face font-lock-string-face) 73 74 (fontified t rear-nonsticky t face font-lock-string-face) 74 75 (fontified t rear-nonsticky t face font-lock-string-face)) "audio-input-microphone.svg" #("--icon=\"/usr/share/icons/ePapirus/16x16/devices/audio-speakers.svg\"" 0 7 (fontified t) 7 8 (fontified t face font-lock-string-face) 8 46 (fontified t face font-lock-string-face) 46 47 (fontified t rear-nonsticky t face font-lock-string-face) 47 48 (fontified t face font-lock-string-face) 48 65 (fontified t face font-lock-string-face) 65 66 (fontified t rear-nonsticky t face font-lock-string-face) 66 67 (fontified t face font-lock-string-face)) "" "" "󰝝" #("--icon=\"/usr/share/icons/ePapirus/16x16/devices/audio-speakers.svg\"" 0 7 (fontified t) 7 8 (fontified t face font-lock-string-face) 8 46 (fontified t face font-lock-string-face) 46 47 (fontified t rear-nonsticky t face font-lock-string-face) 47 48 (fontified t face font-lock-string-face) 48 65 (fontified t face font-lock-string-face) 65 66 (fontified t rear-nonsticky t face font-lock-string-face) 66 67 (fontified t face font-lock-string-face)) "󰝞" "audio-speakers.svg" "/usr/share/icons/ePapirus/16x16/devices" #("volume=$(pactl get-sink-volume @DEFAULT_SINK@ | grep \"Volume\" | awk '{print$5}' | sed 's/%//')" 0 6 (fontified t face font-lock-variable-name-face) 6 9 (fontified t) 9 53 (fontified t face sh-quoted-exec) 53 61 (fontified t face sh-quoted-exec) 61 68 (fontified t face sh-quoted-exec) 68 78 (fontified t face sh-quoted-exec) 78 79 (rear-nonsticky t fontified t face sh-quoted-exec) 79 80 (fontified t face sh-quoted-exec) 80 86 (fontified t face sh-quoted-exec) 86 92 (fontified t face sh-quoted-exec) 92 93 (rear-nonsticky t fontified t face sh-quoted-exec) 93 94 (rear-nonsticky t fontified t)) #("volume=$(pactl get-source-volume @DEFAULT_SOURCE@ | grep \"Volume\" | awk '{print$5}' | sed 's/%//')" 0 6 (fontified t face font-lock-variable-name-face) 6 9 (fontified t) 9 57 (fontified t face sh-quoted-exec) 57 65 (fontified t face sh-quoted-exec) 65 68 (fontified t face sh-quoted-exec) 68 72 (fontified t face sh-quoted-exec) 72 82 (fontified t face sh-quoted-exec) 82 83 (rear-nonsticky t fontified t face sh-quoted-exec) 83 84 (fontified t face sh-quoted-exec) 84 90 (fontified t face sh-quoted-exec) 90 96 (fontified t face sh-quoted-exec) 96 97 (rear-nonsticky t fontified t face sh-quoted-exec) 97 98 (fontified t)) #("awk '{print$5}' | sed 's/%//'" 0 4 (fontified t face sh-quoted-exec) 4 14 (fontified t face sh-quoted-exec) 14 15 (rear-nonsticky t fontified t face sh-quoted-exec) 15 16 (fontified t face sh-quoted-exec) 16 22 (fontified t face sh-quoted-exec) 22 28 (fontified t face sh-quoted-exec) 28 29 (rear-nonsticky t fontified t face sh-quoted-exec)) #("pactl get-source-volume @DEFAULT_SOURCE@" 0 40 (fontified t face sh-quoted-exec)) #("volume=$(pactl get-sink-volume @DEFAULT_SINK@ | grep \"Volume\" | awk '{print$5}' | sed 's/%//')" 0 6 (fontified t face font-lock-variable-name-face) 6 9 (fontified t) 9 53 (fontified t face sh-quoted-exec) 53 61 (fontified t face sh-quoted-exec) 61 68 (fontified t face sh-quoted-exec) 68 78 (fontified t face sh-quoted-exec) 78 79 (fontified t rear-nonsticky t face sh-quoted-exec) 79 80 (fontified t face sh-quoted-exec) 80 86 (fontified t face sh-quoted-exec) 86 92 (fontified t face sh-quoted-exec) 92 93 (fontified t rear-nonsticky t face sh-quoted-exec) 93 94 (fontified t)) " | sed 's/%//'" " pactl get-sink-volume @DEFAULT_SINK@ | grep \"Volume\" | awk '{print$5}'" #("pactl get-sink-volume @DEFAULT_SINK@ | grep \"Volume\" | cut -b 29,30,31" 0 44 (fontified t face sh-quoted-exec) 44 52 (fontified t face sh-quoted-exec) 52 70 (fontified t face sh-quoted-exec)) #("{ run_command,	    \"^b#282828^^c#dfbf8e^ 󰖀%.4s\",	   \"pactl get-sink-volume @DEFAULT_SINK@ | grep 'Volume' | cut -b 29,30,31,32,33\" }," 0 1 (c-is-sws t fontified t c-type c-not-decl) 1 13 (fontified t) 13 14 (fontified t c-type c-not-decl) 14 19 (fontified t) 19 47 (fontified t face font-lock-string-face) 47 52 (fontified t) 52 97 (fontified t face font-lock-string-face) 97 98 (syntax-table (1) fontified t face font-lock-string-face) 98 104 (fontified t face font-lock-string-face) 104 105 (syntax-table (1) fontified t face font-lock-string-face) 105 130 (fontified t face font-lock-string-face) 130 133 (fontified t)) "󰸈" "pactl get-sink-mute @DEFAULT_SINK@ | grep \"sim\" -ic
" #("is_mute=$(pactl get-sink-mute @DEFAULT_SINK@)" 0 7 (fontified t face font-lock-variable-name-face) 7 10 (fontified t) 10 44 (fontified t face sh-quoted-exec) 44 45 (fontified t)) "󰕾" "󰖀" "󰕿" #("volume=$(pactl get-sink-volume @DEFAULT_SINK@ | grep \"Volume\" | cut -b 29,30,31,32,33)" 0 6 (fontified t face font-lock-variable-name-face) 6 9 (fontified t) 9 53 (fontified t face sh-quoted-exec) 53 61 (fontified t face sh-quoted-exec) 61 85 (fontified t face sh-quoted-exec) 85 86 (fontified t)) #("volume=$(pactl get-sink-volume @DEFAULT_SINK@ | grep \"Volume\" | cut -b 29,30,31,32,33)" 0 6 (fontified t face font-lock-variable-name-face) 6 9 (fontified t) 9 53 (fontified t face sh-quoted-exec) 53 61 (fontified t face sh-quoted-exec) 61 85 (fontified t face sh-quoted-exec) 85 86 (fontified t)) #("volume=$(pactl get-sink-volume @DEFAULT_SINK@ | grep \"Volume\" | cut -b 29,30,31,32,33)" 0 6 (fontified t face font-lock-variable-name-face) 6 9 (fontified t) 9 53 (fontified t face sh-quoted-exec) 53 61 (fontified t face sh-quoted-exec) 61 85 (fontified t face sh-quoted-exec) 85 86 (fontified t)) #("#!/bin/bash

# Coloque aqui o local que identifica sem seu dispositivo está carregando ou descarregando
# IMPORTANTE ! A saída deve ser em binário, caso contrário resultará em erro!
is_plugged=$(cat /sys/class/power_supply/ACAD/online)

# Coloque aqui o local que identifica o número relativo a porcentagem da bateria de seu dispositivo
battery_level=$(cat /sys/class/power_supply/BAT1/capacity)

# EXTRA! Altere os ícones para qualquer um de sua preferência, assim como os valores da %
# EXTRA! Customize a cor do ícone começando com %{F#} e fechando com %{F-}
if [[ \"$is_plugged\" -eq 1 ]]; then
    icon=\"\"
else
    if [ \"$battery_level\" -le 15 ]; then
	icon=\"\"
    elif [ \"$battery_level\" -le 25 ]; then
	icon=\"\"
    elif [ \"$battery_level\" -le 60 ]; then
	icon=\"\"
    elif [ \"$battery_level\" -le 90 ]; then
	icon=\"\"
    else
	icon=\"\"
    fi
fi

echo \"$icon $battery_level%\"
" 0 1 (fontified t face font-lock-comment-delimiter-face) 1 7 (fontified t face font-lock-comment-face) 7 11 (fontified t face font-lock-keyword-face) 11 12 (fontified t face font-lock-comment-face) 12 13 (fontified t) 13 15 (fontified t face font-lock-comment-delimiter-face) 15 104 (fontified t face font-lock-comment-face) 104 106 (fontified t face font-lock-comment-delimiter-face) 106 182 (fontified t face font-lock-comment-face) 182 192 (fontified t face font-lock-variable-name-face) 192 199 (fontified t) 199 233 (fontified t) 233 234 (fontified t rear-nonsticky t) 234 236 (fontified t) 236 237 (fontified t) 237 239 (fontified t face font-lock-comment-delimiter-face) 239 337 (fontified t face font-lock-comment-face) 337 350 (fontified t face font-lock-variable-name-face) 350 397 (fontified t) 397 399 (fontified t face font-lock-comment-delimiter-face) 399 487 (fontified t face font-lock-comment-face) 487 489 (fontified t face font-lock-comment-delimiter-face) 489 538 (fontified t face font-lock-comment-face) 538 539 (syntax-table (3) fontified t face font-lock-comment-face) 539 562 (fontified t face font-lock-comment-face) 562 564 (fontified t face font-lock-keyword-face) 564 568 (fontified t) 568 581 (fontified t face font-lock-string-face) 581 592 (fontified t) 592 596 (fontified t face font-lock-keyword-face) 596 597 (fontified t) 597 601 (fontified t) 601 605 (fontified t face font-lock-variable-name-face) 605 606 (fontified t) 606 607 (fontified t face font-lock-string-face) 607 608 (fontified t face font-lock-string-face) 608 609 (fontified t face font-lock-string-face) 609 610 (fontified t) 610 614 (fontified t face font-lock-keyword-face) 614 619 (fontified t) 619 621 (fontified t face font-lock-keyword-face) 621 624 (fontified t) 624 640 (fontified t face font-lock-string-face) 640 651 (fontified t) 651 655 (fontified t face font-lock-keyword-face) 655 656 (fontified t) 656 657 (fontified t) 657 661 (fontified t face font-lock-variable-name-face) 661 662 (fontified t) 662 663 (fontified t face font-lock-string-face) 663 665 (fontified t face font-lock-string-face) 665 666 (fontified t) 666 670 (fontified t) 670 674 (fontified t face font-lock-keyword-face) 674 677 (fontified t) 677 693 (fontified t face font-lock-string-face) 693 704 (fontified t) 704 708 (fontified t face font-lock-keyword-face) 708 709 (fontified t) 709 710 (fontified t) 710 714 (fontified t face font-lock-variable-name-face) 714 715 (fontified t) 715 716 (fontified t face font-lock-string-face) 716 718 (fontified t face font-lock-string-face) 718 719 (fontified t) 719 723 (fontified t) 723 727 (fontified t face font-lock-keyword-face) 727 730 (fontified t) 730 746 (fontified t face font-lock-string-face) 746 757 (fontified t) 757 761 (fontified t face font-lock-keyword-face) 761 762 (fontified t) 762 763 (fontified t) 763 767 (fontified t face font-lock-variable-name-face) 767 768 (fontified t) 768 769 (fontified t face font-lock-string-face) 769 771 (fontified t face font-lock-string-face) 771 772 (fontified t) 772 776 (fontified t) 776 780 (fontified t face font-lock-keyword-face) 780 783 (fontified t) 783 799 (fontified t face font-lock-string-face) 799 810 (fontified t) 810 814 (fontified t face font-lock-keyword-face) 814 815 (fontified t) 815 816 (fontified t) 816 820 (fontified t face font-lock-variable-name-face) 820 821 (fontified t) 821 822 (fontified t face font-lock-string-face) 822 824 (fontified t face font-lock-string-face) 824 825 (fontified t) 825 829 (fontified t) 829 833 (fontified t face font-lock-keyword-face) 833 834 (fontified t) 834 835 (fontified t) 835 839 (fontified t face font-lock-variable-name-face) 839 840 (fontified t) 840 841 (fontified t face font-lock-string-face) 841 843 (fontified t face font-lock-string-face) 843 844 (fontified t) 844 848 (fontified t) 848 850 (fontified t face font-lock-keyword-face) 850 851 (fontified t) 851 853 (fontified t face font-lock-keyword-face) 853 855 (fontified t) 855 859 (fontified t face font-lock-builtin-face) 859 860 (fontified t) 860 882 (fontified t face font-lock-string-face) 882 883 (rear-nonsticky t fontified t face font-lock-string-face) 883 884 (fontified t)) #("c#b16286" 0 8 (fontified t c-in-sws t face font-lock-comment-face)) #("{ run_command,	    \"^b#282828^^c#d65d0e^  %s\",	   \"date +'%a %d %b %Y'\" }," 0 1 (fontified t c-type c-not-decl) 1 13 (fontified t) 13 14 (fontified t c-type c-not-decl) 14 19 (fontified t) 19 46 (fontified t face font-lock-string-face) 46 51 (fontified t) 51 58 (fontified t face font-lock-string-face) 58 59 (syntax-table (1) fontified t face font-lock-string-face) 59 70 (fontified t face font-lock-string-face) 70 71 (syntax-table (1) fontified t face font-lock-string-face) 71 72 (fontified t face font-lock-string-face) 72 75 (fontified t)) "/sys/class/power_supply/ACAD/online" #("cat /sys/class/power_supply/ADP1/online" 0 39 (fontified t)) "#!/bin/bash

# Coloque aqui o local que identifica sem seu dispositivo está carregando ou descarregando
# IMPORTANTE ! A saída deve ser em binário, caso contrário resultará em erro!
is_plugged=$(cat /sys/class/power_supply/ADP1/online)

# Coloque aqui o local que identifica o número relativo a porcentagem da bateria de seu dispositivo
battery_level=$(cat /sys/class/power_supply/BAT1/capacity)

# EXTRA! Altere os ícones para qualquer um de sua preferência, assim como os valores da %
# EXTRA! Customize a cor do ícone começando com %{F#} e fechando com %{F-}
if [ \"$is_plugged\" -eq 1 ]; then
    icon=\"%{F#F0C674}%{F-}\"
else
    if [ \"$battery_level\" -le 15 ]; then
        icon=\"%{F#F0C674}%{F-}\"
    elif [ \"$battery_level\" -le 25 ]; then
        icon=\"%{F#F0C674}%{F-}\"
    elif [ \"$battery_level\" -le 60 ]; then
        icon=\"%{F#F0C674}%{F-}\"
    elif [ \"$battery_level\" -le 90 ]; then
        icon=\"%{F#F0C674}%{F-}\"
    else
        icon=\"%{F#F0C674}%{F-}\"
    fi
fi

echo \"$icon $battery_level%\"" "" #("➜  anderson projeto_inicial git:(main ✓) git diff ^V" 0 1 (font-lock-face ((:foreground "#d3869b" :background "#282828" :inverse-video nil) :inherit term-bold) fontified t) 1 3 (font-lock-face ((:foreground "#ebdbb2" :background "#282828" :inverse-video nil) :inherit term-bold) fontified t) 3 11 (font-lock-face (:foreground "#ebdbb2" :background "#282828" :inverse-video nil) fontified t) 11 12 (font-lock-face (:foreground "#ebdbb2" :background "#282828" :inverse-video nil) fontified t) 12 27 (font-lock-face ((:foreground "#83a598" :background "#282828" :inverse-video nil) :inherit term-bold) fontified t) 27 28 (font-lock-face ((:foreground "#ebdbb2" :background "#282828" :inverse-video nil) :inherit term-bold) fontified t) 28 33 (font-lock-face ((:foreground "#d3869b" :background "#282828" :inverse-video nil) :inherit term-bold) fontified t) 33 37 (font-lock-face ((:foreground "#ebdbb2" :background "#282828" :inverse-video nil) :inherit term-bold) fontified t) 37 39 (font-lock-face ((:foreground "#b8bb26" :background "#282828" :inverse-video nil) :inherit term-bold) fontified t) 39 40 (font-lock-face ((:foreground "#d3869b" :background "#282828" :inverse-video nil) :inherit term-bold) fontified t) 40 41 (font-lock-face ((:foreground "#ebdbb2" :background "#282828" :inverse-video nil) :inherit term-bold) fontified t) 41 42 (font-lock-face (:foreground "#ebdbb2" :background "#282828" :inverse-video nil) fontified t) 42 43 (font-lock-face (:foreground "#ebdbb2" :background "#282828" :inverse-video nil) fontified t) 43 44 (font-lock-face (:foreground "#ebdbb2" :background "#282828" :inverse-video nil) fontified t) 44 45 (font-lock-face (:foreground "#ebdbb2" :background "#282828" :inverse-video nil) fontified t) 45 46 (font-lock-face (:foreground "#ebdbb2" :background "#282828" :inverse-video nil) fontified t) 46 47 (font-lock-face (:foreground "#ebdbb2" :background "#282828" :inverse-video nil) fontified t) 47 48 (font-lock-face (:foreground "#ebdbb2" :background "#282828" :inverse-video nil) fontified t) 48 49 (font-lock-face (:foreground "#ebdbb2" :background "#282828" :inverse-video nil) fontified t) 49 50 (font-lock-face (:foreground "#ebdbb2" :background "#282828" :inverse-video nil) fontified t) 50 52 (font-lock-face (:foreground "#ebdbb2" :background "#282828" :inverse-video nil) fontified t)) "#################################
#           Corners             #
#################################

# Sets the radius of rounded window corners. When > 0, the compositor will
# round the corners of windows. Does not interact well with
# `transparent-clipping`.
corner-radius = 0

# Exclude conditions for rounded corners.
rounded-corners-exclude = [
  \"window_type = 'dock'\",
  \"window_type = 'desktop'\"
];" "/usr/share/icons/"))
(setq search-ring 'nil)
(setq regexp-search-ring '("indent" "scheme\\[SchemeNorm]\\[ColB" "updatesys" "mai"))
