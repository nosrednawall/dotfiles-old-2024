;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by ‘savehist’.

(setq savehist-minibuffer-history-variables '(magit-revision-history extended-command-history ido-file-history minibuffer-history empty-history read-from-kill-ring-history ivy-history counsel-M-x-history swiper-history ido-buffer-history file-name-history))
(setq magit-revision-history '(#("main" 0 4 (ivy-index 0)) #("ola mundo" 0 9 (ivy-index 0))))
(setq ido-file-history '("music_status_bar.sh" "volume_icon.sh" "battery_status.sh" "advinha_mais.html" "estrelas.html" "media_idades_familiares.html" "media_idades_familiares.hml" "tabuada.html" "ano_copa.html" "jogo_advinha.html" "futebol.html" "imc.html" "programa.html" "texto_puro.html" "primeiro_teste.html"))
(setq minibuffer-history '("/usr/bin/bash" "/usr/bin/zsh"))
(setq ivy-history '(#("electric-indent-mode" 0 20 (ivy-index 14)) #("indent-guide" 0 12 (ivy-index 0)) #("web-mode-indent-style" 0 21 (ivy-index 0)) #("rainbow-mode" 0 12 (ivy-index 3))))
(setq counsel-M-x-history '(#("^rain" 0 5 (ivy-index 0)) "rainbow-mode" #("^ansi" 0 5 (ivy-index 1)) "ansi-term" #("^magit-stat" 0 11 (ivy-index 2)) "magit-status" #("^magit-status" 0 13 (ivy-index 1)) #("^ansi-te" 0 8 (ivy-index 0)) #("^rainbo" 0 7 (ivy-index 0)) #("^java" 0 5 (ivy-index 1)) "javascript-mode" #("^customize-va" 0 13 (ivy-index 0)) "customize-variable" #("^indent-gui" 0 11 (ivy-index 0)) "indent-guide-mode" #("^package-install" 0 16 (ivy-index 0)) "package-install" #("^package-lis" 0 12 (ivy-index 0)) "package-list-packages" #("^web-mode" 0 9 (ivy-index 82)) "web-mode" #("ansi" 0 4 (ivy-index 2)) #("^cua" 0 4 (ivy-index 5)) "cua-toggle-rectangle-mark" "cua-paste" "cua-paste-pop" "cua-cut-region" #("^cua-sc" 0 7 (ivy-index 1)) "cua-scroll-down" #("^cua-s" 0 6 (ivy-index 2)) "cua-selection-mode"))
(setq swiper-history '(#("indent" 0 6 (ivy-index 16)) #("   indent-guide                   20160630       available    melpa-stable show vertical lines to guide indentation" 0 1 (swiper-line-number 1665 display "1665 ") 1 3 (tabulated-list-id #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) tabulated-list-entry [("indent-guide" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) action package-menu-describe-package) #("20160630" 0 8 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa-stable" 0 12 (font-lock-face package-status-available)) #("show vertical lines to guide indentation" 0 40 (font-lock-face package-description))]) 3 15 (button (t) category default-button face package-name font-lock-face package-name follow-link t package-desc #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) action package-menu-describe-package tabulated-list-column-name "Package" tabulated-list-id #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) tabulated-list-entry [("indent-guide" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) action package-menu-describe-package) #("20160630" 0 8 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa-stable" 0 12 (font-lock-face package-status-available)) #("show vertical lines to guide indentation" 0 40 (font-lock-face package-description))]) 15 16 (tabulated-list-column-name "Package" tabulated-list-id #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) tabulated-list-entry [("indent-guide" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) action package-menu-describe-package) #("20160630" 0 8 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa-stable" 0 12 (font-lock-face package-status-available)) #("show vertical lines to guide indentation" 0 40 (font-lock-face package-description))]) 16 34 (display (space :align-to 33) tabulated-list-column-name "Package" tabulated-list-id #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) tabulated-list-entry [("indent-guide" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) action package-menu-describe-package) #("20160630" 0 8 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa-stable" 0 12 (font-lock-face package-status-available)) #("show vertical lines to guide indentation" 0 40 (font-lock-face package-description))]) 34 42 (font-lock-face package-status-available help-echo #("Version: 20160630" 9 17 (font-lock-face package-status-available)) tabulated-list-column-name "Version" tabulated-list-id #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) tabulated-list-entry [("indent-guide" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) action package-menu-describe-package) #("20160630" 0 8 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa-stable" 0 12 (font-lock-face package-status-available)) #("show vertical lines to guide indentation" 0 40 (font-lock-face package-description))]) 42 43 (tabulated-list-column-name "Version" tabulated-list-id #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) tabulated-list-entry [("indent-guide" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) action package-menu-describe-package) #("20160630" 0 8 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa-stable" 0 12 (font-lock-face package-status-available)) #("show vertical lines to guide indentation" 0 40 (font-lock-face package-description))]) 43 49 (display (space :align-to 48) tabulated-list-column-name "Version" tabulated-list-id #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) tabulated-list-entry [("indent-guide" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) action package-menu-describe-package) #("20160630" 0 8 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa-stable" 0 12 (font-lock-face package-status-available)) #("show vertical lines to guide indentation" 0 40 (font-lock-face package-description))]) 49 58 (font-lock-face package-status-available help-echo #("Status: available" 8 17 (font-lock-face package-status-available)) tabulated-list-column-name "Status" tabulated-list-id #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) tabulated-list-entry [("indent-guide" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) action package-menu-describe-package) #("20160630" 0 8 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa-stable" 0 12 (font-lock-face package-status-available)) #("show vertical lines to guide indentation" 0 40 (font-lock-face package-description))]) 58 59 (tabulated-list-column-name "Status" tabulated-list-id #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) tabulated-list-entry [("indent-guide" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) action package-menu-describe-package) #("20160630" 0 8 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa-stable" 0 12 (font-lock-face package-status-available)) #("show vertical lines to guide indentation" 0 40 (font-lock-face package-description))]) 59 62 (display (space :align-to 61) tabulated-list-column-name "Status" tabulated-list-id #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) tabulated-list-entry [("indent-guide" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) action package-menu-describe-package) #("20160630" 0 8 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa-stable" 0 12 (font-lock-face package-status-available)) #("show vertical lines to guide indentation" 0 40 (font-lock-face package-description))]) 62 69 (font-lock-face package-status-available help-echo #("Archive: melpa-stable" 9 21 (font-lock-face package-status-available)) tabulated-list-column-name "Archive" tabulated-list-id #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) tabulated-list-entry [("indent-guide" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) action package-menu-describe-package) #("20160630" 0 8 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa-stable" 0 12 (font-lock-face package-status-available)) #("show vertical lines to guide indentation" 0 40 (font-lock-face package-description))]) 69 74 (font-lock-face package-status-available display "…" help-echo #("Archive: melpa-stable" 9 21 (font-lock-face package-status-available)) tabulated-list-column-name "Archive" tabulated-list-id #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) tabulated-list-entry [("indent-guide" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) action package-menu-describe-package) #("20160630" 0 8 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa-stable" 0 12 (font-lock-face package-status-available)) #("show vertical lines to guide indentation" 0 40 (font-lock-face package-description))]) 74 75 (tabulated-list-column-name "Archive" tabulated-list-id #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) tabulated-list-entry [("indent-guide" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) action package-menu-describe-package) #("20160630" 0 8 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa-stable" 0 12 (font-lock-face package-status-available)) #("show vertical lines to guide indentation" 0 40 (font-lock-face package-description))]) 75 115 (font-lock-face package-description help-echo #("Description: show vertical lines to guide indentation" 13 53 (font-lock-face package-description)) tabulated-list-column-name "Description" tabulated-list-id #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) tabulated-list-entry [("indent-guide" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) action package-menu-describe-package) #("20160630" 0 8 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa-stable" 0 12 (font-lock-face package-status-available)) #("show vertical lines to guide indentation" 0 40 (font-lock-face package-description))])) "scheme[SchemeNorm][ColBg" #("scheme[SchemeNorm][ColB" 0 23 (ivy-index 8)) #(" 	XSetForeground(dpy, drw->gc, scheme[SchemeNorm][ColBg].pixel);" 0 1 (swiper-line-number 2761 display "2761 ") 1 2 (fontified t c-is-sws t) 2 3 (c-is-sws t fontified t) 3 49 (fontified t) 49 50 (fontified t) 50 51 (fontified t) 51 52 (fontified t) 52 53 (fontified t) 53 54 (fontified t) 54 55 (fontified t) 55 56 (fontified t) 56 57 (fontified t) 57 58 (fontified t) 58 59 (fontified t) 59 60 (fontified t) 60 61 (fontified t) 61 62 (fontified t) 62 63 (fontified t) 63 64 (fontified t rear-nonsticky t)) #("updatesys" 0 9 (ivy-index 18)) #(" updatesystray(void)" 0 1 (swiper-line-number 2700 display "2700 ") 1 14 (fontified t face font-lock-function-name-face) 14 15 (fontified t c-type c-decl-arg-start) 15 19 (fontified t face font-lock-type-face) 19 20 (fontified t)) #("mai" 0 3 (ivy-index 0)) #(" main(int argc, char *argv[])" 0 1 (swiper-line-number 814 display "814 ") 1 5 (fontified t face font-lock-function-name-face) 5 6 (fontified t c-type c-decl-arg-start) 6 9 (fontified t face font-lock-type-face) 9 10 (fontified t) 10 14 (fontified t face font-lock-variable-name-face) 14 15 (fontified t c-type c-decl-arg-start) 15 16 (fontified t) 16 20 (fontified t face font-lock-type-face) 20 22 (fontified t) 22 26 (fontified t face font-lock-variable-name-face) 26 29 (fontified t))))
(setq ido-buffer-history '("config.def.h<.dwm>" "block-battery" "dwmbar-powerline" "battery_status.sh" "diminui_volume" "muta_volume" "*scratch*" "*Messages*" "*Async-native-compile-log*" "*Warnings*" "magit-process: .dotfiles" "magit: .dotfiles" "volume_icon.sh" "*ansi-term*" "index.html" "app.js" "x.c" "x.c.rej" "config.def.h" "config.def.h.rej" "config.def.h<st>"))
(setq file-name-history '(#("/home/anderson/git/Educacional/Programa_Desenvolve_Boticario/006_Git_Github/projeto_inicial/app.js" 0 98 (ivy-index 3)) #("/home/anderson/.dwm/autostart.sh" 0 32 (ivy-index 0)) #("/home/anderson/.config/picom.conf" 0 33 (ivy-index 3)) #("/home/anderson/.emacs.d/myinit.org" 0 34 (ivy-index 1)) #("/home/anderson/.dotfiles/.dwm/" 0 30 (ivy-index 0)) #("/home/anderson/.dotfiles/.Xresources" 0 36 (ivy-index 0)) #("/home/anderson/.config/st/config.def.h" 0 38 (ivy-index 0)) "~/.dotfiles/.emacs.d/init.el"))
(setq projectile-project-command-history '#s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data ()))
(setq kill-ring '("#AFAF00" #("static const char c_orange[]      = \"#d65d0e\";" 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t) 7 12 (face font-lock-keyword-face fontified t) 12 13 (fontified t) 13 16 (face font-lock-type-face fontified t) 16 17 (face font-lock-type-face c-type c-decl-id-start fontified t) 17 18 (fontified t) 18 26 (face font-lock-variable-name-face fontified t) 26 36 (fontified t) 36 45 (face font-lock-string-face fontified t) 45 46 (fontified t)) #("	{ run_command,	    \"^b#282828^^c#fb4934^%s\",		   \"sensors | awk '/edge/ {print$2}' | sed 's/+//'\"}," 0 1 (fontified t) 1 2 (c-type c-not-decl fontified t) 2 14 (fontified t) 14 15 (c-type c-not-decl fontified t) 15 20 (fontified t) 20 44 (face font-lock-string-face fontified t) 44 50 (fontified t) 50 65 (face font-lock-string-face fontified t) 65 66 (face font-lock-string-face fontified t syntax-table (1)) 66 82 (face font-lock-string-face fontified t) 82 83 (face font-lock-string-face fontified t syntax-table (1)) 83 85 (face font-lock-string-face fontified t) 85 90 (face font-lock-string-face fontified t) 90 91 (face font-lock-string-face fontified t syntax-table (1)) 91 96 (face font-lock-string-face fontified t) 96 97 (face font-lock-string-face fontified t syntax-table (1)) 97 98 (face font-lock-string-face fontified t) 98 100 (fontified t)) #("echo \"$icon $title $artist $time\"" 0 4 (face font-lock-builtin-face fontified t) 4 5 (fontified t) 5 6 (face font-lock-string-face fontified t) 6 18 (face font-lock-string-face fontified t) 18 19 (face font-lock-string-face fontified t) 19 20 (face font-lock-string-face fontified t) 20 21 (face font-lock-string-face fontified t) 21 22 (face font-lock-string-face fontified t) 22 23 (face font-lock-string-face fontified t) 23 24 (face font-lock-string-face fontified t) 24 25 (face font-lock-string-face fontified t) 25 26 (face font-lock-string-face fontified t) 26 27 (face font-lock-string-face fontified t) 27 28 (face font-lock-string-face fontified t) 28 29 (face font-lock-string-face fontified t) 29 30 (face font-lock-string-face fontified t) 30 31 (face font-lock-string-face fontified t) 31 32 (face font-lock-string-face fontified t) 32 33 (face font-lock-string-face fontified t rear-nonsticky t)) #("    artist=$(mpc -f %artist% current)
    time=$(mpc -f %time% current)" 0 4 (fontified t) 4 10 (face font-lock-variable-name-face fontified t) 10 13 (fontified t) 13 26 (fontified t) 26 36 (fontified t) 36 38 (fontified t) 38 42 (fontified t) 42 46 (face font-lock-variable-name-face fontified t) 46 49 (fontified t) 49 60 (fontified t) 60 70 (fontified t) 70 71 (fontified t)) "mpc -f %time% current
" "mpc -f %artist% current
" "󰝚" "mpc -f %title% current
" #("previewname=\"$previewdir/$(mpc --format %album% current | base64).png\"" 0 11 (face font-lock-variable-name-face fontified t) 11 12 (fontified t) 12 70 (face font-lock-string-face fontified t)) "#!/bin/bash

# Coloque aqui o local que identifica sem seu dispositivo está carregando ou descarregando
# IMPORTANTE ! A saída deve ser em binário, caso contrário resultará em erro!
is_plugged=$(cat /sys/class/power_supply/ADP1/online)

# Coloque aqui o local que identifica o número relativo a porcentagem da bateria de seu dispositivo
battery_level=$(cat /sys/class/power_supply/BAT1/capacity)

# EXTRA! Altere os ícones para qualquer um de sua preferência, assim como os valores da %
# EXTRA! Customize a cor do ícone começando com %{F#} e fechando com %{F-}
if [ \"$is_plugged\" -eq 1 ]; then
    icon=\"%{F#F0C674}%{F-}\"
else
    if [ \"$battery_level\" -le 15 ]; then
        icon=\"%{F#F0C674}%{F-}\"
    elif [ \"$battery_level\" -le 25 ]; then
        icon=\"%{F#F0C674}%{F-}\"
    elif [ \"$battery_level\" -le 60 ]; then
        icon=\"%{F#F0C674}%{F-}\"
    elif [ \"$battery_level\" -le 90 ]; then
        icon=\"%{F#F0C674}%{F-}\"
    else
        icon=\"%{F#F0C674}%{F-}\"
    fi
fi

echo \"$icon $battery_level%\"" "" "flatpak run com.jgraph.drawio.desktop" "flatpak run md.obsidian.Obsidian" "flatpak run com.discordapp.Discord" "flatpak run com.spotify.Client" #(" --icon=\"/usr/share/icons/ePapirus/16x16/devices/audio-input-microphone.svg\"" 0 1 (fontified t) 1 8 (fontified t) 8 9 (face font-lock-string-face fontified t) 9 47 (face font-lock-string-face fontified t) 47 48 (face font-lock-string-face fontified t rear-nonsticky t) 48 71 (face font-lock-string-face fontified t) 71 74 (face font-lock-string-face fontified t) 74 75 (face font-lock-string-face fontified t rear-nonsticky t) 75 76 (face font-lock-string-face fontified t rear-nonsticky t)) #("--icon=\"/usr/share/icons/ePapirus/16x16/devices/audio-headphones.svg\"" 0 7 (fontified t) 7 8 (face font-lock-string-face fontified t) 8 46 (face font-lock-string-face fontified t) 46 47 (face font-lock-string-face fontified t rear-nonsticky t) 47 64 (face font-lock-string-face fontified t) 64 67 (face font-lock-string-face fontified t) 67 68 (face font-lock-string-face fontified t rear-nonsticky t) 68 69 (face font-lock-string-face fontified t rear-nonsticky t)) #("--icon=\"/usr/share/icons/ePapirus/16x16/devices/audio-speakers.svg\"" 0 7 (fontified t) 7 8 (face font-lock-string-face fontified t) 8 46 (face font-lock-string-face fontified t) 46 47 (face font-lock-string-face fontified t rear-nonsticky t) 47 62 (face font-lock-string-face fontified t) 62 65 (face font-lock-string-face fontified t) 65 66 (face font-lock-string-face fontified t rear-nonsticky t) 66 67 (face font-lock-string-face fontified t rear-nonsticky t)) #("--icon=\"/usr/share/icons/ePapirus/16x16/devices/computer-laptop.svg\"" 0 7 (fontified t) 7 8 (face font-lock-string-face fontified t) 8 46 (face font-lock-string-face fontified t) 46 47 (face font-lock-string-face fontified t rear-nonsticky t) 47 63 (face font-lock-string-face fontified t) 63 66 (face font-lock-string-face fontified t) 66 67 (face font-lock-string-face fontified t rear-nonsticky t) 67 68 (face font-lock-string-face fontified t rear-nonsticky t)) #("	notify-send -t 3000 \"󰓶 Tablet Wacon HDMI\" \"Configurado a área do tablet wacon para a tela HDMI\" --icon=\"/usr/share/icons/ePapirus/16x16/devices/input-tablet.svg\"" 0 1 (fontified t) 1 21 (fontified t) 21 22 (face font-lock-string-face fontified t) 22 40 (face font-lock-string-face fontified t) 40 41 (face font-lock-string-face rear-nonsticky t fontified t) 41 42 (face font-lock-string-face fontified t) 42 43 (fontified t) 43 96 (face font-lock-string-face fontified t) 96 97 (fontified t) 97 104 (fontified t) 104 105 (face font-lock-string-face fontified t) 105 145 (face font-lock-string-face fontified t) 145 160 (face font-lock-string-face fontified t) 160 161 (face font-lock-string-face rear-nonsticky t fontified t) 161 162 (face font-lock-string-face fontified t rear-nonsticky t)) "input-tablet.svg" #("󰓶 Tablet Wacon HDMI" 0 19 (face font-lock-string-face fontified t)) #("	notify-send -t 3000 \"󱩍 Modo noturno\" \"Alterado o brilho da tela para o modo noturno\" --icon=\"/usr/share/icons/ePapirus/16x16/actions/redeyes.svg\"" 0 1 (fontified t) 1 21 (fontified t) 21 22 (face font-lock-string-face fontified t) 22 23 (face font-lock-string-face fontified t rear-nonsticky t) 23 36 (face font-lock-string-face fontified t) 36 37 (face font-lock-string-face fontified t) 37 38 (fontified t) 38 85 (face font-lock-string-face fontified t) 85 86 (fontified t) 86 93 (fontified t) 93 94 (face font-lock-string-face fontified t) 94 132 (face font-lock-string-face fontified t) 132 133 (face font-lock-string-face fontified t rear-nonsticky t) 133 145 (face font-lock-string-face fontified t) 145 146 (face font-lock-string-face fontified t rear-nonsticky t)) #("󰛨" 0 1 (face font-lock-string-face fontified t)) #("󱩍" 0 1 (face font-lock-string-face fontified t)) "colors-chromablue.svg" #("	notify-send -t 3000 \"  Modo Diurno\" \"Alterado o brilho da tela para o modo diurno\" --icon=\"/usr/share/icons/ePapirus/16x16/actions/redeyes.svg\"" 0 1 (fontified t) 1 21 (fontified t) 21 22 (face font-lock-string-face fontified t) 22 23 (face font-lock-string-face fontified t rear-nonsticky t) 23 36 (face font-lock-string-face fontified t) 36 37 (face font-lock-string-face fontified t) 37 38 (fontified t) 38 84 (face font-lock-string-face fontified t) 84 85 (fontified t) 85 92 (fontified t) 92 93 (face font-lock-string-face fontified t) 93 131 (face font-lock-string-face fontified t) 131 132 (face font-lock-string-face rear-nonsticky t fontified t) 132 144 (face font-lock-string-face fontified t) 144 145 (face font-lock-string-face fontified t rear-nonsticky t)) "/usr/share/icons/ePapirus/16x16/actions" #("	notify-send -t 3000 \"  Modo Laptop\" \"Alterado tela para modo Laptop\" --icon=\"/usr/share/icons/ePapirus/16x16/devices/computer-laptop.svg\"" 0 1 (fontified t) 1 21 (fontified t) 21 22 (face font-lock-string-face fontified t) 22 23 (face font-lock-string-face rear-nonsticky t fontified t) 23 36 (face font-lock-string-face fontified t) 36 37 (face font-lock-string-face fontified t) 37 38 (fontified t) 38 70 (face font-lock-string-face fontified t) 70 71 (fontified t) 71 78 (fontified t) 78 79 (face font-lock-string-face fontified t) 79 117 (face font-lock-string-face fontified t) 117 118 (face font-lock-string-face fontified t rear-nonsticky t) 118 134 (face font-lock-string-face fontified t) 134 137 (face font-lock-string-face fontified t) 137 138 (face font-lock-string-face fontified t rear-nonsticky t) 138 139 (face font-lock-string-face fontified t rear-nonsticky t)) "" #("	notify-send -t 3000 \"󰡁 HDMI Inserido\" \"Adicionado tela via HDMI\" --icon=\"/usr/share/icons/ePapirus/16x16/devices/computer.svg\"" 0 1 (fontified t) 1 21 (fontified t) 21 22 (face font-lock-string-face fontified t) 22 23 (face font-lock-string-face rear-nonsticky t fontified t) 23 24 (face font-lock-string-face fontified t) 24 38 (face font-lock-string-face fontified t) 38 39 (fontified t) 39 65 (face font-lock-string-face fontified t) 65 66 (fontified t) 66 73 (fontified t) 73 74 (face font-lock-string-face fontified t) 74 112 (face font-lock-string-face fontified t) 112 113 (face font-lock-string-face fontified t rear-nonsticky t) 113 122 (face font-lock-string-face fontified t) 122 125 (face font-lock-string-face fontified t) 125 126 (face font-lock-string-face fontified t rear-nonsticky t) 126 127 (face font-lock-string-face fontified t rear-nonsticky t)) "󰡁" #("notify-send -t 3000 \"Volume microfone $volume\" \"Diminuído 5% do volume do microfone\" --icon=\"/usr/share/icons/ePapirus/16x16/devices/audio-input-microphone.svg\"" 0 20 (fontified t) 20 46 (face font-lock-string-face fontified t) 46 47 (fontified t) 47 84 (face font-lock-string-face fontified t) 84 85 (fontified t) 85 92 (fontified t) 92 93 (face font-lock-string-face fontified t) 93 131 (face font-lock-string-face fontified t) 131 132 (face font-lock-string-face fontified t rear-nonsticky t) 132 133 (face font-lock-string-face fontified t) 133 158 (face font-lock-string-face fontified t) 158 159 (face font-lock-string-face fontified t rear-nonsticky t) 159 160 (face font-lock-string-face fontified t rear-nonsticky t)) #("--icon=\"/usr/share/icons/ePapirus/16x16/devices/audio-input-microphone.svg\"" 0 7 (fontified t) 7 8 (face font-lock-string-face fontified t) 8 46 (face font-lock-string-face fontified t) 46 47 (face font-lock-string-face fontified t rear-nonsticky t) 47 48 (face font-lock-string-face fontified t) 48 73 (face font-lock-string-face fontified t) 73 74 (face font-lock-string-face rear-nonsticky t fontified t) 74 75 (face font-lock-string-face rear-nonsticky t fontified t)) "audio-input-microphone.svg" #("--icon=\"/usr/share/icons/ePapirus/16x16/devices/audio-speakers.svg\"" 0 7 (fontified t) 7 8 (face font-lock-string-face fontified t) 8 46 (face font-lock-string-face fontified t) 46 47 (face font-lock-string-face rear-nonsticky t fontified t) 47 48 (face font-lock-string-face fontified t) 48 65 (face font-lock-string-face fontified t) 65 66 (face font-lock-string-face rear-nonsticky t fontified t) 66 67 (face font-lock-string-face fontified t)) "" "" "󰝝" #("--icon=\"/usr/share/icons/ePapirus/16x16/devices/audio-speakers.svg\"" 0 7 (fontified t) 7 8 (face font-lock-string-face fontified t) 8 46 (face font-lock-string-face fontified t) 46 47 (face font-lock-string-face rear-nonsticky t fontified t) 47 48 (face font-lock-string-face fontified t) 48 65 (face font-lock-string-face fontified t) 65 66 (face font-lock-string-face rear-nonsticky t fontified t) 66 67 (face font-lock-string-face fontified t)) "󰝞" "audio-speakers.svg" "/usr/share/icons/ePapirus/16x16/devices" #("volume=$(pactl get-sink-volume @DEFAULT_SINK@ | grep \"Volume\" | awk '{print$5}' | sed 's/%//')" 0 6 (face font-lock-variable-name-face fontified t) 6 9 (fontified t) 9 53 (face sh-quoted-exec fontified t) 53 61 (face sh-quoted-exec fontified t) 61 68 (face sh-quoted-exec fontified t) 68 78 (face sh-quoted-exec fontified t) 78 79 (face sh-quoted-exec fontified t rear-nonsticky t) 79 80 (face sh-quoted-exec fontified t) 80 86 (face sh-quoted-exec fontified t) 86 92 (face sh-quoted-exec fontified t) 92 93 (face sh-quoted-exec fontified t rear-nonsticky t) 93 94 (fontified t rear-nonsticky t)) #("volume=$(pactl get-source-volume @DEFAULT_SOURCE@ | grep \"Volume\" | awk '{print$5}' | sed 's/%//')" 0 6 (face font-lock-variable-name-face fontified t) 6 9 (fontified t) 9 57 (face sh-quoted-exec fontified t) 57 65 (face sh-quoted-exec fontified t) 65 68 (face sh-quoted-exec fontified t) 68 72 (face sh-quoted-exec fontified t) 72 82 (face sh-quoted-exec fontified t) 82 83 (face sh-quoted-exec fontified t rear-nonsticky t) 83 84 (face sh-quoted-exec fontified t) 84 90 (face sh-quoted-exec fontified t) 90 96 (face sh-quoted-exec fontified t) 96 97 (face sh-quoted-exec fontified t rear-nonsticky t) 97 98 (fontified t)) #("awk '{print$5}' | sed 's/%//'" 0 4 (face sh-quoted-exec fontified t) 4 14 (face sh-quoted-exec fontified t) 14 15 (face sh-quoted-exec fontified t rear-nonsticky t) 15 16 (face sh-quoted-exec fontified t) 16 22 (face sh-quoted-exec fontified t) 22 28 (face sh-quoted-exec fontified t) 28 29 (face sh-quoted-exec fontified t rear-nonsticky t)) #("pactl get-source-volume @DEFAULT_SOURCE@" 0 40 (face sh-quoted-exec fontified t)) #("volume=$(pactl get-sink-volume @DEFAULT_SINK@ | grep \"Volume\" | awk '{print$5}' | sed 's/%//')" 0 6 (face font-lock-variable-name-face fontified t) 6 9 (fontified t) 9 53 (face sh-quoted-exec fontified t) 53 61 (face sh-quoted-exec fontified t) 61 68 (face sh-quoted-exec fontified t) 68 78 (face sh-quoted-exec fontified t) 78 79 (face sh-quoted-exec rear-nonsticky t fontified t) 79 80 (face sh-quoted-exec fontified t) 80 86 (face sh-quoted-exec fontified t) 86 92 (face sh-quoted-exec fontified t) 92 93 (face sh-quoted-exec rear-nonsticky t fontified t) 93 94 (fontified t)) " | sed 's/%//'" " pactl get-sink-volume @DEFAULT_SINK@ | grep \"Volume\" | awk '{print$5}'" #("pactl get-sink-volume @DEFAULT_SINK@ | grep \"Volume\" | cut -b 29,30,31" 0 44 (face sh-quoted-exec fontified t) 44 52 (face sh-quoted-exec fontified t) 52 70 (face sh-quoted-exec fontified t)) #("{ run_command,	    \"^b#282828^^c#dfbf8e^ 󰖀%.4s\",	   \"pactl get-sink-volume @DEFAULT_SINK@ | grep 'Volume' | cut -b 29,30,31,32,33\" }," 0 1 (c-type c-not-decl fontified t c-is-sws t) 1 13 (fontified t) 13 14 (c-type c-not-decl fontified t) 14 19 (fontified t) 19 47 (face font-lock-string-face fontified t) 47 52 (fontified t) 52 97 (face font-lock-string-face fontified t) 97 98 (face font-lock-string-face fontified t syntax-table (1)) 98 104 (face font-lock-string-face fontified t) 104 105 (face font-lock-string-face fontified t syntax-table (1)) 105 130 (face font-lock-string-face fontified t) 130 133 (fontified t)) "󰸈" "pactl get-sink-mute @DEFAULT_SINK@ | grep \"sim\" -ic
" #("is_mute=$(pactl get-sink-mute @DEFAULT_SINK@)" 0 7 (face font-lock-variable-name-face fontified t) 7 10 (fontified t) 10 44 (face sh-quoted-exec fontified t) 44 45 (fontified t)) "󰕾" "󰖀" "󰕿" #("volume=$(pactl get-sink-volume @DEFAULT_SINK@ | grep \"Volume\" | cut -b 29,30,31,32,33)" 0 6 (face font-lock-variable-name-face fontified t) 6 9 (fontified t) 9 53 (face sh-quoted-exec fontified t) 53 61 (face sh-quoted-exec fontified t) 61 85 (face sh-quoted-exec fontified t) 85 86 (fontified t))))
(setq search-ring 'nil)
(setq regexp-search-ring '("indent" "scheme\\[SchemeNorm]\\[ColB" "updatesys" "mai"))
