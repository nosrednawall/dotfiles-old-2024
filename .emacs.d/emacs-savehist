;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by ‘savehist’.

(setq savehist-minibuffer-history-variables '(read-expression-history command-history ess--completing-hist counsel-locate-history sql-product-history sql-server-history sql-database-history sql-user-history read-char-history counsel-git-history transient--history read-number-history compile-history shell-command-history magit-git-command-history magit-revision-history extended-command-history ido-file-history minibuffer-history empty-history read-from-kill-ring-history ivy-history counsel-M-x-history swiper-history ido-buffer-history file-name-history))
(setq command-history '((neotree-create-node "/home/anderson/.dotfiles/.local/bin/brilho_tela_diminui") (neotree-create-node "/home/anderson/.dotfiles/.local/bin/brilho_tela_aumenta") (kill-buffer "config.h") (kill-buffer "config.def.h") (term "/usr/bin/zsh") (jupyter-org-kill-block-and-results) (jupyter-org-hydra/body) (jupyter-run-repl "python3" nil t nil t) (jupyter-repl-mode) (jupyter-load-file "/home/anderson/git/Educacional/Programa_Desenvolve_Boticario/014_Python_Data_science/Projeto+inicial+-+Python+para+DS.ipynb") (ein:stop t "http://127.0.0.1:8888") (ein:run "/usr/bin/jupyter" "/home/anderson/git/Educacional/Programa_Desenvolve_Boticario/014_Python_Data_science/" nil #[514 "\300!\207" [pop-to-buffer] 4 "

(fn BUFFER URL-OR-PORT)"] nil) (ein:stop t nil) (ein:notebook-open "http://127.0.0.1:8888" "Projeto_Python_Data_Science.ipynb") (ein:ipynb-mode) (ein:run "/usr/bin/jupyter" "/home/anderson/git/Educacional/Programa_Desenvolve_Boticario/013_Python_Ciencia_Dados/" nil #[514 "\300!\207" [pop-to-buffer] 4 "

(fn BUFFER URL-OR-PORT)"] nil) (ein:run "/usr/bin/jupyter-execute" "/home/anderson/git/Educacional/Programa_Desenvolve_Boticario/013_Python_Ciencia_Dados/" nil #[514 "\300!\207" [pop-to-buffer] 4 "

(fn BUFFER URL-OR-PORT)"] nil) (ein:login "http://127.0.0.1:8888" #[514 "\300!\207" [pop-to-buffer] 4 "

(fn BUFFER URL-OR-PORT)"] nil nil nil) (ein:jupyter-server-stop t nil) (ein:login "http://127.0.0.1:0" #[514 "\300!\207" [pop-to-buffer] 4 "

(fn BUFFER URL-OR-PORT)"] nil nil nil) (ein:login "http://127.0.0.1" #[514 "\300!\207" [pop-to-buffer] 4 "

(fn BUFFER URL-OR-PORT)"] nil nil nil) (package-install 'eink-theme nil) (package-install 'ein nil) (kill-buffer "100-graficos-tabelas-uni.R") (neotree-create-node "/home/anderson/git/Educacional/UFPR_Estatistica/CE301_Estatistica_Basica/Scripts_R/exercicio_medidas_posicao_dispersao.r") (projectile-switch-project nil) (project-switch-project "~/git/Educacional/Programa_Desenvolve_Boticario/") (project-switch-project "~/git/Educacional/UFPR_Estatistica/")))
(setq sql-product-history '(#("ansi" 0 4 (ivy-index 0))))
(setq sql-server-history '("172.17.0.2" "172.17.0.4" "172.17.0.3" "172.17.0.1"))
(setq sql-database-history '(#("alura" 0 5 (ivy-index 0)) #("postgres" 0 8 (ivy-index 0)) #("anderson" 0 8 (ivy-index 0))))
(setq sql-user-history '("postgres" "root"))
(setq read-number-history '("5432" "1"))
(setq compile-history '("make -k "))
(setq shell-command-history '("/usr/bin/zsh" "/usr/bin/bash"))
(setq magit-revision-history '(#("5ad9048" 0 7 (ivy-index 0)) #("9e4e37a8e58c4c2695feeb6ce1223b8849c5f7f7" 0 40 (ivy-index 0)) #("e5b577f5f6a6135f1566bf97f4a4c1a2ea06af15" 0 40 (ivy-index 0)) #("HEAD" 0 4 (ivy-index 3)) #("main" 0 4 (ivy-index 0)) #("origin/main" 0 11 (ivy-index 0)) #("1a51c1d" 0 7 (ivy-index 0)) #("ola mundo" 0 9 (ivy-index 0))))
(setq extended-command-history '("package-install"))
(setq ido-file-history '("brilho_tela_diminui" "brilho_tela_aumenta" "Projeto+inicial+-+Python+para+DS.ipynb" "." "exercicio_medidas_posicao_dispersao.r" "query_mariadb.sql" "somaMultiplos.py" "calculadora.py" "teste.sql" "onibus.py" "credito.py" "pesoideal.py" "achemaior.py" "medias.py" "multiplos.py" "notas.py" "calcnota.py" "py" "ultimoStr.py" "primaStr.py" "juntaStr.py" "compStr.py" "tamStr.py" "sl-wttr.sh" "sl-wttr.sh~" "degraus.py" "distpontos.py" "eq2graus.py" "volesFera.py" "calculos.py" "escada.py" "capitulo_02_resumo_dados.r" "sxhkdrc" "dmenu-bitwarden" "teste.ini" "config.ini" "teste" "eqSistCramer.py" "eqSist.py" "eqGrau1.py" "convKm.py" "mediaPond.py" "convFarenheit.py" "segundo2horas.py" "idadeDias2anos.py" "idadeAnos2dias.py" "media.py" "calcula_sistemas.py" "equacao_segundo_grau.py" "media_aritimetica.py" "media_aritimetica_3_valores.py" "soma_dois_numeros.py" "init.el" "calcula_raiz_de_3_numeros.py" "aula004_usando_funcoes.sql" "aula003_sub_consultas.sql" "dmenu-teclados" "aula001.sql" "emacs.org" "myinit.org" nil "tabela_funcionarios.sql" "tabela_aluno.sql" "README.md" "dunstrc" "cpu_status.sh" "music_status_bar.sh" "volume_icon.sh" "battery_status.sh" "advinha_mais.html" "estrelas.html" "media_idades_familiares.html" "media_idades_familiares.hml" "tabuada.html" "ano_copa.html" "jogo_advinha.html" "futebol.html" "imc.html" "programa.html" "texto_puro.html" "primeiro_teste.html"))
(setq minibuffer-history '(".dwm/config.h" "jupyter-execute" "jupyter notebook" "/home/anderson/.local/bin/jupyter lab" "~/.local/bin/jupyter lab" "jupyter lab" "python3 -m jupyter lab" "jupyter" ".Xresources" "~/.dotfiles/" "djklsklsdsdnj" "dashboard" "/usr/bin/zsh" "select * from curso;" "select * from cursos;" "/usr/bin/bash"))
(setq ivy-history '(#("Python 3 (ipykernel)" 0 20 (ivy-index 0)) #("python3" 0 7 (ivy-index 0 idx 0)) #("http://127.0.0.1:8888/Projeto_Python_Data_Science.ipynb" 0 55 (ivy-index 0)) #("8888" 0 4 (ivy-index 0)) #("0" 0 1 (ivy-index 0)) #("eink-theme" 0 10 (ivy-index 4)) #("ein" 0 3 (ivy-index 5)) #("CE301_Estatistica_Basica/Scripts_R/" 0 35 (ivy-index 8)) #("/home/anderson/git/Educacional/UFPR_Estatistica/" 0 48 (ivy-index 1)) #("005_Logica_Programacao_Javascript/Logica/jogo_advinha.html" 0 58 (ivy-index 34)) #("~/git/Educacional/Programa_Desenvolve_Boticario/" 0 48 (ivy-index 1)) #("CE300_Estatistica_e_Sociedade/Seminario_001/Impacto_Vacina_Tdap_em_gravidas.pdf" 0 79 (ivy-index 1)) #("~/git/Educacional/UFPR_Estatistica/" 0 35 (ivy-index 2)) #("... (choose a dir)" 0 18 (ivy-index 3)) #("~/.dotfiles/" 0 12 (ivy-index 1)) #("./" 0 2 (ivy-index 0)) #("compilation-disable-input" 0 25 (ivy-index 4)) #("tree-sitter-ispell" 0 18 (ivy-index 1)) #("tree-sitter-langs" 0 17 (ivy-index 0)) #("tree-sitter" 0 11 (ivy-index 4)) #("rainbow-mode" 0 12 (ivy-index 0)) #("101-medidas-uni.R" 0 17 (ivy-index 4)) #("con" 0 3 (ivy-index 0)) "config.h" #("config." 0 7 (ivy-index 0)) #("origin" 0 6 (ivy-index 0)) #("master" 0 6 (ivy-index 0)) #("pdf-tools" 0 9 (ivy-index 0)) #("~/git/Educacional/Programa_Desenvolve_Boticario/006_Git_Github/projeto_inicial/" 0 79 (ivy-index 0)) #("dape" 0 4 (ivy-index 0)) #("elpy" 0 4 (ivy-index 1)) #("nyan-mode" 0 9 (ivy-index 0)) #("flycheck" 0 8 (ivy-index 64)) #("emacsql-psql" 0 12 (ivy-index 13)) #("index.html" 0 10 (ivy-index 0)) #("myterminal-controls" 0 19 (ivy-index 10)) #("electric-indent-mode" 0 20 (ivy-index 14)) #("indent-guide" 0 12 (ivy-index 0)) #("web-mode-indent-style" 0 21 (ivy-index 0))))
(setq counsel-M-x-history '(#("^term" 0 5 (ivy-index 0)) "term" #("^jupyter-" 0 9 (ivy-index 57)) "jupyter-org-kill-block-and-results" #("^jupyter" 0 8 (ivy-index 11)) "jupyter-org-hydra/body" #("^" 0 1 (ivy-index 1)) "jupyter-run-repl" "jupyter-repl-mode" #("^jupyter-re" 0 11 (ivy-index 0)) "jupyter-load-file" #("^jupyter-run" 0 12 (ivy-index 0)) "ein:stop" "ein:run" #("^ein" 0 4 (ivy-index 4)) "ein:ipynb-mode" "ein:login" "ein:jupyter-server-stop" #("^ein:l" 0 6 (ivy-index 0)) #("^package-install" 0 16 (ivy-index 0)) "package-install" #("^projectile" 0 11 (ivy-index 0)) "projectile-switch-project" #("^projectile-s" 0 13 (ivy-index 1)) #("^packa" 0 6 (ivy-index 0)) #("^projectile-mo" 0 14 (ivy-index 1)) "projectile-mode-menu" #("^projectile-co" 0 14 (ivy-index 2)) "projectile-configure-project" #("^projectile-" 0 12 (ivy-index 0)) "projectile-skel-dir-locals" #("^sql-maria" 0 10 (ivy-index 0)) "sql-mariadb" "sql-postgres" #("^sql-pos" 0 8 (ivy-index 0)) #("^sql-mari" 0 9 (ivy-index 0)) #("^rainbo" 0 7 (ivy-index 0)) "rainbow-mode" #("^python-mode" 0 12 (ivy-index 0)) "python-mode" #("^python" 0 7 (ivy-index 0)) #("^eglo" 0 5 (ivy-index 0)) "eglot" #("^package-ins" 0 12 (ivy-index 0)) #("packa" 0 5 (ivy-index 0)) #("^rain" 0 5 (ivy-index 0)) #("^shell" 0 6 (ivy-index 0)) "shell" #("^magit-" 0 7 (ivy-index 24)) "magit-status" #("^pdf-view" 0 9 (ivy-index 0)) "pdf-view-mode" #("^pdf-vi" 0 7 (ivy-index 0)) #("^pdf-t" 0 6 (ivy-index 6)) "pdf-tools-enable-minor-modes" #("^try" 0 4 (ivy-index 0)) "try" #("^r" 0 2 (ivy-index 1)) "R" #("^R" 0 2 (ivy-index 1)) "R-mode" #("^dape" 0 5 (ivy-index 0)) "dape-continue" #("^elpy-mo" 0 8 (ivy-index 1)) "elpy-mode" #("^elpy-ena" 0 9 (ivy-index 0)) "elpy-enable" #("^elpy-dis" 0 9 (ivy-index 0)) "elpy-disable" #("^elpy" 0 5 (ivy-index 0)) #("^elpy-shell-send" 0 16 (ivy-index 2)) "elpy-shell-send-file" "elpy-shell-send-buffer" "elpy-shell-send-statement-and-step" #("^elpy-con" 0 9 (ivy-index 0)) "elpy-config" #("^elpy-s" 0 7 (ivy-index 11)) "elpy-shell-send-defun-and-go" #("^run-p" 0 6 (ivy-index 1)) "run-python" #("^sql-post" 0 9 (ivy-index 0)) #("^unta" 0 5 (ivy-index 0)) "untabify" #("^package-inst" 0 13 (ivy-index 0)) #("^elpy-mode" 0 10 (ivy-index 0)) #("^elpy-mod" 0 9 (ivy-index 1)) #("^auto-com" 0 9 (ivy-index 2)) "auto-complete-mode" #("^auto" 0 5 (ivy-index 3)) "auto-complete" #("^elpy-c" 0 7 (ivy-index 1)) #("^elpy-conf" 0 10 (ivy-index 0)) #("^elpy-confi" 0 11 (ivy-index 0)) #("^nyan" 0 5 (ivy-index 4)) "nyan-start-animation" "nyan-start-music" "nyan-mode" "nyan-scroll-buffer" #("^nya" 0 4 (ivy-index 1)) "nyan-toggle-wavy-trail" #("nyan-" 0 5 (ivy-index 7)) #("^spaceline-toggle-n" 0 19 (ivy-index 1)) "spaceline-toggle-nyan-cat-on" "spaceline-toggle-nyan-cat" "elpy-autopep8-fix-code" #("^elpy-menu" 0 10 (ivy-index 0)) "elpy-menu" #("^elpy-" 0 6 (ivy-index 16)) "elpy-check" #("^elpy-config" 0 12 (ivy-index 0)) #("^elpy-en" 0 8 (ivy-index 0)) #("^pyve" 0 5 (ivy-index 5)) "pyvenv-workon" #("^pyvenv" 0 7 (ivy-index 6)) "pyvenv-activate" #("^elpy-rpc" 0 9 (ivy-index 1)) "elpy-rpc-restart" #("^elpy-rp" 0 8 (ivy-index 1)) #("^ansi" 0 5 (ivy-index 1)) "ansi-term" #("^python-mo" 0 10 (ivy-index 0)) #("^sql" 0 4 (ivy-index 1)) #("^conf-mo" 0 8 (ivy-index 0)) "conf-mode" #("linu" 0 4 (ivy-index 0)) "linum-mode" #("^sql-hel" 0 8 (ivy-index 0)) "sql-help" #("^sql-set" 0 8 (ivy-index 1)) "sql-set-sqli-buffer" "sql-set-product" #("^sql-mode" 0 9 (ivy-index 0)) "sql-mode" #("^ter" 0 4 (ivy-index 0)) #("^markdown-pre" 0 13 (ivy-index 0)) "markdown-preview-cleanup" #("^markdown-previ" 0 15 (ivy-index 1)) "markdown-preview" "markdown-preview-mode" "markdown-preview-open-browser" #("^markdown-vi" 0 12 (ivy-index 0)) "markdown-view-mode" #("^markdown-v" 0 11 (ivy-index 0)) #("^markdown-p" 0 11 (ivy-index 0)) #("^markdown-mode" 0 14 (ivy-index 2)) "markdown-mode" #("^markdo" 0 7 (ivy-index 2)) #("^ra" 0 3 (ivy-index 1)) #("^conf-mod" 0 9 (ivy-index 0)) #("^myter" 0 6 (ivy-index 1)) "myterminal-controls-open-controls" #("^magit-rebase" 0 13 (ivy-index 2)) "magit-rebase" #("^magit-log-current" 0 18 (ivy-index 0)) "magit-log-current" #("^magit-log --g" 0 14 (ivy-index 0)) "magit-log:--grep" #("^magit-lo" 0 9 (ivy-index 1)) "magit-log:-G" #("^magit-log" 0 10 (ivy-index 8)) "magit-log" #("^centaur-tabs-mode" 0 18 (ivy-index 0)) "centaur-tabs-mode" #("^centaur-tabs-g" 0 15 (ivy-index 0)) "centaur-tabs-group-buffer-groups" #("^magit-merge" 0 12 (ivy-index 3)) "magit-merge" #("^magit-status" 0 13 (ivy-index 2)) #("^rainb" 0 6 (ivy-index 0)) #("^ansi-" 0 6 (ivy-index 1)) #("^conf-mode" 0 10 (ivy-index 0)) #("^magit-stat" 0 11 (ivy-index 2)) #("^ansi-te" 0 8 (ivy-index 0)) #("^java" 0 5 (ivy-index 1)) "javascript-mode" #("^customize-va" 0 13 (ivy-index 0)) "customize-variable" #("^indent-gui" 0 11 (ivy-index 0)) "indent-guide-mode" #("^package-lis" 0 12 (ivy-index 0)) "package-list-packages" #("^web-mode" 0 9 (ivy-index 82)) "web-mode" #("ansi" 0 4 (ivy-index 2)) #("^cua" 0 4 (ivy-index 5)) "cua-toggle-rectangle-mark" "cua-paste" "cua-paste-pop" "cua-cut-region" #("^cua-sc" 0 7 (ivy-index 1)) "cua-scroll-down" #("^cua-s" 0 6 (ivy-index 2)) "cua-selection-mode"))
(setq swiper-history '("indent" #("indent" 0 6 (ivy-index 16)) #("   indent-guide                   20160630       available    melpa-stable show vertical lines to guide indentation" 0 1 (display "1665 " swiper-line-number 1665) 1 3 (tabulated-list-entry [("indent-guide" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) action package-menu-describe-package) #("20160630" 0 8 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa-stable" 0 12 (font-lock-face package-status-available)) #("show vertical lines to guide indentation" 0 40 (font-lock-face package-description))] tabulated-list-id #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil)) 3 15 (tabulated-list-entry [("indent-guide" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) action package-menu-describe-package) #("20160630" 0 8 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa-stable" 0 12 (font-lock-face package-status-available)) #("show vertical lines to guide indentation" 0 40 (font-lock-face package-description))] tabulated-list-id #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) tabulated-list-column-name "Package" action package-menu-describe-package package-desc #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) follow-link t font-lock-face package-name face package-name category default-button button (t)) 15 16 (tabulated-list-entry [("indent-guide" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) action package-menu-describe-package) #("20160630" 0 8 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa-stable" 0 12 (font-lock-face package-status-available)) #("show vertical lines to guide indentation" 0 40 (font-lock-face package-description))] tabulated-list-id #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) tabulated-list-column-name "Package") 16 34 (tabulated-list-entry [("indent-guide" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) action package-menu-describe-package) #("20160630" 0 8 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa-stable" 0 12 (font-lock-face package-status-available)) #("show vertical lines to guide indentation" 0 40 (font-lock-face package-description))] tabulated-list-id #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) tabulated-list-column-name "Package" display (space :align-to 33)) 34 42 (tabulated-list-entry [("indent-guide" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) action package-menu-describe-package) #("20160630" 0 8 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa-stable" 0 12 (font-lock-face package-status-available)) #("show vertical lines to guide indentation" 0 40 (font-lock-face package-description))] tabulated-list-id #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) tabulated-list-column-name "Version" help-echo #("Version: 20160630" 9 17 (font-lock-face package-status-available)) font-lock-face package-status-available) 42 43 (tabulated-list-entry [("indent-guide" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) action package-menu-describe-package) #("20160630" 0 8 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa-stable" 0 12 (font-lock-face package-status-available)) #("show vertical lines to guide indentation" 0 40 (font-lock-face package-description))] tabulated-list-id #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) tabulated-list-column-name "Version") 43 49 (tabulated-list-entry [("indent-guide" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) action package-menu-describe-package) #("20160630" 0 8 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa-stable" 0 12 (font-lock-face package-status-available)) #("show vertical lines to guide indentation" 0 40 (font-lock-face package-description))] tabulated-list-id #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) tabulated-list-column-name "Version" display (space :align-to 48)) 49 58 (tabulated-list-entry [("indent-guide" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) action package-menu-describe-package) #("20160630" 0 8 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa-stable" 0 12 (font-lock-face package-status-available)) #("show vertical lines to guide indentation" 0 40 (font-lock-face package-description))] tabulated-list-id #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) tabulated-list-column-name "Status" help-echo #("Status: available" 8 17 (font-lock-face package-status-available)) font-lock-face package-status-available) 58 59 (tabulated-list-entry [("indent-guide" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) action package-menu-describe-package) #("20160630" 0 8 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa-stable" 0 12 (font-lock-face package-status-available)) #("show vertical lines to guide indentation" 0 40 (font-lock-face package-description))] tabulated-list-id #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) tabulated-list-column-name "Status") 59 62 (tabulated-list-entry [("indent-guide" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) action package-menu-describe-package) #("20160630" 0 8 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa-stable" 0 12 (font-lock-face package-status-available)) #("show vertical lines to guide indentation" 0 40 (font-lock-face package-description))] tabulated-list-id #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) tabulated-list-column-name "Status" display (space :align-to 61)) 62 69 (tabulated-list-entry [("indent-guide" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) action package-menu-describe-package) #("20160630" 0 8 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa-stable" 0 12 (font-lock-face package-status-available)) #("show vertical lines to guide indentation" 0 40 (font-lock-face package-description))] tabulated-list-id #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) tabulated-list-column-name "Archive" help-echo #("Archive: melpa-stable" 9 21 (font-lock-face package-status-available)) font-lock-face package-status-available) 69 74 (tabulated-list-entry [("indent-guide" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) action package-menu-describe-package) #("20160630" 0 8 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa-stable" 0 12 (font-lock-face package-status-available)) #("show vertical lines to guide indentation" 0 40 (font-lock-face package-description))] tabulated-list-id #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) tabulated-list-column-name "Archive" help-echo #("Archive: melpa-stable" 9 21 (font-lock-face package-status-available)) display "…" font-lock-face package-status-available) 74 75 (tabulated-list-entry [("indent-guide" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) action package-menu-describe-package) #("20160630" 0 8 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa-stable" 0 12 (font-lock-face package-status-available)) #("show vertical lines to guide indentation" 0 40 (font-lock-face package-description))] tabulated-list-id #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) tabulated-list-column-name "Archive") 75 115 (tabulated-list-entry [("indent-guide" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) action package-menu-describe-package) #("20160630" 0 8 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa-stable" 0 12 (font-lock-face package-status-available)) #("show vertical lines to guide indentation" 0 40 (font-lock-face package-description))] tabulated-list-id #s(package-desc indent-guide (20160630) "show vertical lines to guide indentation" nil tar "melpa-stable" nil ((:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:authors ("zk_phi")) (:maintainers ("zk_phi")) (:maintainer "zk_phi") (:url . "http://hins11.yu-yake.com/")) nil) tabulated-list-column-name "Description" help-echo #("Description: show vertical lines to guide indentation" 13 53 (font-lock-face package-description)) font-lock-face package-description)) "scheme[SchemeNorm][ColBg" #("scheme[SchemeNorm][ColB" 0 23 (ivy-index 8)) #(" 	XSetForeground(dpy, drw->gc, scheme[SchemeNorm][ColBg].pixel);" 0 1 (display "2761 " swiper-line-number 2761) 1 2 (c-is-sws t fontified t) 2 3 (fontified t c-is-sws t) 3 49 (fontified t) 49 50 (fontified t) 50 51 (fontified t) 51 52 (fontified t) 52 53 (fontified t) 53 54 (fontified t) 54 55 (fontified t) 55 56 (fontified t) 56 57 (fontified t) 57 58 (fontified t) 58 59 (fontified t) 59 60 (fontified t) 60 61 (fontified t) 61 62 (fontified t) 62 63 (fontified t) 63 64 (rear-nonsticky t fontified t)) #("updatesys" 0 9 (ivy-index 18)) #(" updatesystray(void)" 0 1 (display "2700 " swiper-line-number 2700) 1 14 (face font-lock-function-name-face fontified t) 14 15 (c-type c-decl-arg-start fontified t) 15 19 (face font-lock-type-face fontified t) 19 20 (fontified t)) #("mai" 0 3 (ivy-index 0)) #(" main(int argc, char *argv[])" 0 1 (display "814 " swiper-line-number 814) 1 5 (face font-lock-function-name-face fontified t) 5 6 (c-type c-decl-arg-start fontified t) 6 9 (face font-lock-type-face fontified t) 9 10 (fontified t) 10 14 (face font-lock-variable-name-face fontified t) 14 15 (c-type c-decl-arg-start fontified t) 15 16 (fontified t) 16 20 (face font-lock-type-face fontified t) 20 22 (fontified t) 22 26 (face font-lock-variable-name-face fontified t) 26 29 (fontified t))))
(setq ido-buffer-history '("config.h" "config.def.h" "100-graficos-tabelas-uni.R" "*SQL: MariaDB*" "achemaior.py" "sl-wttr.sh" "*Python*" "*terminal*" "dmenu-docker-images" "dmenu-power" "dmenu-atalhos-programas" "equacao_segundo_grau.py" "media_aritimetica_3_valores.py" "calcula_raiz_de_3_numeros.py" "teste.py" "*Elpy Config*" "*Customize Option: Python Flymake Command*" "if_monitor.sh" "*ansi-term*" "dmenu-teclados" "config.def.h<slstatus>" "tabela_funcionarios.sql" "aula001.sql" "banco-inicial.sql" "*SQL: Postgres*" "dmenu-docker-compose.sh" "HELLO" "index.theme" "icon-theme.cache" "]" "action-unavailable-symbolic.svg" "autostart.sh" "dmenu-window" "battery_status.sh" "emacs.org" "init.el" "dunstrc" "*Compile-Log*" "picom.conf" "index.html" "config.mk" "Untitled<2>" "Untitled<3>" "Untitled" "myinit.org" "config" "muta_microfone" "config.def.h<.dwm>" "block-battery" "dwmbar-powerline" "diminui_volume" "muta_volume" "*scratch*" "*Messages*" "*Async-native-compile-log*" "*Warnings*" "magit-process: .dotfiles" "magit: .dotfiles" "volume_icon.sh" "app.js" "x.c" "x.c.rej" "config.def.h.rej" "config.def.h<st>"))
(setq file-name-history '(#("/home/anderson/git/Educacional/Programa_Desenvolve_Boticario/013_Python_Ciencia_Dados/Projeto_Python_Data_Science.ipynb" 0 119 (ivy-index 2)) #("/home/anderson/git/Educacional/UFPR_Estatistica/SobreviventesTitanic.r" 0 70 (ivy-index 0)) #("/home/anderson/git/Educacional/Programa_Desenvolve_Boticario/007_PostgreSQL/" 0 76 (ivy-index 9)) #("/home/anderson/git;Edu" 0 22 (ivy-index 0)) #("/home/anderson/git/Educacional/UFPR_Estatistica/CE301_Estatistica_Basica/histograma_em_r.r" 0 90 (ivy-index 0)) "~/git/Educacional/Programa_Desenvolve_Boticario/012_PowerBI_Tratamento_Dados/power_query_dump.sql" "~/git/win10vm/win10.xml" #("/home/anderson/.dwm/autostart.sh" 0 32 (ivy-index 0)) #("/home/anderson/.config/slstatus/" 0 32 (ivy-index 0)) #("/home/anderson/git/Educacional/UFPR_Estatistica/CE301_Estatistica_Basica/100-graficos-tabelas-uni.R" 0 99 (ivy-index 14)) #("/home/anderson/git/Educacional/UFPR_Estatistica/CE301_Estatistica_Basica/Livro_Estatitica_Basica/testes.r" 0 105 (ivy-index 0)) #("/home/anderson/git/Educacional/UFPR_Estatistica/CE301_Estatistica_Basica/" 0 73 (ivy-index 4)) #("/var/spool/cron/crontabs/anderson" 0 33 (ivy-index 0)) #("/var/spool/cron/crontabs/" 0 25 (ivy-index 2)) "/tmp/crontab.uSJaXd/crontab" "/tmp/crontab.vtEVge/crontab" "/home/anderson/.dotfiles/.local/bin/sl-wttr.sh~" #("/home/anderson/.dotfiles/.config/slstatus/" 0 42 (ivy-index 1)) #("/home/anderson/git/Educacional/UFPR_Estatistica/CE301_Estatistica_Basica/101-medidas-uni.R" 0 90 (ivy-index 0)) #("/home/anderson/.dwm/config.def.h" 0 32 (ivy-index 0)) #("/home/anderson/.emacs.d/emacs.org" 0 33 (ivy-index 12)) "/home/anderson/.emacs.d/init.el" #("/home/anderson/git/Educacional/Programa_Desenvolve_Boticario/008_Postgres_views_funcoes_consultas/dados-aula-2.sql" 0 114 (ivy-index 5)) #("/home/anderson/git/Educacional/UFPR_Estatistica/CI182_Fundamentos_Programacao_Computadores/calcula_raiz_de_3_numeros.py" 0 119 (ivy-index 0)) "~/.emacs.d/emacs.org" #("/home/anderson/.dotfiles/.config/slstatus/config.def.h" 0 54 (ivy-index 0)) #("/home/anderson/.local/bin/battery_status.sh" 0 43 (ivy-index 1)) #("/home/anderson/teste.py" 0 23 (ivy-index 0)) #("/home/anderson/.dotfiles/.local/bin/dmenu/" 0 42 (ivy-index 2)) #("/home/anderson/.dotfiles/.local/bin/dmenu/dmenu-docker-lista-funcionando" 0 72 (ivy-index 0)) #("/home/anderson/.dotfiles/.local/bin/dmenu/dmenu-atalhos-programas" 0 65 (ivy-index 0)) #("/home/anderson/.dotfiles/.local/bin/dmenu/dmenu-docker-images" 0 61 (ivy-index 4)) #("/home/anderson/dmenu-docker-compose.sh" 0 38 (ivy-index 2)) #("/home/anderson/.dotfiles/.dwm/config.def.h" 0 42 (ivy-index 0)) "/home/anderson/.emacs.d/myinit.org" #("/home/anderson/git/Educacional/Programa_Desenvolve_Boticario/007_PostgreSQL/tabela_funcionarios.sql" 0 99 (ivy-index 9)) "/home/anderson/.dotfiles/.config/dunst/dunstrc" #("/home/anderson/.local/bin/volume_icon.sh" 0 40 (ivy-index 6)) #("/home/anderson/git/Educacional/Programa_Desenvolve_Boticario/006_Git_Github/projeto_inicial/index.html" 0 102 (ivy-index 7)) #("/home/anderson/git/Educacional/Programa_Desenvolve_Boticario/006_Git_Github/projeto_inicial/app.js" 0 98 (ivy-index 3)) #("/home/anderson/.config/picom.conf" 0 33 (ivy-index 3)) #("/home/anderson/.dotfiles/.dwm/" 0 30 (ivy-index 0)) #("/home/anderson/.dotfiles/.Xresources" 0 36 (ivy-index 0)) #("/home/anderson/.config/st/config.def.h" 0 38 (ivy-index 0)) "~/.dotfiles/.emacs.d/init.el"))
(setq projectile-project-command-history '#s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("/home/anderson/git/Educacional/Programa_Desenvolve_Boticario/" (0 1 . ["" nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil]))))
(setq kill-ring '(#("#!/bin/bash

brightnessctl set 5%+
brilho=$(brightnessctl g)

notify-send -t 3000 \"Brilho aumentado em +5%\" \"Brilho total $brilho%\" --icon=\"/usr/share/icons/ePapirus/16x16/actions/brightnesssettings.svg\"" 0 1 (face font-lock-comment-delimiter-face) 1 7 (face font-lock-comment-face) 7 11 (face font-lock-keyword-face) 11 12 (face font-lock-comment-face) 82 107 (face font-lock-string-face) 108 131 (face font-lock-string-face) 139 180 (face font-lock-string-face) 202 203 (face font-lock-string-face)) "brightnesssettings.svg" "brightnessctl g" #("notify-send -t 3000 \"Volume microfone $volume\" \"Diminuído 5% do volume do microfone\" --icon=\"/usr/share/icons/ePapirus/16x16/devices/audio-input-microphone.svg\"
" 20 46 (face font-lock-string-face) 47 84 (face font-lock-string-face) 92 160 (face font-lock-string-face)) #("#!/bin/bash

pactl set-source-volume @DEFAULT_SOURCE@ -5%
volume=$(pactl get-source-volume @DEFAULT_SOURCE@ | grep \"Volume\" | awk '{print$5}' | sed 's/%//')

notify-send -t 3000 \"Volume microfone $volume\" \"Diminuído 5% do volume do microfone\" --icon=\"/usr/share/icons/ePapirus/16x16/devices/audio-input-microphone.svg\"
" 0 1 (fontified t face font-lock-comment-delimiter-face) 1 7 (fontified t face font-lock-comment-face) 7 11 (fontified t face font-lock-keyword-face) 11 12 (fontified t face font-lock-comment-face) 12 58 (fontified t) 58 64 (fontified t face font-lock-variable-name-face) 64 67 (fontified t) 67 115 (fontified t face sh-quoted-exec) 115 123 (fontified t face sh-quoted-exec) 123 130 (fontified t face sh-quoted-exec) 130 141 (fontified t face sh-quoted-exec) 141 148 (fontified t face sh-quoted-exec) 148 155 (fontified t face sh-quoted-exec) 155 178 (fontified t) 178 204 (fontified t face font-lock-string-face) 204 205 (fontified t) 205 242 (fontified t face font-lock-string-face) 242 250 (fontified t) 250 318 (fontified t face font-lock-string-face) 318 319 (fontified t)) "static const char *roficmd[]   = { \"/bin/sh\", \"-c\", \"rofi -m -4 -modi 'window,drun,ssh,combi' -font 'Comic code 15' -show drun -icon-theme 'Gruvbox' -show-icons -theme 'gruvbox-dark' -sidebar-mode\", NULL };
static const char *termcmd[]   = { \"st\", NULL };

/* scratch pad */
static const char scratchpadname[] = \"scratchpad\";
static const char *scratchpadcmd[] = { \"st\", \"-t\", scratchpadname, \"-g\", \"120x34\", NULL };

/* brilho da tela */
//static const char *brighter[] = { \"brightnessctl\", \"set\", \"10%+\", NULL };
//static const char *dimmer[]   = { \"brightnessctl\", \"set\", \"10%-\", NULL };
" #("	{ 0,				XF86XK_MonBrightnessUp,		spawn,          SHCMD(\"~/.local/bin/brilho_tela_aumenta\") },
	{ 0,				XF86XK_MonBrightnessDown,	spawn,          SHCMD(\"~/.local/bin/brilho_tela_diminui\") },
	//{ 0,                            XF86XK_MonBrightnessDown,       spawn,          {.v = dimmer } },
	//{ 0,                            XF86XK_MonBrightnessUp,         spawn,          {.v = brighter } }," 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 29 (fontified t) 29 30 (fontified t) 30 31 (fontified t) 31 32 (fontified t) 32 33 (fontified t) 33 34 (fontified t) 34 39 (fontified t) 39 40 (fontified t) 40 56 (fontified t) 56 70 (fontified t face font-lock-string-face) 70 71 (fontified t face font-lock-string-face) 71 72 (fontified t face font-lock-string-face) 72 73 (fontified t face font-lock-string-face) 73 74 (fontified t face font-lock-string-face) 74 75 (fontified t face font-lock-string-face) 75 76 (fontified t face font-lock-string-face) 76 77 (fontified t face font-lock-string-face) 77 78 (fontified t face font-lock-string-face) 78 79 (fontified t face font-lock-string-face) 79 80 (fontified t face font-lock-string-face) 80 81 (fontified t face font-lock-string-face) 81 82 (fontified t face font-lock-string-face) 82 83 (fontified t face font-lock-string-face) 83 84 (fontified t face font-lock-string-face) 84 85 (fontified t face font-lock-string-face) 85 86 (fontified t face font-lock-string-face) 86 87 (fontified t face font-lock-string-face) 87 88 (fontified t face font-lock-string-face) 88 89 (fontified t face font-lock-string-face) 89 90 (fontified t face font-lock-string-face) 90 93 (fontified t) 93 94 (rear-nonsticky t fontified t) 94 95 (fontified t) 95 96 (fontified t) 96 97 (fontified t) 97 98 (fontified t) 98 99 (fontified t) 99 100 (fontified t) 100 101 (fontified t) 101 102 (fontified t) 102 103 (fontified t) 103 104 (fontified t) 104 124 (fontified t) 124 125 (fontified t) 125 126 (fontified t) 126 127 (fontified t) 127 128 (fontified t) 128 129 (fontified t) 129 130 (fontified t) 130 135 (fontified t) 135 136 (fontified t) 136 152 (fontified t) 152 164 (fontified t face font-lock-string-face) 164 166 (fontified t face font-lock-string-face) 166 167 (fontified t face font-lock-string-face) 167 168 (fontified t face font-lock-string-face) 168 169 (fontified t face font-lock-string-face) 169 170 (fontified t face font-lock-string-face) 170 171 (fontified t face font-lock-string-face) 171 172 (fontified t face font-lock-string-face) 172 173 (fontified t face font-lock-string-face) 173 174 (fontified t face font-lock-string-face) 174 175 (fontified t face font-lock-string-face) 175 176 (fontified t face font-lock-string-face) 176 177 (fontified t face font-lock-string-face) 177 178 (fontified t face font-lock-string-face) 178 179 (fontified t face font-lock-string-face) 179 180 (fontified t face font-lock-string-face) 180 181 (fontified t face font-lock-string-face) 181 182 (fontified t face font-lock-string-face) 182 183 (fontified t face font-lock-string-face) 183 184 (fontified t face font-lock-string-face) 184 185 (fontified t face font-lock-string-face) 185 186 (fontified t face font-lock-string-face) 186 189 (fontified t) 189 190 (rear-nonsticky t fontified t) 190 191 (fontified t) 191 192 (c-in-sws t c-is-sws t fontified t) 192 193 (c-in-sws t c-is-sws t fontified t face font-lock-comment-delimiter-face) 193 194 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 194 291 (c-in-sws t fontified t face font-lock-comment-face) 291 292 (c-in-sws t fontified t face font-lock-comment-face) 292 293 (c-in-sws t fontified t) 293 294 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 294 295 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 295 296 (c-in-sws t fontified t face font-lock-comment-face) 296 394 (c-in-sws t fontified t face font-lock-comment-face)) #("static const char *roficmd[]   = { \"/bin/sh\", \"-c\", \"rofi -m -4 -modi 'window,drun,ssh,combi' -font 'Comic code 15' -show drun -icon-theme 'Gruvbox' -show-icons -theme 'gruvbox-dark' -sidebar-mode\", NULL };
static const char *termcmd[]   = { \"st\", NULL };

/* scratch pad */
static const char scratchpadname[] = \"scratchpad\";
static const char *scratchpadcmd[] = { \"st\", \"-t\", scratchpadname, \"-g\", \"120x34\", NULL };

/* brilho da tela */
//static const char *brighter[] = { \"brightnessctl\", \"set\", \"10%+\", NULL };
//static const char *dimmer[]   = { \"brightnessctl\", \"set\", \"10%-\", NULL };
" 0 6 (fontified t face font-lock-keyword-face) 6 7 (fontified t) 7 12 (fontified t face font-lock-keyword-face) 12 13 (fontified t) 13 16 (fontified t face font-lock-type-face) 16 17 (fontified t c-type c-decl-id-start face font-lock-type-face) 17 19 (fontified t) 19 26 (fontified t face font-lock-variable-name-face) 26 35 (fontified t) 35 44 (fontified t face font-lock-string-face) 44 46 (fontified t) 46 50 (fontified t face font-lock-string-face) 50 52 (fontified t) 52 58 (fontified t face font-lock-string-face) 58 59 (fontified t face font-lock-string-face) 59 60 (fontified t face font-lock-string-face) 60 61 (fontified t face font-lock-string-face) 61 62 (fontified t face font-lock-string-face) 62 63 (fontified t face font-lock-string-face) 63 64 (fontified t face font-lock-string-face) 64 70 (fontified t face font-lock-string-face) 70 71 (fontified t syntax-table (1) face font-lock-string-face) 71 92 (fontified t face font-lock-string-face) 92 93 (fontified t syntax-table (1) face font-lock-string-face) 93 100 (fontified t face font-lock-string-face) 100 101 (fontified t syntax-table (1) face font-lock-string-face) 101 114 (fontified t face font-lock-string-face) 114 115 (fontified t syntax-table (1) face font-lock-string-face) 115 139 (fontified t face font-lock-string-face) 139 140 (fontified t syntax-table (1) face font-lock-string-face) 140 147 (fontified t face font-lock-string-face) 147 148 (fontified t syntax-table (1) face font-lock-string-face) 148 168 (fontified t face font-lock-string-face) 168 169 (fontified t syntax-table (1) face font-lock-string-face) 169 181 (fontified t face font-lock-string-face) 181 182 (fontified t syntax-table (1) face font-lock-string-face) 182 183 (fontified t face font-lock-string-face) 183 184 (fontified t face font-lock-string-face) 184 185 (fontified t face font-lock-string-face) 185 186 (fontified t face font-lock-string-face) 186 187 (fontified t face font-lock-string-face) 187 188 (fontified t face font-lock-string-face) 188 189 (fontified t face font-lock-string-face) 189 190 (fontified t face font-lock-string-face) 190 191 (fontified t face font-lock-string-face) 191 192 (fontified t face font-lock-string-face) 192 193 (fontified t face font-lock-string-face) 193 194 (fontified t face font-lock-string-face) 194 195 (fontified t face font-lock-string-face) 195 196 (fontified t face font-lock-string-face) 196 197 (fontified t face font-lock-string-face) 197 199 (fontified t) 199 203 (fontified t face font-lock-constant-face) 203 207 (fontified t) 207 213 (fontified t face font-lock-keyword-face) 213 214 (fontified t) 214 219 (fontified t face font-lock-keyword-face) 219 220 (fontified t) 220 223 (fontified t face font-lock-type-face) 223 224 (fontified t c-type c-decl-id-start face font-lock-type-face) 224 226 (fontified t) 226 233 (fontified t face font-lock-variable-name-face) 233 242 (fontified t) 242 246 (fontified t face font-lock-string-face) 246 248 (fontified t) 248 252 (fontified t face font-lock-constant-face) 252 257 (fontified t) 257 258 (fontified t face font-lock-comment-delimiter-face c-in-sws t c-is-sws t) 258 260 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 260 271 (fontified t face font-lock-comment-face c-in-sws t) 271 274 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 274 275 (fontified t c-in-sws t) 275 276 (fontified t face font-lock-keyword-face c-is-sws t) 276 281 (fontified t face font-lock-keyword-face) 281 282 (fontified t) 282 287 (fontified t face font-lock-keyword-face) 287 288 (fontified t) 288 291 (fontified t face font-lock-type-face) 291 292 (fontified t c-type c-decl-id-start face font-lock-type-face) 292 293 (fontified t) 293 307 (fontified t face font-lock-variable-name-face) 307 312 (fontified t) 312 324 (fontified t face font-lock-string-face) 324 326 (fontified t) 326 332 (fontified t face font-lock-keyword-face) 332 333 (fontified t) 333 338 (fontified t face font-lock-keyword-face) 338 339 (fontified t) 339 342 (fontified t face font-lock-type-face) 342 343 (fontified t c-type c-decl-id-start face font-lock-type-face) 343 345 (fontified t) 345 358 (fontified t face font-lock-variable-name-face) 358 365 (fontified t) 365 369 (fontified t face font-lock-string-face) 369 371 (fontified t) 371 375 (fontified t face font-lock-string-face) 375 393 (fontified t) 393 397 (fontified t face font-lock-string-face) 397 399 (fontified t) 399 407 (fontified t face font-lock-string-face) 407 409 (fontified t) 409 413 (fontified t face font-lock-constant-face) 413 418 (fontified t) 418 419 (fontified t c-in-sws t c-is-sws t face font-lock-comment-delimiter-face) 419 421 (fontified t c-in-sws t face font-lock-comment-delimiter-face) 421 435 (fontified t c-in-sws t face font-lock-comment-face) 435 438 (fontified t c-in-sws t face font-lock-comment-delimiter-face) 438 439 (fontified t c-in-sws t) 439 440 (fontified t c-in-sws t face font-lock-comment-delimiter-face) 440 441 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 441 442 (fontified t face font-lock-comment-face c-in-sws t) 442 447 (fontified t face font-lock-comment-face c-in-sws t) 447 448 (fontified t face font-lock-comment-face c-in-sws t) 448 453 (fontified t face font-lock-comment-face c-in-sws t) 453 454 (fontified t face font-lock-comment-face c-in-sws t) 454 457 (fontified t face font-lock-comment-face c-in-sws t) 457 458 (fontified t face font-lock-comment-face c-in-sws t) 458 460 (fontified t face font-lock-comment-face c-in-sws t) 460 468 (fontified t face font-lock-comment-face c-in-sws t) 468 475 (fontified t face font-lock-comment-face c-in-sws t) 475 490 (fontified t face font-lock-comment-face c-in-sws t) 490 492 (fontified t face font-lock-comment-face c-in-sws t) 492 497 (fontified t face font-lock-comment-face c-in-sws t) 497 499 (fontified t face font-lock-comment-face c-in-sws t) 499 505 (fontified t face font-lock-comment-face c-in-sws t) 505 507 (fontified t face font-lock-comment-face c-in-sws t) 507 511 (fontified t face font-lock-comment-face c-in-sws t) 511 514 (fontified t face font-lock-comment-face c-in-sws t) 514 515 (fontified t face font-lock-comment-face c-in-sws t) 515 516 (fontified t face font-lock-comment-delimiter-face c-is-sws t) 516 517 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 517 518 (fontified t face font-lock-comment-face c-in-sws t) 518 523 (fontified t face font-lock-comment-face c-in-sws t) 523 524 (fontified t face font-lock-comment-face c-in-sws t) 524 529 (fontified t face font-lock-comment-face c-in-sws t) 529 530 (fontified t face font-lock-comment-face c-in-sws t) 530 533 (fontified t face font-lock-comment-face c-in-sws t) 533 534 (fontified t face font-lock-comment-face c-in-sws t) 534 536 (fontified t face font-lock-comment-face c-in-sws t) 536 542 (fontified t face font-lock-comment-face c-in-sws t) 542 551 (fontified t face font-lock-comment-face c-in-sws t) 551 566 (fontified t face font-lock-comment-face c-in-sws t) 566 568 (fontified t face font-lock-comment-face c-in-sws t) 568 573 (fontified t face font-lock-comment-face c-in-sws t) 573 575 (fontified t face font-lock-comment-face c-in-sws t) 575 581 (fontified t face font-lock-comment-face c-in-sws t) 581 583 (fontified t face font-lock-comment-face c-in-sws t) 583 587 (fontified t face font-lock-comment-face c-in-sws t) 587 590 (fontified t face font-lock-comment-face c-in-sws t) 590 591 (fontified t face font-lock-comment-face c-in-sws t)) #("	{0,				XF86XK_MonBrightnessUp,		spawn,          SHCMD(\"~/.local/bin/dmenu/brilho_tela_aumenta\") }," 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 28 (fontified t) 28 29 (fontified t) 29 30 (fontified t) 30 31 (fontified t) 31 32 (fontified t) 32 33 (fontified t) 33 38 (fontified t) 38 39 (fontified t) 39 55 (fontified t) 55 75 (fontified t face font-lock-string-face) 75 76 (fontified t face font-lock-string-face) 76 77 (fontified t face font-lock-string-face) 77 78 (fontified t face font-lock-string-face) 78 79 (fontified t face font-lock-string-face) 79 80 (fontified t face font-lock-string-face) 80 81 (fontified t face font-lock-string-face) 81 82 (fontified t face font-lock-string-face) 82 83 (fontified t face font-lock-string-face) 83 84 (fontified t face font-lock-string-face) 84 85 (fontified t face font-lock-string-face) 85 86 (fontified t face font-lock-string-face) 86 87 (fontified t face font-lock-string-face) 87 88 (fontified t face font-lock-string-face) 88 89 (fontified t face font-lock-string-face) 89 90 (fontified t face font-lock-string-face) 90 91 (fontified t face font-lock-string-face) 91 92 (fontified t face font-lock-string-face) 92 93 (fontified t face font-lock-string-face) 93 94 (fontified t face font-lock-string-face) 94 95 (fontified t face font-lock-string-face) 95 98 (fontified t) 98 99 (fontified t rear-nonsticky t)) #("spawn,          SHCMD(\"~/.local/bin/dmenu/dmenu-atalhos-programas\") }," 0 5 (fontified t) 5 6 (fontified t c-type c-not-decl) 6 22 (fontified t) 22 66 (fontified t face font-lock-string-face) 66 70 (fontified t)) #("rofi -modi 'window,drun,ssh,combi' -font 'Comic code 15' -show drun -icon-theme 'Gruvbox' -show-icons -theme 'gruvbox-dark' " 0 11 (fontified t face font-lock-string-face) 11 12 (syntax-table (1) fontified t face font-lock-string-face) 12 33 (fontified t face font-lock-string-face) 33 34 (syntax-table (1) fontified t face font-lock-string-face) 34 41 (fontified t face font-lock-string-face) 41 42 (syntax-table (1) fontified t face font-lock-string-face) 42 55 (fontified t face font-lock-string-face) 55 56 (syntax-table (1) fontified t face font-lock-string-face) 56 80 (fontified t face font-lock-string-face) 80 81 (syntax-table (1) fontified t face font-lock-string-face) 81 88 (fontified t face font-lock-string-face) 88 89 (syntax-table (1) fontified t face font-lock-string-face) 89 109 (fontified t face font-lock-string-face) 109 110 (syntax-table (1) fontified t face font-lock-string-face) 110 122 (fontified t face font-lock-string-face) 122 123 (syntax-table (1) fontified t face font-lock-string-face) 123 124 (fontified t face font-lock-string-face))))
(setq search-ring '(#("/" 0 1 (isearch-case-fold-search t isearch-regexp-function nil))))
(setq regexp-search-ring '("indent" "scheme\\[SchemeNorm]\\[ColB" "updatesys" "mai"))
